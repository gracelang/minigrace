Minigrace should compile on any POSIX-compatible system with node.js
version 10 or greater.

First clone the git repository, and then execute

    make npm-get-kg

Here, "kg" stands for "known-good".  The git repository
can be cloned with:

    git clone git://github.com/gracelang/minigrace.git
or:

    git clone https://github.com/gracelang/minigrace.git

To build the most recent development version of minigrace,
clone the git repository, and then execute

    make minigrace

This will download a known-good version using npm, as
above, and then use this verison of minigrace to compile
the current source tree.

After the first build you should be able to `git pull`
and `make`.  You will sometimes need to `make clean`
when an incompatible change has occured.


The build process
-----------------

There is a folk-theorem that if a self-hosting system can compile itself
three times, then it is correct.  This theorem is of course false, but
compiling three times does give one some confidence that _the features 
of minigrace exercised by he minigrace compiler_ are being compiled
correctly.  (It does nothing at all for the features of minigrace not
exercised by the compiler, such as minigrace's behaviour when given
non-programs, or dialects).

The subdirectory js-kg comptains old but working javascript versions
of the minigrace compiler. The version identified by
the NPM_STABLE_VERSION variable in the makefile is used to compile the
compiler.  The output of this compilation is stored in the j1
subdirectory.

If this is successful, then the j1/minigrace-js compiler is used to
compile the compiler again; the resulting files are saved the the j2
directory.

If you run

    make test

the j2 compiler will be used to run minigrace's test suite.

Finally, if you run

    make self.test

the j2/minigrace compiler is used to compile the compiler once
again. The resulting compiler is then used to run the test suite again.

Post-build
----------
The `make test` target will run the test suite. All tests are expected
to pass; if any do not, please send the js/tests/test.js.log file to the
author.

The `make module.test` target will run tests against all of the grace
modules in the modules subdirectory.

`make alltest` will run the tests, the module tests, and the self-test.

Installation
------------
The `make install` target will install the mgc executable and
its libraries into the location you specified in the PREFIX
environment variable, or /usr if PREFIX is not set. If $PREFIX/bin
is on your path after this you will be able to run `mgc` from anywhere.

Once a js executable for your Grace prohgram has been generated, mgc will
normally run your program once.
If you want to run it again without recompiling, the command

    grace compiledFile.js

will do so.  There is also a script

    grace-debug

that can be used to run a compiled file under the Javascript debugger
in Chrome.  This requires that node-inspector be installed, and that Chrome
is your default web browser.  At present there is no debugger for minigrace.

Platform notes
--------------
Most development has taken place on MacOS X.  minigrace has
also been successfully built on Linux.  I don't know if it will
work on Cygwin; if you can test it, and provide necessary corrections,
please do so and submit a pull request.



