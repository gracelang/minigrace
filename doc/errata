Minigrace supports most of the specified language.  It does nto yet include
a static type-checker. It also does not support:

- Overriding the if-then-else construct: only the built-in `if` construct may
  begin with "if(_)". In contrast, `for(_)do(_)` and `while(_)do(_)` are
  ordinary methods.

Some functionality is incomplete:
- Runtime type checks are "single level": they check the methods available on
  arguments, but do not recursively check the types of the argumenst and results.
  This restriction applies to pattern-matching and to gradual checks at method
  boundaries.
- Numeric literals in non-decimal bases may only be integral.
- Interpolated code inside string literals may not contain a right brace
  in any context.
- Visibility annotations are checked dynamically, but not statically
- Types are checked dynamically, but constraints on type parameters are
  not checked.


Certain environment variables affect the behaviour of running Grace
programs:
- GRACE_MODULE_PATH is used to find dynamic modules.
