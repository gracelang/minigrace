"use strict";
var___95__prelude = do_import("StandardPrelude", gracecode_StandardPrelude);
function gracecode_lexer() {
  setModuleName("lexer");
  this.definitionModule = "lexer";
  this.definitionLine = 0;
  var var_prelude = var___95__prelude;
  this.outer = var_prelude;
  var reader_lexer_outer0 = function() {
    return this.outer;
  };
  this.methods["outer"] = reader_lexer_outer0;
  setLineNumber(2);    // compilenode import
  // Import of util as util
  if (typeof gracecode_util == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module util'));
  var var_util = do_import("util", gracecode_util);
  var func1 = function(argcv) {    // method util
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    if (argcv[0] !== 0)
      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for util"));
    setModuleName("lexer");
    // util is a simple accessor - elide try ... catch
    return var_util;
  };
  func1.paramCounts = [0];
  this.methods["util"] = func1;
  func1.definitionLine = 2;
  func1.definitionModule = "lexer";
  func1.debug = "import";
  func1.confidential = true;
  setModuleName("lexer");
  setLineNumber(3);    // compilenode import
  // Import of unicode as unicode
  if (typeof gracecode_unicode == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module unicode'));
  var var_unicode = do_import("unicode", gracecode_unicode);
  var func2 = function(argcv) {    // method unicode
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    if (argcv[0] !== 0)
      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for unicode"));
    setModuleName("lexer");
    // unicode is a simple accessor - elide try ... catch
    return var_unicode;
  };
  func2.paramCounts = [0];
  this.methods["unicode"] = func2;
  func2.definitionLine = 3;
  func2.definitionModule = "lexer";
  func2.debug = "import";
  func2.confidential = true;
  setModuleName("lexer");
  setLineNumber(4);    // compilenode import
  // Import of errormessages as errormessages
  if (typeof gracecode_errormessages == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module errormessages'));
  var var_errormessages = do_import("errormessages", gracecode_errormessages);
  var func3 = function(argcv) {    // method errormessages
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    if (argcv[0] !== 0)
      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for errormessages"));
    setModuleName("lexer");
    // errormessages is a simple accessor - elide try ... catch
    return var_errormessages;
  };
  func3.paramCounts = [0];
  this.methods["errormessages"] = func3;
  func3.definitionLine = 4;
  func3.definitionModule = "lexer";
  func3.debug = "import";
  func3.confidential = true;
  setModuleName("lexer");
  setLineNumber(5);    // compilenode import
  // Import of stringMap as map
  if (typeof gracecode_stringMap == 'undefined')
    throw new GraceExceptionPacket(EnvironmentExceptionObject, 
      new GraceString('could not find module stringMap'));
  var var_map = do_import("stringMap", gracecode_stringMap);
  var func4 = function(argcv) {    // method map
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    if (argcv[0] !== 0)
      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for map"));
    setModuleName("lexer");
    // map is a simple accessor - elide try ... catch
    return var_map;
  };
  func4.paramCounts = [0];
  this.methods["map"] = func4;
  func4.definitionLine = 5;
  func4.definitionModule = "lexer";
  func4.debug = "import";
  func4.confidential = true;
  setModuleName("lexer");
  setLineNumber(28);    // compilenode method
  var func5 = function(argcv) {    // method padl(3)
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    var var_s = arguments[curarg];
    curarg++;
    var var_l = arguments[curarg];
    curarg++;
    var var_w = arguments[curarg];
    curarg++;
    if (argcv[0] !== 3)
      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for padl(3)"));
    setModuleName("lexer");
    var if6 = GraceDone;
    setLineNumber(29);    // compilenode identifier
    var call8 = callmethodChecked(var_s, "size", [0]);
    var opresult10 = callmethodChecked(call8, "\u2265", [1], var_l);
    if (Grace_isTrue(opresult10)) {
      setLineNumber(30);    // compilenode identifier
      return var_s;
    }
    setLineNumber(32);    // compilenode identifier
    var var_s__39__ = var_s;
    setLineNumber(33);    // compilenode block
    var block11 = new GraceBlock(this, 33, 0);
    block11.real = function() {
      var call13 = callmethodChecked(var_s__39__, "size", [0]);
      var opresult15 = callmethodChecked(call13, "<", [1], var_l);
      return opresult15;
    };
    var block16 = new GraceBlock(this, 33, 0);
    block16.real = function() {
      setLineNumber(34);    // compilenode identifier
      var opresult19 = callmethodChecked(var_w, "++", [1], var_s__39__);
      var_s__39__ = opresult19;
      return GraceDone;
    };
    var call20 = callmethodChecked(var_prelude, "while()do", [1, 1], block11, block16);
    setLineNumber(36);    // compilenode identifier
    return var_s__39__;
  };
  func5.paramCounts = [3];
  this.methods["padl"] = func5;
  func5.definitionLine = 28;
  func5.definitionModule = "lexer";
  setLineNumber(39);    // compilenode method
  var func21 = function(argcv) {    // method new
    var returnTarget = invocationCount;
    invocationCount++;
    var curarg = 1;
    if (argcv[0] !== 0)
      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for new"));
    setModuleName("lexer");
    var obj22 = Grace_allocObject(GraceObject, "lexer.new");
    obj22.definitionModule = "lexer";
    obj22.definitionLine = 39;
    obj22.outer = this;
    var reader_lexer_outer23 = function() {
      return this.outer;
    };
    obj22.methods["outer"] = reader_lexer_outer23;
    var obj_init_22 = function() {
      var origSuperDepth = superDepth;
      superDepth = obj22;
      var func24 = function(argcv) {    // method token
        var returnTarget = invocationCount;
        invocationCount++;
        var curarg = 1;
        if (argcv[0] !== 0)
          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for token"));
        setModuleName("lexer");
        setLineNumber(47);    // compilenode object
        var obj25 = Grace_allocObject(GraceObject, "lexer.new.token");
        obj25.definitionModule = "lexer";
        obj25.definitionLine = 47;
        obj25.outer = this;
        var reader_lexer_outer26 = function() {
          return this.outer;
        };
        obj25.methods["outer"] = reader_lexer_outer26;
        var obj_init_25 = function() {
          var origSuperDepth = superDepth;
          superDepth = obj25;
          var func27 = function(argcv) {    // method ==(1)
            var returnTarget = invocationCount;
            invocationCount++;
            var curarg = 1;
            var var_other = arguments[curarg];
            curarg++;
            if (argcv[0] !== 1)
              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for ==(1)"));
            setModuleName("lexer");
            var if28 = GraceDone;
            setLineNumber(56);    // compilenode identifier
            var opresult31 = callmethodChecked(var_other, "==", [1], GraceFalse);
            if (Grace_isTrue(opresult31)) {
              setLineNumber(57);    // compilenode identifier
              if28 = GraceFalse;
            } else {
              setLineNumber(59);    // compilenode call
              onSelf = true;
              var call32 = callmethodChecked(this, "linePos", [0]);
              var call34 = callmethodChecked(var_other, "linePos", [0]);
              var opresult36 = callmethodChecked(call34, "==", [1], call32);
              onSelf = true;
              var call38 = callmethodChecked(this, "line", [0]);
              var call40 = callmethodChecked(var_other, "line", [0]);
              var opresult42 = callmethodChecked(call40, "==", [1], call38);
              var opresult44 = callmethodChecked(opresult42, "&&", [1], opresult36);
              if28 = opresult44;
            }
            return if28;
          };
          func27.paramCounts = [1];
          obj25.methods["=="] = func27;
          func27.definitionLine = 55;
          func27.definitionModule = "lexer";
          var func45 = function(argcv) {    // method asString
            var returnTarget = invocationCount;
            invocationCount++;
            var curarg = 1;
            if (argcv[0] !== 0)
              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for asString"));
            setModuleName("lexer");
            setLineNumber(62);    // compilenode string
            var string46 = new GraceString("");
            onSelf = true;
            var call48 = callmethodChecked(this, "value", [0]);
            var string50 = new GraceString(" ");
            onSelf = true;
            var call52 = callmethodChecked(this, "kind", [0]);
            var string54 = new GraceString(")");
            onSelf = true;
            var call56 = callmethodChecked(this, "linePos", [0]);
            var string58 = new GraceString(":");
            onSelf = true;
            var call60 = callmethodChecked(this, "line", [0]);
            var string62 = new GraceString("(");
            var opresult64 = callmethodChecked(string62, "++", [1], call60);
            var opresult66 = callmethodChecked(opresult64, "++", [1], string58);
            var opresult68 = callmethodChecked(opresult66, "++", [1], call56);
            var opresult70 = callmethodChecked(opresult68, "++", [1], string54);
            var opresult72 = callmethodChecked(opresult70, "++", [1], call52);
            var opresult74 = callmethodChecked(opresult72, "++", [1], string50);
            var opresult76 = callmethodChecked(opresult74, "++", [1], call48);
            var opresult78 = callmethodChecked(opresult76, "++", [1], string46);
            return opresult78;
          };
          func45.paramCounts = [0];
          obj25.methods["asString"] = func45;
          func45.definitionLine = 62;
          func45.definitionModule = "lexer";
          setLineNumber(48);    // compilenode call
          var call79 = callmethodChecked(superDepth, "outer", [0]);
          onOuter = true;
          onSelf = true;
          var call80 = callmethodChecked(call79, "lineNumber", [0]);
          obj25.data["line"] = call80;
          var reader_lexer_line81 = function() {
            return this.data["line"];
          };
          reader_lexer_line81.def = true;
          obj25.methods["line"] = reader_lexer_line81;
          setLineNumber(49);    // compilenode call
          var call82 = callmethodChecked(superDepth, "outer", [0]);
          onOuter = true;
          onSelf = true;
          var call83 = callmethodChecked(call82, "indentLevel", [0]);
          obj25.data["indent"] = call83;
          var reader_lexer_indent84 = function() {
            return this.data["indent"];
          };
          reader_lexer_indent84.def = true;
          obj25.methods["indent"] = reader_lexer_indent84;
          setLineNumber(50);    // compilenode call
          var call85 = callmethodChecked(superDepth, "outer", [0]);
          onOuter = true;
          onSelf = true;
          var call86 = callmethodChecked(call85, "startPosition", [0]);
          obj25.data["linePos"] = call86;
          var reader_lexer_linePos87 = function() {
            return this.data["linePos"];
          };
          reader_lexer_linePos87.def = true;
          obj25.methods["linePos"] = reader_lexer_linePos87;
          setLineNumber(52);    // compilenode identifier
          obj25.data["next"] = GraceFalse;
          var reader_lexer_next88 = function() {
            return this.data["next"];
          };
          obj25.methods["next"] = reader_lexer_next88;
          obj25.data["next"] = GraceFalse;
          var writer_lexer_next88 = function(argcv, o) {
            this.data["next"] = o;
            return GraceDone;
          };
          obj25.methods["next:="] = writer_lexer_next88;
          obj25.mutable = true;
          setLineNumber(53);    // compilenode identifier
          obj25.data["prev"] = GraceFalse;
          var reader_lexer_prev89 = function() {
            return this.data["prev"];
          };
          obj25.methods["prev"] = reader_lexer_prev89;
          obj25.data["prev"] = GraceFalse;
          var writer_lexer_prev89 = function(argcv, o) {
            this.data["prev"] = o;
            return GraceDone;
          };
          obj25.methods["prev:="] = writer_lexer_prev89;
          obj25.mutable = true;
          superDepth = origSuperDepth;
        };
        obj_init_25.apply(obj25, []);
        return obj25;
      };
      func24.paramCounts = [0];
      obj22.methods["token"] = func24;
      func24.definitionLine = 47;
      func24.definitionModule = "lexer";
        var func90 = function(argcv) {    // method token()object
          var curarg = 1;
          var inheritingObject = arguments[curarg++];
          // Start argument processing
          curarg = 1;
          // End argument processing
          setModuleName("lexer");
          var returnTarget = invocationCount;
          invocationCount++;
          var obj91 = Grace_allocObject(GraceObject, "token");
          obj91.definitionModule = "lexer";
          obj91.definitionLine = 47;
          var inho91 = inheritingObject;
          while (inho91.superobj) inho91 = inho91.superobj;
          inho91.superobj = obj91;
          obj91.data = inheritingObject.data;
          if (inheritingObject.hasOwnProperty('_value'))
            obj91._value = inheritingObject._value;
          obj91.outer = this;
          var reader_lexer_outer92 = function() {
            return this.outer;
          };
          obj91.methods["outer"] = reader_lexer_outer92;
          var obj_init_91 = function() {
            var origSuperDepth = superDepth;
            superDepth = obj91;
            var func93 = function(argcv) {    // method ==(1)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_other = arguments[curarg];
              curarg++;
              if (argcv[0] !== 1)
                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for ==(1)"));
              setModuleName("lexer");
              var if94 = GraceDone;
              setLineNumber(56);    // compilenode identifier
              var opresult97 = callmethodChecked(var_other, "==", [1], GraceFalse);
              if (Grace_isTrue(opresult97)) {
                setLineNumber(57);    // compilenode identifier
                if94 = GraceFalse;
              } else {
                setLineNumber(59);    // compilenode call
                onSelf = true;
                var call98 = callmethodChecked(this, "linePos", [0]);
                var call100 = callmethodChecked(var_other, "linePos", [0]);
                var opresult102 = callmethodChecked(call100, "==", [1], call98);
                onSelf = true;
                var call104 = callmethodChecked(this, "line", [0]);
                var call106 = callmethodChecked(var_other, "line", [0]);
                var opresult108 = callmethodChecked(call106, "==", [1], call104);
                var opresult110 = callmethodChecked(opresult108, "&&", [1], opresult102);
                if94 = opresult110;
              }
              return if94;
            };
            func93.paramCounts = [1];
            obj91.methods["=="] = func93;
            func93.definitionLine = 55;
            func93.definitionModule = "lexer";
            var func111 = function(argcv) {    // method asString
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              if (argcv[0] !== 0)
                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for asString"));
              setModuleName("lexer");
              setLineNumber(62);    // compilenode string
              var string112 = new GraceString("");
              onSelf = true;
              var call114 = callmethodChecked(this, "value", [0]);
              var string116 = new GraceString(" ");
              onSelf = true;
              var call118 = callmethodChecked(this, "kind", [0]);
              var string120 = new GraceString(")");
              onSelf = true;
              var call122 = callmethodChecked(this, "linePos", [0]);
              var string124 = new GraceString(":");
              onSelf = true;
              var call126 = callmethodChecked(this, "line", [0]);
              var string128 = new GraceString("(");
              var opresult130 = callmethodChecked(string128, "++", [1], call126);
              var opresult132 = callmethodChecked(opresult130, "++", [1], string124);
              var opresult134 = callmethodChecked(opresult132, "++", [1], call122);
              var opresult136 = callmethodChecked(opresult134, "++", [1], string120);
              var opresult138 = callmethodChecked(opresult136, "++", [1], call118);
              var opresult140 = callmethodChecked(opresult138, "++", [1], string116);
              var opresult142 = callmethodChecked(opresult140, "++", [1], call114);
              var opresult144 = callmethodChecked(opresult142, "++", [1], string112);
              return opresult144;
            };
            func111.paramCounts = [0];
            obj91.methods["asString"] = func111;
            func111.definitionLine = 62;
            func111.definitionModule = "lexer";
            setLineNumber(48);    // compilenode call
            var call145 = callmethodChecked(superDepth, "outer", [0]);
            onOuter = true;
            onSelf = true;
            var call146 = callmethodChecked(call145, "lineNumber", [0]);
            obj91.data["line"] = call146;
            var reader_lexer_line147 = function() {
              return this.data["line"];
            };
            reader_lexer_line147.def = true;
            obj91.methods["line"] = reader_lexer_line147;
            setLineNumber(49);    // compilenode call
            var call148 = callmethodChecked(superDepth, "outer", [0]);
            onOuter = true;
            onSelf = true;
            var call149 = callmethodChecked(call148, "indentLevel", [0]);
            obj91.data["indent"] = call149;
            var reader_lexer_indent150 = function() {
              return this.data["indent"];
            };
            reader_lexer_indent150.def = true;
            obj91.methods["indent"] = reader_lexer_indent150;
            setLineNumber(50);    // compilenode call
            var call151 = callmethodChecked(superDepth, "outer", [0]);
            onOuter = true;
            onSelf = true;
            var call152 = callmethodChecked(call151, "startPosition", [0]);
            obj91.data["linePos"] = call152;
            var reader_lexer_linePos153 = function() {
              return this.data["linePos"];
            };
            reader_lexer_linePos153.def = true;
            obj91.methods["linePos"] = reader_lexer_linePos153;
            setLineNumber(52);    // compilenode identifier
            obj91.data["next"] = GraceFalse;
            var reader_lexer_next154 = function() {
              return this.data["next"];
            };
            obj91.methods["next"] = reader_lexer_next154;
            obj91.data["next"] = GraceFalse;
            var writer_lexer_next154 = function(argcv, o) {
              this.data["next"] = o;
              return GraceDone;
            };
            obj91.methods["next:="] = writer_lexer_next154;
            obj91.mutable = true;
            setLineNumber(53);    // compilenode identifier
            obj91.data["prev"] = GraceFalse;
            var reader_lexer_prev155 = function() {
              return this.data["prev"];
            };
            obj91.methods["prev"] = reader_lexer_prev155;
            obj91.data["prev"] = GraceFalse;
            var writer_lexer_prev155 = function(argcv, o) {
              this.data["prev"] = o;
              return GraceDone;
            };
            obj91.methods["prev:="] = writer_lexer_prev155;
            obj91.mutable = true;
            superDepth = origSuperDepth;
          };
          obj_init_91.apply(inheritingObject, []);
          return obj91;
          };
          obj22.methods["token()object"] = func90;
        var func156 = function(argcv) {    // method identifierToken(1)
          var returnTarget = invocationCount;
          invocationCount++;
          var curarg = 1;
          var var_s = arguments[curarg];
          curarg++;
          if (argcv[0] !== 1)
            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for identifierToken(1)"));
          setModuleName("lexer");
          setLineNumber(66);    // compilenode object
          var obj157 = Grace_allocObject(null, "lexer.new.identifierToken");
          obj157.definitionModule = "lexer";
          obj157.definitionLine = 66;
          obj157.outer = this;
          var reader_lexer_outer158 = function() {
            return this.outer;
          };
          obj157.methods["outer"] = reader_lexer_outer158;
          var obj_init_157 = function() {
            var origSuperDepth = superDepth;
            superDepth = obj157;
            setLineNumber(67);    // compilenode call
            var call159 = callmethodChecked(superDepth, "outer", [0]);
            onOuter = true;
            onSelf = true;
            var call160 = callmethodChecked(call159, "token()object", [0, 1], this);
            obj157.superobj = call160;
            if (call160.data) obj157.data = call160.data;
            if (call160.hasOwnProperty('_value'))
                obj157._value = call160._value;
            setLineNumber(68);    // compilenode string
            var string161 = new GraceString("identifier");
            obj157.data["kind"] = string161;
            var reader_lexer_kind162 = function() {
              return this.data["kind"];
            };
            reader_lexer_kind162.def = true;
            obj157.methods["kind"] = reader_lexer_kind162;
            setLineNumber(69);    // compilenode identifier
            obj157.data["value"] = var_s;
            var reader_lexer_value163 = function() {
              return this.data["value"];
            };
            reader_lexer_value163.def = true;
            obj157.methods["value"] = reader_lexer_value163;
            setLineNumber(70);    // compilenode identifier
            var call164 = callmethodChecked(var_s, "size", [0]);
            obj157.data["size"] = call164;
            var reader_lexer_size165 = function() {
              return this.data["size"];
            };
            reader_lexer_size165.def = true;
            obj157.methods["size"] = reader_lexer_size165;
            superDepth = origSuperDepth;
          };
          obj_init_157.apply(obj157, []);
          return obj157;
        };
        func156.paramCounts = [1];
        obj22.methods["identifierToken"] = func156;
        func156.definitionLine = 66;
        func156.definitionModule = "lexer";
          var func166 = function(argcv) {    // method identifierToken(1     )()object
            var curarg = 1;
            var var_s = arguments[curarg];
            curarg++;
            var inheritingObject = arguments[curarg++];
            // Start argument processing
            curarg = 1;
            curarg++;
            // End argument processing
            setModuleName("lexer");
            var returnTarget = invocationCount;
            invocationCount++;
            var obj167 = Grace_allocObject(null, "identifierToken");
            obj167.definitionModule = "lexer";
            obj167.definitionLine = 66;
            var inho167 = inheritingObject;
            while (inho167.superobj) inho167 = inho167.superobj;
            inho167.superobj = obj167;
            obj167.data = inheritingObject.data;
            if (inheritingObject.hasOwnProperty('_value'))
              obj167._value = inheritingObject._value;
            obj167.outer = this;
            var reader_lexer_outer168 = function() {
              return this.outer;
            };
            obj167.methods["outer"] = reader_lexer_outer168;
            var obj_init_167 = function() {
              var origSuperDepth = superDepth;
              superDepth = obj167;
              setLineNumber(67);    // compilenode call
              var call169 = callmethodChecked(superDepth, "outer", [0]);
              onOuter = true;
              onSelf = true;
              var call170 = callmethodChecked(call169, "token()object", [0, 1], this);
              obj167.superobj = call170;
              if (call170.data) obj167.data = call170.data;
              if (call170.hasOwnProperty('_value'))
                  obj167._value = call170._value;
              setLineNumber(68);    // compilenode string
              var string171 = new GraceString("identifier");
              obj167.data["kind"] = string171;
              var reader_lexer_kind172 = function() {
                return this.data["kind"];
              };
              reader_lexer_kind172.def = true;
              obj167.methods["kind"] = reader_lexer_kind172;
              setLineNumber(69);    // compilenode identifier
              obj167.data["value"] = var_s;
              var reader_lexer_value173 = function() {
                return this.data["value"];
              };
              reader_lexer_value173.def = true;
              obj167.methods["value"] = reader_lexer_value173;
              setLineNumber(70);    // compilenode identifier
              var call174 = callmethodChecked(var_s, "size", [0]);
              obj167.data["size"] = call174;
              var reader_lexer_size175 = function() {
                return this.data["size"];
              };
              reader_lexer_size175.def = true;
              obj167.methods["size"] = reader_lexer_size175;
              superDepth = origSuperDepth;
            };
            obj_init_167.apply(inheritingObject, []);
            return obj167;
            };
            obj22.methods["identifierToken()object"] = func166;
          var func176 = function(argcv) {    // method stringToken(1)
            var returnTarget = invocationCount;
            invocationCount++;
            var curarg = 1;
            var var_s = arguments[curarg];
            curarg++;
            if (argcv[0] !== 1)
              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for stringToken(1)"));
            setModuleName("lexer");
            setLineNumber(72);    // compilenode object
            var obj177 = Grace_allocObject(null, "lexer.new.stringToken");
            obj177.definitionModule = "lexer";
            obj177.definitionLine = 72;
            obj177.outer = this;
            var reader_lexer_outer178 = function() {
              return this.outer;
            };
            obj177.methods["outer"] = reader_lexer_outer178;
            var obj_init_177 = function() {
              var origSuperDepth = superDepth;
              superDepth = obj177;
              setLineNumber(73);    // compilenode call
              var call179 = callmethodChecked(superDepth, "outer", [0]);
              onOuter = true;
              onSelf = true;
              var call180 = callmethodChecked(call179, "token()object", [0, 1], this);
              obj177.superobj = call180;
              if (call180.data) obj177.data = call180.data;
              if (call180.hasOwnProperty('_value'))
                  obj177._value = call180._value;
              setLineNumber(74);    // compilenode string
              var string181 = new GraceString("string");
              obj177.data["kind"] = string181;
              var reader_lexer_kind182 = function() {
                return this.data["kind"];
              };
              reader_lexer_kind182.def = true;
              obj177.methods["kind"] = reader_lexer_kind182;
              setLineNumber(75);    // compilenode identifier
              obj177.data["value"] = var_s;
              var reader_lexer_value183 = function() {
                return this.data["value"];
              };
              reader_lexer_value183.def = true;
              obj177.methods["value"] = reader_lexer_value183;
              setLineNumber(76);    // compilenode call
              var call185 = callmethodChecked(superDepth, "outer", [0]);
              onOuter = true;
              onSelf = true;
              var call186 = callmethodChecked(call185, "stringStart", [0]);
              var call188 = callmethodChecked(superDepth, "outer", [0]);
              onOuter = true;
              onSelf = true;
              var call189 = callmethodChecked(call188, "linePosition", [0]);
              var diff191 = callmethodChecked(call189, "-", [1], call186);
              var opresult193 = callmethodChecked(diff191, "+", [1], new GraceNum(1));
              obj177.data["size"] = opresult193;
              var reader_lexer_size194 = function() {
                return this.data["size"];
              };
              reader_lexer_size194.def = true;
              obj177.methods["size"] = reader_lexer_size194;
              superDepth = origSuperDepth;
            };
            obj_init_177.apply(obj177, []);
            return obj177;
          };
          func176.paramCounts = [1];
          obj22.methods["stringToken"] = func176;
          func176.definitionLine = 72;
          func176.definitionModule = "lexer";
            var func195 = function(argcv) {    // method stringToken(1     )()object
              var curarg = 1;
              var var_s = arguments[curarg];
              curarg++;
              var inheritingObject = arguments[curarg++];
              // Start argument processing
              curarg = 1;
              curarg++;
              // End argument processing
              setModuleName("lexer");
              var returnTarget = invocationCount;
              invocationCount++;
              var obj196 = Grace_allocObject(null, "stringToken");
              obj196.definitionModule = "lexer";
              obj196.definitionLine = 72;
              var inho196 = inheritingObject;
              while (inho196.superobj) inho196 = inho196.superobj;
              inho196.superobj = obj196;
              obj196.data = inheritingObject.data;
              if (inheritingObject.hasOwnProperty('_value'))
                obj196._value = inheritingObject._value;
              obj196.outer = this;
              var reader_lexer_outer197 = function() {
                return this.outer;
              };
              obj196.methods["outer"] = reader_lexer_outer197;
              var obj_init_196 = function() {
                var origSuperDepth = superDepth;
                superDepth = obj196;
                setLineNumber(73);    // compilenode call
                var call198 = callmethodChecked(superDepth, "outer", [0]);
                onOuter = true;
                onSelf = true;
                var call199 = callmethodChecked(call198, "token()object", [0, 1], this);
                obj196.superobj = call199;
                if (call199.data) obj196.data = call199.data;
                if (call199.hasOwnProperty('_value'))
                    obj196._value = call199._value;
                setLineNumber(74);    // compilenode string
                var string200 = new GraceString("string");
                obj196.data["kind"] = string200;
                var reader_lexer_kind201 = function() {
                  return this.data["kind"];
                };
                reader_lexer_kind201.def = true;
                obj196.methods["kind"] = reader_lexer_kind201;
                setLineNumber(75);    // compilenode identifier
                obj196.data["value"] = var_s;
                var reader_lexer_value202 = function() {
                  return this.data["value"];
                };
                reader_lexer_value202.def = true;
                obj196.methods["value"] = reader_lexer_value202;
                setLineNumber(76);    // compilenode call
                var call204 = callmethodChecked(superDepth, "outer", [0]);
                onOuter = true;
                onSelf = true;
                var call205 = callmethodChecked(call204, "stringStart", [0]);
                var call207 = callmethodChecked(superDepth, "outer", [0]);
                onOuter = true;
                onSelf = true;
                var call208 = callmethodChecked(call207, "linePosition", [0]);
                var diff210 = callmethodChecked(call208, "-", [1], call205);
                var opresult212 = callmethodChecked(diff210, "+", [1], new GraceNum(1));
                obj196.data["size"] = opresult212;
                var reader_lexer_size213 = function() {
                  return this.data["size"];
                };
                reader_lexer_size213.def = true;
                obj196.methods["size"] = reader_lexer_size213;
                superDepth = origSuperDepth;
              };
              obj_init_196.apply(inheritingObject, []);
              return obj196;
              };
              obj22.methods["stringToken()object"] = func195;
            var func214 = function(argcv) {    // method multiLineStringToken(1)
              var returnTarget = invocationCount;
              invocationCount++;
              var curarg = 1;
              var var_s = arguments[curarg];
              curarg++;
              if (argcv[0] !== 1)
                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for multiLineStringToken(1)"));
              setModuleName("lexer");
              setLineNumber(78);    // compilenode object
              var obj215 = Grace_allocObject(null, "lexer.new.multiLineStringToken");
              obj215.definitionModule = "lexer";
              obj215.definitionLine = 78;
              obj215.outer = this;
              var reader_lexer_outer216 = function() {
                return this.outer;
              };
              obj215.methods["outer"] = reader_lexer_outer216;
              var obj_init_215 = function() {
                var origSuperDepth = superDepth;
                superDepth = obj215;
                var func217 = function(argcv) {    // method line
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  if (argcv[0] !== 0)
                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for line"));
                  setModuleName("lexer");
                  setLineNumber(85);    // compilenode call
                  onSelf = true;
                  var call218 = callmethodChecked(this, "line'", [0]);
                  return call218;
                };
                func217.paramCounts = [0];
                obj215.methods["line"] = func217;
                func217.definitionLine = 85;
                func217.definitionModule = "lexer";
                var func219 = function(argcv) {    // method linePos
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  if (argcv[0] !== 0)
                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for linePos"));
                  setModuleName("lexer");
                  setLineNumber(86);    // compilenode call
                  onSelf = true;
                  var call220 = callmethodChecked(this, "linePos'", [0]);
                  return call220;
                };
                func219.paramCounts = [0];
                obj215.methods["linePos"] = func219;
                func219.definitionLine = 86;
                func219.definitionModule = "lexer";
                setLineNumber(79);    // compilenode call
                var call221 = callmethodChecked(superDepth, "outer", [0]);
                onOuter = true;
                onSelf = true;
                var call222 = callmethodChecked(call221, "token()object", [0, 1], this);
                obj215.superobj = call222;
                if (call222.data) obj215.data = call222.data;
                if (call222.hasOwnProperty('_value'))
                    obj215._value = call222._value;
                setLineNumber(80);    // compilenode string
                var string223 = new GraceString("string");
                obj215.data["kind"] = string223;
                var reader_lexer_kind224 = function() {
                  return this.data["kind"];
                };
                reader_lexer_kind224.def = true;
                obj215.methods["kind"] = reader_lexer_kind224;
                setLineNumber(81);    // compilenode identifier
                obj215.data["value"] = var_s;
                var reader_lexer_value225 = function() {
                  return this.data["value"];
                };
                reader_lexer_value225.def = true;
                obj215.methods["value"] = reader_lexer_value225;
                setLineNumber(82);    // compilenode identifier
                var call227 = callmethodChecked(var_s, "size", [0]);
                var opresult229 = callmethodChecked(call227, "+", [1], new GraceNum(2));
                obj215.data["size"] = opresult229;
                var reader_lexer_size230 = function() {
                  return this.data["size"];
                };
                reader_lexer_size230.def = true;
                obj215.methods["size"] = reader_lexer_size230;
                setLineNumber(83);    // compilenode call
                var call231 = callmethodChecked(superDepth, "outer", [0]);
                onOuter = true;
                onSelf = true;
                var call232 = callmethodChecked(call231, "startLine", [0]);
                obj215.data["line'"] = call232;
                var reader_lexer_line__39__233 = function() {
                  return this.data["line'"];
                };
                reader_lexer_line__39__233.def = true;
                reader_lexer_line__39__233.confidential = true;
                obj215.methods["line'"] = reader_lexer_line__39__233;
                setLineNumber(84);    // compilenode call
                var call234 = callmethodChecked(superDepth, "outer", [0]);
                onOuter = true;
                onSelf = true;
                var call235 = callmethodChecked(call234, "stringStart", [0]);
                obj215.data["linePos'"] = call235;
                var reader_lexer_linePos__39__236 = function() {
                  return this.data["linePos'"];
                };
                reader_lexer_linePos__39__236.def = true;
                reader_lexer_linePos__39__236.confidential = true;
                obj215.methods["linePos'"] = reader_lexer_linePos__39__236;
                superDepth = origSuperDepth;
              };
              obj_init_215.apply(obj215, []);
              return obj215;
            };
            func214.paramCounts = [1];
            obj22.methods["multiLineStringToken"] = func214;
            func214.definitionLine = 78;
            func214.definitionModule = "lexer";
              var func237 = function(argcv) {    // method multiLineStringToken(1     )()object
                var curarg = 1;
                var var_s = arguments[curarg];
                curarg++;
                var inheritingObject = arguments[curarg++];
                // Start argument processing
                curarg = 1;
                curarg++;
                // End argument processing
                setModuleName("lexer");
                var returnTarget = invocationCount;
                invocationCount++;
                var obj238 = Grace_allocObject(null, "multiLineStringToken");
                obj238.definitionModule = "lexer";
                obj238.definitionLine = 78;
                var inho238 = inheritingObject;
                while (inho238.superobj) inho238 = inho238.superobj;
                inho238.superobj = obj238;
                obj238.data = inheritingObject.data;
                if (inheritingObject.hasOwnProperty('_value'))
                  obj238._value = inheritingObject._value;
                obj238.outer = this;
                var reader_lexer_outer239 = function() {
                  return this.outer;
                };
                obj238.methods["outer"] = reader_lexer_outer239;
                var obj_init_238 = function() {
                  var origSuperDepth = superDepth;
                  superDepth = obj238;
                  var func240 = function(argcv) {    // method line
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    if (argcv[0] !== 0)
                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for line"));
                    setModuleName("lexer");
                    setLineNumber(85);    // compilenode call
                    onSelf = true;
                    var call241 = callmethodChecked(this, "line'", [0]);
                    return call241;
                  };
                  func240.paramCounts = [0];
                  obj238.methods["line"] = func240;
                  func240.definitionLine = 85;
                  func240.definitionModule = "lexer";
                  var func242 = function(argcv) {    // method linePos
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    if (argcv[0] !== 0)
                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for linePos"));
                    setModuleName("lexer");
                    setLineNumber(86);    // compilenode call
                    onSelf = true;
                    var call243 = callmethodChecked(this, "linePos'", [0]);
                    return call243;
                  };
                  func242.paramCounts = [0];
                  obj238.methods["linePos"] = func242;
                  func242.definitionLine = 86;
                  func242.definitionModule = "lexer";
                  setLineNumber(79);    // compilenode call
                  var call244 = callmethodChecked(superDepth, "outer", [0]);
                  onOuter = true;
                  onSelf = true;
                  var call245 = callmethodChecked(call244, "token()object", [0, 1], this);
                  obj238.superobj = call245;
                  if (call245.data) obj238.data = call245.data;
                  if (call245.hasOwnProperty('_value'))
                      obj238._value = call245._value;
                  setLineNumber(80);    // compilenode string
                  var string246 = new GraceString("string");
                  obj238.data["kind"] = string246;
                  var reader_lexer_kind247 = function() {
                    return this.data["kind"];
                  };
                  reader_lexer_kind247.def = true;
                  obj238.methods["kind"] = reader_lexer_kind247;
                  setLineNumber(81);    // compilenode identifier
                  obj238.data["value"] = var_s;
                  var reader_lexer_value248 = function() {
                    return this.data["value"];
                  };
                  reader_lexer_value248.def = true;
                  obj238.methods["value"] = reader_lexer_value248;
                  setLineNumber(82);    // compilenode identifier
                  var call250 = callmethodChecked(var_s, "size", [0]);
                  var opresult252 = callmethodChecked(call250, "+", [1], new GraceNum(2));
                  obj238.data["size"] = opresult252;
                  var reader_lexer_size253 = function() {
                    return this.data["size"];
                  };
                  reader_lexer_size253.def = true;
                  obj238.methods["size"] = reader_lexer_size253;
                  setLineNumber(83);    // compilenode call
                  var call254 = callmethodChecked(superDepth, "outer", [0]);
                  onOuter = true;
                  onSelf = true;
                  var call255 = callmethodChecked(call254, "startLine", [0]);
                  obj238.data["line'"] = call255;
                  var reader_lexer_line__39__256 = function() {
                    return this.data["line'"];
                  };
                  reader_lexer_line__39__256.def = true;
                  reader_lexer_line__39__256.confidential = true;
                  obj238.methods["line'"] = reader_lexer_line__39__256;
                  setLineNumber(84);    // compilenode call
                  var call257 = callmethodChecked(superDepth, "outer", [0]);
                  onOuter = true;
                  onSelf = true;
                  var call258 = callmethodChecked(call257, "stringStart", [0]);
                  obj238.data["linePos'"] = call258;
                  var reader_lexer_linePos__39__259 = function() {
                    return this.data["linePos'"];
                  };
                  reader_lexer_linePos__39__259.def = true;
                  reader_lexer_linePos__39__259.confidential = true;
                  obj238.methods["linePos'"] = reader_lexer_linePos__39__259;
                  superDepth = origSuperDepth;
                };
                obj_init_238.apply(inheritingObject, []);
                return obj238;
                };
                obj22.methods["multiLineStringToken()object"] = func237;
              var func260 = function(argcv) {    // method commentToken(1)
                var returnTarget = invocationCount;
                invocationCount++;
                var curarg = 1;
                var var_s = arguments[curarg];
                curarg++;
                if (argcv[0] !== 1)
                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for commentToken(1)"));
                setModuleName("lexer");
                setLineNumber(88);    // compilenode object
                var obj261 = Grace_allocObject(null, "lexer.new.commentToken");
                obj261.definitionModule = "lexer";
                obj261.definitionLine = 88;
                obj261.outer = this;
                var reader_lexer_outer262 = function() {
                  return this.outer;
                };
                obj261.methods["outer"] = reader_lexer_outer262;
                var obj_init_261 = function() {
                  var origSuperDepth = superDepth;
                  superDepth = obj261;
                  setLineNumber(89);    // compilenode call
                  var call263 = callmethodChecked(superDepth, "outer", [0]);
                  onOuter = true;
                  onSelf = true;
                  var call264 = callmethodChecked(call263, "token()object", [0, 1], this);
                  obj261.superobj = call264;
                  if (call264.data) obj261.data = call264.data;
                  if (call264.hasOwnProperty('_value'))
                      obj261._value = call264._value;
                  setLineNumber(90);    // compilenode string
                  var string265 = new GraceString("comment");
                  obj261.data["kind"] = string265;
                  var reader_lexer_kind266 = function() {
                    return this.data["kind"];
                  };
                  reader_lexer_kind266.def = true;
                  obj261.methods["kind"] = reader_lexer_kind266;
                  setLineNumber(91);    // compilenode identifier
                  obj261.data["value"] = var_s;
                  var reader_lexer_value267 = function() {
                    return this.data["value"];
                  };
                  reader_lexer_value267.def = true;
                  obj261.methods["value"] = reader_lexer_value267;
                  setLineNumber(92);    // compilenode identifier
                  var call269 = callmethodChecked(var_s, "size", [0]);
                  var opresult271 = callmethodChecked(call269, "+", [1], new GraceNum(2));
                  obj261.data["size"] = opresult271;
                  var reader_lexer_size272 = function() {
                    return this.data["size"];
                  };
                  reader_lexer_size272.def = true;
                  obj261.methods["size"] = reader_lexer_size272;
                  superDepth = origSuperDepth;
                };
                obj_init_261.apply(obj261, []);
                return obj261;
              };
              func260.paramCounts = [1];
              obj22.methods["commentToken"] = func260;
              func260.definitionLine = 88;
              func260.definitionModule = "lexer";
                var func273 = function(argcv) {    // method commentToken(1     )()object
                  var curarg = 1;
                  var var_s = arguments[curarg];
                  curarg++;
                  var inheritingObject = arguments[curarg++];
                  // Start argument processing
                  curarg = 1;
                  curarg++;
                  // End argument processing
                  setModuleName("lexer");
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var obj274 = Grace_allocObject(null, "commentToken");
                  obj274.definitionModule = "lexer";
                  obj274.definitionLine = 88;
                  var inho274 = inheritingObject;
                  while (inho274.superobj) inho274 = inho274.superobj;
                  inho274.superobj = obj274;
                  obj274.data = inheritingObject.data;
                  if (inheritingObject.hasOwnProperty('_value'))
                    obj274._value = inheritingObject._value;
                  obj274.outer = this;
                  var reader_lexer_outer275 = function() {
                    return this.outer;
                  };
                  obj274.methods["outer"] = reader_lexer_outer275;
                  var obj_init_274 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj274;
                    setLineNumber(89);    // compilenode call
                    var call276 = callmethodChecked(superDepth, "outer", [0]);
                    onOuter = true;
                    onSelf = true;
                    var call277 = callmethodChecked(call276, "token()object", [0, 1], this);
                    obj274.superobj = call277;
                    if (call277.data) obj274.data = call277.data;
                    if (call277.hasOwnProperty('_value'))
                        obj274._value = call277._value;
                    setLineNumber(90);    // compilenode string
                    var string278 = new GraceString("comment");
                    obj274.data["kind"] = string278;
                    var reader_lexer_kind279 = function() {
                      return this.data["kind"];
                    };
                    reader_lexer_kind279.def = true;
                    obj274.methods["kind"] = reader_lexer_kind279;
                    setLineNumber(91);    // compilenode identifier
                    obj274.data["value"] = var_s;
                    var reader_lexer_value280 = function() {
                      return this.data["value"];
                    };
                    reader_lexer_value280.def = true;
                    obj274.methods["value"] = reader_lexer_value280;
                    setLineNumber(92);    // compilenode identifier
                    var call282 = callmethodChecked(var_s, "size", [0]);
                    var opresult284 = callmethodChecked(call282, "+", [1], new GraceNum(2));
                    obj274.data["size"] = opresult284;
                    var reader_lexer_size285 = function() {
                      return this.data["size"];
                    };
                    reader_lexer_size285.def = true;
                    obj274.methods["size"] = reader_lexer_size285;
                    superDepth = origSuperDepth;
                  };
                  obj_init_274.apply(inheritingObject, []);
                  return obj274;
                  };
                  obj22.methods["commentToken()object"] = func273;
                var func286 = function(argcv) {    // method lBraceToken
                  var returnTarget = invocationCount;
                  invocationCount++;
                  var curarg = 1;
                  if (argcv[0] !== 0)
                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lBraceToken"));
                  setModuleName("lexer");
                  setLineNumber(94);    // compilenode object
                  var obj287 = Grace_allocObject(null, "lexer.new.lBraceToken");
                  obj287.definitionModule = "lexer";
                  obj287.definitionLine = 94;
                  obj287.outer = this;
                  var reader_lexer_outer288 = function() {
                    return this.outer;
                  };
                  obj287.methods["outer"] = reader_lexer_outer288;
                  var obj_init_287 = function() {
                    var origSuperDepth = superDepth;
                    superDepth = obj287;
                    setLineNumber(95);    // compilenode call
                    var call289 = callmethodChecked(superDepth, "outer", [0]);
                    onOuter = true;
                    onSelf = true;
                    var call290 = callmethodChecked(call289, "token()object", [0, 1], this);
                    obj287.superobj = call290;
                    if (call290.data) obj287.data = call290.data;
                    if (call290.hasOwnProperty('_value'))
                        obj287._value = call290._value;
                    setLineNumber(96);    // compilenode string
                    var string291 = new GraceString("lbrace");
                    obj287.data["kind"] = string291;
                    var reader_lexer_kind292 = function() {
                      return this.data["kind"];
                    };
                    reader_lexer_kind292.def = true;
                    obj287.methods["kind"] = reader_lexer_kind292;
                    setLineNumber(97);    // compilenode string
                    var string293 = new GraceString("{");
                    obj287.data["value"] = string293;
                    var reader_lexer_value294 = function() {
                      return this.data["value"];
                    };
                    reader_lexer_value294.def = true;
                    obj287.methods["value"] = reader_lexer_value294;
                    setLineNumber(98);    // compilenode num
                    obj287.data["size"] = new GraceNum(1);
                    var reader_lexer_size295 = function() {
                      return this.data["size"];
                    };
                    reader_lexer_size295.def = true;
                    obj287.methods["size"] = reader_lexer_size295;
                    superDepth = origSuperDepth;
                  };
                  obj_init_287.apply(obj287, []);
                  return obj287;
                };
                func286.paramCounts = [0];
                obj22.methods["lBraceToken"] = func286;
                func286.definitionLine = 94;
                func286.definitionModule = "lexer";
                  var func296 = function(argcv) {    // method lBraceToken()object
                    var curarg = 1;
                    var inheritingObject = arguments[curarg++];
                    // Start argument processing
                    curarg = 1;
                    // End argument processing
                    setModuleName("lexer");
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var obj297 = Grace_allocObject(null, "lBraceToken");
                    obj297.definitionModule = "lexer";
                    obj297.definitionLine = 94;
                    var inho297 = inheritingObject;
                    while (inho297.superobj) inho297 = inho297.superobj;
                    inho297.superobj = obj297;
                    obj297.data = inheritingObject.data;
                    if (inheritingObject.hasOwnProperty('_value'))
                      obj297._value = inheritingObject._value;
                    obj297.outer = this;
                    var reader_lexer_outer298 = function() {
                      return this.outer;
                    };
                    obj297.methods["outer"] = reader_lexer_outer298;
                    var obj_init_297 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj297;
                      setLineNumber(95);    // compilenode call
                      var call299 = callmethodChecked(superDepth, "outer", [0]);
                      onOuter = true;
                      onSelf = true;
                      var call300 = callmethodChecked(call299, "token()object", [0, 1], this);
                      obj297.superobj = call300;
                      if (call300.data) obj297.data = call300.data;
                      if (call300.hasOwnProperty('_value'))
                          obj297._value = call300._value;
                      setLineNumber(96);    // compilenode string
                      var string301 = new GraceString("lbrace");
                      obj297.data["kind"] = string301;
                      var reader_lexer_kind302 = function() {
                        return this.data["kind"];
                      };
                      reader_lexer_kind302.def = true;
                      obj297.methods["kind"] = reader_lexer_kind302;
                      setLineNumber(97);    // compilenode string
                      var string303 = new GraceString("{");
                      obj297.data["value"] = string303;
                      var reader_lexer_value304 = function() {
                        return this.data["value"];
                      };
                      reader_lexer_value304.def = true;
                      obj297.methods["value"] = reader_lexer_value304;
                      setLineNumber(98);    // compilenode num
                      obj297.data["size"] = new GraceNum(1);
                      var reader_lexer_size305 = function() {
                        return this.data["size"];
                      };
                      reader_lexer_size305.def = true;
                      obj297.methods["size"] = reader_lexer_size305;
                      superDepth = origSuperDepth;
                    };
                    obj_init_297.apply(inheritingObject, []);
                    return obj297;
                    };
                    obj22.methods["lBraceToken()object"] = func296;
                  var func306 = function(argcv) {    // method rBraceToken
                    var returnTarget = invocationCount;
                    invocationCount++;
                    var curarg = 1;
                    if (argcv[0] !== 0)
                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rBraceToken"));
                    setModuleName("lexer");
                    setLineNumber(100);    // compilenode object
                    var obj307 = Grace_allocObject(null, "lexer.new.rBraceToken");
                    obj307.definitionModule = "lexer";
                    obj307.definitionLine = 100;
                    obj307.outer = this;
                    var reader_lexer_outer308 = function() {
                      return this.outer;
                    };
                    obj307.methods["outer"] = reader_lexer_outer308;
                    var obj_init_307 = function() {
                      var origSuperDepth = superDepth;
                      superDepth = obj307;
                      setLineNumber(101);    // compilenode call
                      var call309 = callmethodChecked(superDepth, "outer", [0]);
                      onOuter = true;
                      onSelf = true;
                      var call310 = callmethodChecked(call309, "token()object", [0, 1], this);
                      obj307.superobj = call310;
                      if (call310.data) obj307.data = call310.data;
                      if (call310.hasOwnProperty('_value'))
                          obj307._value = call310._value;
                      setLineNumber(102);    // compilenode string
                      var string311 = new GraceString("rbrace");
                      obj307.data["kind"] = string311;
                      var reader_lexer_kind312 = function() {
                        return this.data["kind"];
                      };
                      reader_lexer_kind312.def = true;
                      obj307.methods["kind"] = reader_lexer_kind312;
                      setLineNumber(103);    // compilenode string
                      var string313 = new GraceString("}");
                      obj307.data["value"] = string313;
                      var reader_lexer_value314 = function() {
                        return this.data["value"];
                      };
                      reader_lexer_value314.def = true;
                      obj307.methods["value"] = reader_lexer_value314;
                      setLineNumber(104);    // compilenode num
                      obj307.data["size"] = new GraceNum(1);
                      var reader_lexer_size315 = function() {
                        return this.data["size"];
                      };
                      reader_lexer_size315.def = true;
                      obj307.methods["size"] = reader_lexer_size315;
                      superDepth = origSuperDepth;
                    };
                    obj_init_307.apply(obj307, []);
                    return obj307;
                  };
                  func306.paramCounts = [0];
                  obj22.methods["rBraceToken"] = func306;
                  func306.definitionLine = 100;
                  func306.definitionModule = "lexer";
                    var func316 = function(argcv) {    // method rBraceToken()object
                      var curarg = 1;
                      var inheritingObject = arguments[curarg++];
                      // Start argument processing
                      curarg = 1;
                      // End argument processing
                      setModuleName("lexer");
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var obj317 = Grace_allocObject(null, "rBraceToken");
                      obj317.definitionModule = "lexer";
                      obj317.definitionLine = 100;
                      var inho317 = inheritingObject;
                      while (inho317.superobj) inho317 = inho317.superobj;
                      inho317.superobj = obj317;
                      obj317.data = inheritingObject.data;
                      if (inheritingObject.hasOwnProperty('_value'))
                        obj317._value = inheritingObject._value;
                      obj317.outer = this;
                      var reader_lexer_outer318 = function() {
                        return this.outer;
                      };
                      obj317.methods["outer"] = reader_lexer_outer318;
                      var obj_init_317 = function() {
                        var origSuperDepth = superDepth;
                        superDepth = obj317;
                        setLineNumber(101);    // compilenode call
                        var call319 = callmethodChecked(superDepth, "outer", [0]);
                        onOuter = true;
                        onSelf = true;
                        var call320 = callmethodChecked(call319, "token()object", [0, 1], this);
                        obj317.superobj = call320;
                        if (call320.data) obj317.data = call320.data;
                        if (call320.hasOwnProperty('_value'))
                            obj317._value = call320._value;
                        setLineNumber(102);    // compilenode string
                        var string321 = new GraceString("rbrace");
                        obj317.data["kind"] = string321;
                        var reader_lexer_kind322 = function() {
                          return this.data["kind"];
                        };
                        reader_lexer_kind322.def = true;
                        obj317.methods["kind"] = reader_lexer_kind322;
                        setLineNumber(103);    // compilenode string
                        var string323 = new GraceString("}");
                        obj317.data["value"] = string323;
                        var reader_lexer_value324 = function() {
                          return this.data["value"];
                        };
                        reader_lexer_value324.def = true;
                        obj317.methods["value"] = reader_lexer_value324;
                        setLineNumber(104);    // compilenode num
                        obj317.data["size"] = new GraceNum(1);
                        var reader_lexer_size325 = function() {
                          return this.data["size"];
                        };
                        reader_lexer_size325.def = true;
                        obj317.methods["size"] = reader_lexer_size325;
                        superDepth = origSuperDepth;
                      };
                      obj_init_317.apply(inheritingObject, []);
                      return obj317;
                      };
                      obj22.methods["rBraceToken()object"] = func316;
                    var func326 = function(argcv) {    // method lParenToken
                      var returnTarget = invocationCount;
                      invocationCount++;
                      var curarg = 1;
                      if (argcv[0] !== 0)
                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lParenToken"));
                      setModuleName("lexer");
                      setLineNumber(106);    // compilenode object
                      var obj327 = Grace_allocObject(null, "lexer.new.lParenToken");
                      obj327.definitionModule = "lexer";
                      obj327.definitionLine = 106;
                      obj327.outer = this;
                      var reader_lexer_outer328 = function() {
                        return this.outer;
                      };
                      obj327.methods["outer"] = reader_lexer_outer328;
                      var obj_init_327 = function() {
                        var origSuperDepth = superDepth;
                        superDepth = obj327;
                        setLineNumber(107);    // compilenode call
                        var call329 = callmethodChecked(superDepth, "outer", [0]);
                        onOuter = true;
                        onSelf = true;
                        var call330 = callmethodChecked(call329, "token()object", [0, 1], this);
                        obj327.superobj = call330;
                        if (call330.data) obj327.data = call330.data;
                        if (call330.hasOwnProperty('_value'))
                            obj327._value = call330._value;
                        setLineNumber(108);    // compilenode string
                        var string331 = new GraceString("lparen");
                        obj327.data["kind"] = string331;
                        var reader_lexer_kind332 = function() {
                          return this.data["kind"];
                        };
                        reader_lexer_kind332.def = true;
                        obj327.methods["kind"] = reader_lexer_kind332;
                        setLineNumber(109);    // compilenode string
                        var string333 = new GraceString("(");
                        obj327.data["value"] = string333;
                        var reader_lexer_value334 = function() {
                          return this.data["value"];
                        };
                        reader_lexer_value334.def = true;
                        obj327.methods["value"] = reader_lexer_value334;
                        setLineNumber(110);    // compilenode num
                        obj327.data["size"] = new GraceNum(1);
                        var reader_lexer_size335 = function() {
                          return this.data["size"];
                        };
                        reader_lexer_size335.def = true;
                        obj327.methods["size"] = reader_lexer_size335;
                        superDepth = origSuperDepth;
                      };
                      obj_init_327.apply(obj327, []);
                      return obj327;
                    };
                    func326.paramCounts = [0];
                    obj22.methods["lParenToken"] = func326;
                    func326.definitionLine = 106;
                    func326.definitionModule = "lexer";
                      var func336 = function(argcv) {    // method lParenToken()object
                        var curarg = 1;
                        var inheritingObject = arguments[curarg++];
                        // Start argument processing
                        curarg = 1;
                        // End argument processing
                        setModuleName("lexer");
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var obj337 = Grace_allocObject(null, "lParenToken");
                        obj337.definitionModule = "lexer";
                        obj337.definitionLine = 106;
                        var inho337 = inheritingObject;
                        while (inho337.superobj) inho337 = inho337.superobj;
                        inho337.superobj = obj337;
                        obj337.data = inheritingObject.data;
                        if (inheritingObject.hasOwnProperty('_value'))
                          obj337._value = inheritingObject._value;
                        obj337.outer = this;
                        var reader_lexer_outer338 = function() {
                          return this.outer;
                        };
                        obj337.methods["outer"] = reader_lexer_outer338;
                        var obj_init_337 = function() {
                          var origSuperDepth = superDepth;
                          superDepth = obj337;
                          setLineNumber(107);    // compilenode call
                          var call339 = callmethodChecked(superDepth, "outer", [0]);
                          onOuter = true;
                          onSelf = true;
                          var call340 = callmethodChecked(call339, "token()object", [0, 1], this);
                          obj337.superobj = call340;
                          if (call340.data) obj337.data = call340.data;
                          if (call340.hasOwnProperty('_value'))
                              obj337._value = call340._value;
                          setLineNumber(108);    // compilenode string
                          var string341 = new GraceString("lparen");
                          obj337.data["kind"] = string341;
                          var reader_lexer_kind342 = function() {
                            return this.data["kind"];
                          };
                          reader_lexer_kind342.def = true;
                          obj337.methods["kind"] = reader_lexer_kind342;
                          setLineNumber(109);    // compilenode string
                          var string343 = new GraceString("(");
                          obj337.data["value"] = string343;
                          var reader_lexer_value344 = function() {
                            return this.data["value"];
                          };
                          reader_lexer_value344.def = true;
                          obj337.methods["value"] = reader_lexer_value344;
                          setLineNumber(110);    // compilenode num
                          obj337.data["size"] = new GraceNum(1);
                          var reader_lexer_size345 = function() {
                            return this.data["size"];
                          };
                          reader_lexer_size345.def = true;
                          obj337.methods["size"] = reader_lexer_size345;
                          superDepth = origSuperDepth;
                        };
                        obj_init_337.apply(inheritingObject, []);
                        return obj337;
                        };
                        obj22.methods["lParenToken()object"] = func336;
                      var func346 = function(argcv) {    // method rParenToken
                        var returnTarget = invocationCount;
                        invocationCount++;
                        var curarg = 1;
                        if (argcv[0] !== 0)
                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rParenToken"));
                        setModuleName("lexer");
                        setLineNumber(112);    // compilenode object
                        var obj347 = Grace_allocObject(null, "lexer.new.rParenToken");
                        obj347.definitionModule = "lexer";
                        obj347.definitionLine = 112;
                        obj347.outer = this;
                        var reader_lexer_outer348 = function() {
                          return this.outer;
                        };
                        obj347.methods["outer"] = reader_lexer_outer348;
                        var obj_init_347 = function() {
                          var origSuperDepth = superDepth;
                          superDepth = obj347;
                          setLineNumber(113);    // compilenode call
                          var call349 = callmethodChecked(superDepth, "outer", [0]);
                          onOuter = true;
                          onSelf = true;
                          var call350 = callmethodChecked(call349, "token()object", [0, 1], this);
                          obj347.superobj = call350;
                          if (call350.data) obj347.data = call350.data;
                          if (call350.hasOwnProperty('_value'))
                              obj347._value = call350._value;
                          setLineNumber(114);    // compilenode string
                          var string351 = new GraceString("rparen");
                          obj347.data["kind"] = string351;
                          var reader_lexer_kind352 = function() {
                            return this.data["kind"];
                          };
                          reader_lexer_kind352.def = true;
                          obj347.methods["kind"] = reader_lexer_kind352;
                          setLineNumber(115);    // compilenode string
                          var string353 = new GraceString(")");
                          obj347.data["value"] = string353;
                          var reader_lexer_value354 = function() {
                            return this.data["value"];
                          };
                          reader_lexer_value354.def = true;
                          obj347.methods["value"] = reader_lexer_value354;
                          setLineNumber(116);    // compilenode num
                          obj347.data["size"] = new GraceNum(1);
                          var reader_lexer_size355 = function() {
                            return this.data["size"];
                          };
                          reader_lexer_size355.def = true;
                          obj347.methods["size"] = reader_lexer_size355;
                          superDepth = origSuperDepth;
                        };
                        obj_init_347.apply(obj347, []);
                        return obj347;
                      };
                      func346.paramCounts = [0];
                      obj22.methods["rParenToken"] = func346;
                      func346.definitionLine = 112;
                      func346.definitionModule = "lexer";
                        var func356 = function(argcv) {    // method rParenToken()object
                          var curarg = 1;
                          var inheritingObject = arguments[curarg++];
                          // Start argument processing
                          curarg = 1;
                          // End argument processing
                          setModuleName("lexer");
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var obj357 = Grace_allocObject(null, "rParenToken");
                          obj357.definitionModule = "lexer";
                          obj357.definitionLine = 112;
                          var inho357 = inheritingObject;
                          while (inho357.superobj) inho357 = inho357.superobj;
                          inho357.superobj = obj357;
                          obj357.data = inheritingObject.data;
                          if (inheritingObject.hasOwnProperty('_value'))
                            obj357._value = inheritingObject._value;
                          obj357.outer = this;
                          var reader_lexer_outer358 = function() {
                            return this.outer;
                          };
                          obj357.methods["outer"] = reader_lexer_outer358;
                          var obj_init_357 = function() {
                            var origSuperDepth = superDepth;
                            superDepth = obj357;
                            setLineNumber(113);    // compilenode call
                            var call359 = callmethodChecked(superDepth, "outer", [0]);
                            onOuter = true;
                            onSelf = true;
                            var call360 = callmethodChecked(call359, "token()object", [0, 1], this);
                            obj357.superobj = call360;
                            if (call360.data) obj357.data = call360.data;
                            if (call360.hasOwnProperty('_value'))
                                obj357._value = call360._value;
                            setLineNumber(114);    // compilenode string
                            var string361 = new GraceString("rparen");
                            obj357.data["kind"] = string361;
                            var reader_lexer_kind362 = function() {
                              return this.data["kind"];
                            };
                            reader_lexer_kind362.def = true;
                            obj357.methods["kind"] = reader_lexer_kind362;
                            setLineNumber(115);    // compilenode string
                            var string363 = new GraceString(")");
                            obj357.data["value"] = string363;
                            var reader_lexer_value364 = function() {
                              return this.data["value"];
                            };
                            reader_lexer_value364.def = true;
                            obj357.methods["value"] = reader_lexer_value364;
                            setLineNumber(116);    // compilenode num
                            obj357.data["size"] = new GraceNum(1);
                            var reader_lexer_size365 = function() {
                              return this.data["size"];
                            };
                            reader_lexer_size365.def = true;
                            obj357.methods["size"] = reader_lexer_size365;
                            superDepth = origSuperDepth;
                          };
                          obj_init_357.apply(inheritingObject, []);
                          return obj357;
                          };
                          obj22.methods["rParenToken()object"] = func356;
                        var func366 = function(argcv) {    // method lSquareToken
                          var returnTarget = invocationCount;
                          invocationCount++;
                          var curarg = 1;
                          if (argcv[0] !== 0)
                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lSquareToken"));
                          setModuleName("lexer");
                          setLineNumber(118);    // compilenode object
                          var obj367 = Grace_allocObject(null, "lexer.new.lSquareToken");
                          obj367.definitionModule = "lexer";
                          obj367.definitionLine = 118;
                          obj367.outer = this;
                          var reader_lexer_outer368 = function() {
                            return this.outer;
                          };
                          obj367.methods["outer"] = reader_lexer_outer368;
                          var obj_init_367 = function() {
                            var origSuperDepth = superDepth;
                            superDepth = obj367;
                            setLineNumber(119);    // compilenode call
                            var call369 = callmethodChecked(superDepth, "outer", [0]);
                            onOuter = true;
                            onSelf = true;
                            var call370 = callmethodChecked(call369, "token()object", [0, 1], this);
                            obj367.superobj = call370;
                            if (call370.data) obj367.data = call370.data;
                            if (call370.hasOwnProperty('_value'))
                                obj367._value = call370._value;
                            setLineNumber(120);    // compilenode string
                            var string371 = new GraceString("lsquare");
                            obj367.data["kind"] = string371;
                            var reader_lexer_kind372 = function() {
                              return this.data["kind"];
                            };
                            reader_lexer_kind372.def = true;
                            obj367.methods["kind"] = reader_lexer_kind372;
                            setLineNumber(121);    // compilenode string
                            var string373 = new GraceString("[");
                            obj367.data["value"] = string373;
                            var reader_lexer_value374 = function() {
                              return this.data["value"];
                            };
                            reader_lexer_value374.def = true;
                            obj367.methods["value"] = reader_lexer_value374;
                            setLineNumber(122);    // compilenode num
                            obj367.data["size"] = new GraceNum(1);
                            var reader_lexer_size375 = function() {
                              return this.data["size"];
                            };
                            reader_lexer_size375.def = true;
                            obj367.methods["size"] = reader_lexer_size375;
                            superDepth = origSuperDepth;
                          };
                          obj_init_367.apply(obj367, []);
                          return obj367;
                        };
                        func366.paramCounts = [0];
                        obj22.methods["lSquareToken"] = func366;
                        func366.definitionLine = 118;
                        func366.definitionModule = "lexer";
                          var func376 = function(argcv) {    // method lSquareToken()object
                            var curarg = 1;
                            var inheritingObject = arguments[curarg++];
                            // Start argument processing
                            curarg = 1;
                            // End argument processing
                            setModuleName("lexer");
                            var returnTarget = invocationCount;
                            invocationCount++;
                            var obj377 = Grace_allocObject(null, "lSquareToken");
                            obj377.definitionModule = "lexer";
                            obj377.definitionLine = 118;
                            var inho377 = inheritingObject;
                            while (inho377.superobj) inho377 = inho377.superobj;
                            inho377.superobj = obj377;
                            obj377.data = inheritingObject.data;
                            if (inheritingObject.hasOwnProperty('_value'))
                              obj377._value = inheritingObject._value;
                            obj377.outer = this;
                            var reader_lexer_outer378 = function() {
                              return this.outer;
                            };
                            obj377.methods["outer"] = reader_lexer_outer378;
                            var obj_init_377 = function() {
                              var origSuperDepth = superDepth;
                              superDepth = obj377;
                              setLineNumber(119);    // compilenode call
                              var call379 = callmethodChecked(superDepth, "outer", [0]);
                              onOuter = true;
                              onSelf = true;
                              var call380 = callmethodChecked(call379, "token()object", [0, 1], this);
                              obj377.superobj = call380;
                              if (call380.data) obj377.data = call380.data;
                              if (call380.hasOwnProperty('_value'))
                                  obj377._value = call380._value;
                              setLineNumber(120);    // compilenode string
                              var string381 = new GraceString("lsquare");
                              obj377.data["kind"] = string381;
                              var reader_lexer_kind382 = function() {
                                return this.data["kind"];
                              };
                              reader_lexer_kind382.def = true;
                              obj377.methods["kind"] = reader_lexer_kind382;
                              setLineNumber(121);    // compilenode string
                              var string383 = new GraceString("[");
                              obj377.data["value"] = string383;
                              var reader_lexer_value384 = function() {
                                return this.data["value"];
                              };
                              reader_lexer_value384.def = true;
                              obj377.methods["value"] = reader_lexer_value384;
                              setLineNumber(122);    // compilenode num
                              obj377.data["size"] = new GraceNum(1);
                              var reader_lexer_size385 = function() {
                                return this.data["size"];
                              };
                              reader_lexer_size385.def = true;
                              obj377.methods["size"] = reader_lexer_size385;
                              superDepth = origSuperDepth;
                            };
                            obj_init_377.apply(inheritingObject, []);
                            return obj377;
                            };
                            obj22.methods["lSquareToken()object"] = func376;
                          var func386 = function(argcv) {    // method rSquareToken
                            var returnTarget = invocationCount;
                            invocationCount++;
                            var curarg = 1;
                            if (argcv[0] !== 0)
                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rSquareToken"));
                            setModuleName("lexer");
                            setLineNumber(124);    // compilenode object
                            var obj387 = Grace_allocObject(null, "lexer.new.rSquareToken");
                            obj387.definitionModule = "lexer";
                            obj387.definitionLine = 124;
                            obj387.outer = this;
                            var reader_lexer_outer388 = function() {
                              return this.outer;
                            };
                            obj387.methods["outer"] = reader_lexer_outer388;
                            var obj_init_387 = function() {
                              var origSuperDepth = superDepth;
                              superDepth = obj387;
                              setLineNumber(125);    // compilenode call
                              var call389 = callmethodChecked(superDepth, "outer", [0]);
                              onOuter = true;
                              onSelf = true;
                              var call390 = callmethodChecked(call389, "token()object", [0, 1], this);
                              obj387.superobj = call390;
                              if (call390.data) obj387.data = call390.data;
                              if (call390.hasOwnProperty('_value'))
                                  obj387._value = call390._value;
                              setLineNumber(126);    // compilenode string
                              var string391 = new GraceString("rsquare");
                              obj387.data["kind"] = string391;
                              var reader_lexer_kind392 = function() {
                                return this.data["kind"];
                              };
                              reader_lexer_kind392.def = true;
                              obj387.methods["kind"] = reader_lexer_kind392;
                              setLineNumber(127);    // compilenode string
                              var string393 = new GraceString("]");
                              obj387.data["value"] = string393;
                              var reader_lexer_value394 = function() {
                                return this.data["value"];
                              };
                              reader_lexer_value394.def = true;
                              obj387.methods["value"] = reader_lexer_value394;
                              setLineNumber(128);    // compilenode num
                              obj387.data["size"] = new GraceNum(1);
                              var reader_lexer_size395 = function() {
                                return this.data["size"];
                              };
                              reader_lexer_size395.def = true;
                              obj387.methods["size"] = reader_lexer_size395;
                              superDepth = origSuperDepth;
                            };
                            obj_init_387.apply(obj387, []);
                            return obj387;
                          };
                          func386.paramCounts = [0];
                          obj22.methods["rSquareToken"] = func386;
                          func386.definitionLine = 124;
                          func386.definitionModule = "lexer";
                            var func396 = function(argcv) {    // method rSquareToken()object
                              var curarg = 1;
                              var inheritingObject = arguments[curarg++];
                              // Start argument processing
                              curarg = 1;
                              // End argument processing
                              setModuleName("lexer");
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var obj397 = Grace_allocObject(null, "rSquareToken");
                              obj397.definitionModule = "lexer";
                              obj397.definitionLine = 124;
                              var inho397 = inheritingObject;
                              while (inho397.superobj) inho397 = inho397.superobj;
                              inho397.superobj = obj397;
                              obj397.data = inheritingObject.data;
                              if (inheritingObject.hasOwnProperty('_value'))
                                obj397._value = inheritingObject._value;
                              obj397.outer = this;
                              var reader_lexer_outer398 = function() {
                                return this.outer;
                              };
                              obj397.methods["outer"] = reader_lexer_outer398;
                              var obj_init_397 = function() {
                                var origSuperDepth = superDepth;
                                superDepth = obj397;
                                setLineNumber(125);    // compilenode call
                                var call399 = callmethodChecked(superDepth, "outer", [0]);
                                onOuter = true;
                                onSelf = true;
                                var call400 = callmethodChecked(call399, "token()object", [0, 1], this);
                                obj397.superobj = call400;
                                if (call400.data) obj397.data = call400.data;
                                if (call400.hasOwnProperty('_value'))
                                    obj397._value = call400._value;
                                setLineNumber(126);    // compilenode string
                                var string401 = new GraceString("rsquare");
                                obj397.data["kind"] = string401;
                                var reader_lexer_kind402 = function() {
                                  return this.data["kind"];
                                };
                                reader_lexer_kind402.def = true;
                                obj397.methods["kind"] = reader_lexer_kind402;
                                setLineNumber(127);    // compilenode string
                                var string403 = new GraceString("]");
                                obj397.data["value"] = string403;
                                var reader_lexer_value404 = function() {
                                  return this.data["value"];
                                };
                                reader_lexer_value404.def = true;
                                obj397.methods["value"] = reader_lexer_value404;
                                setLineNumber(128);    // compilenode num
                                obj397.data["size"] = new GraceNum(1);
                                var reader_lexer_size405 = function() {
                                  return this.data["size"];
                                };
                                reader_lexer_size405.def = true;
                                obj397.methods["size"] = reader_lexer_size405;
                                superDepth = origSuperDepth;
                              };
                              obj_init_397.apply(inheritingObject, []);
                              return obj397;
                              };
                              obj22.methods["rSquareToken()object"] = func396;
                            var func406 = function(argcv) {    // method commaToken
                              var returnTarget = invocationCount;
                              invocationCount++;
                              var curarg = 1;
                              if (argcv[0] !== 0)
                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for commaToken"));
                              setModuleName("lexer");
                              setLineNumber(130);    // compilenode object
                              var obj407 = Grace_allocObject(null, "lexer.new.commaToken");
                              obj407.definitionModule = "lexer";
                              obj407.definitionLine = 130;
                              obj407.outer = this;
                              var reader_lexer_outer408 = function() {
                                return this.outer;
                              };
                              obj407.methods["outer"] = reader_lexer_outer408;
                              var obj_init_407 = function() {
                                var origSuperDepth = superDepth;
                                superDepth = obj407;
                                setLineNumber(131);    // compilenode call
                                var call409 = callmethodChecked(superDepth, "outer", [0]);
                                onOuter = true;
                                onSelf = true;
                                var call410 = callmethodChecked(call409, "token()object", [0, 1], this);
                                obj407.superobj = call410;
                                if (call410.data) obj407.data = call410.data;
                                if (call410.hasOwnProperty('_value'))
                                    obj407._value = call410._value;
                                setLineNumber(132);    // compilenode string
                                var string411 = new GraceString("comma");
                                obj407.data["kind"] = string411;
                                var reader_lexer_kind412 = function() {
                                  return this.data["kind"];
                                };
                                reader_lexer_kind412.def = true;
                                obj407.methods["kind"] = reader_lexer_kind412;
                                setLineNumber(133);    // compilenode string
                                var string413 = new GraceString(",");
                                obj407.data["value"] = string413;
                                var reader_lexer_value414 = function() {
                                  return this.data["value"];
                                };
                                reader_lexer_value414.def = true;
                                obj407.methods["value"] = reader_lexer_value414;
                                setLineNumber(134);    // compilenode num
                                obj407.data["size"] = new GraceNum(1);
                                var reader_lexer_size415 = function() {
                                  return this.data["size"];
                                };
                                reader_lexer_size415.def = true;
                                obj407.methods["size"] = reader_lexer_size415;
                                superDepth = origSuperDepth;
                              };
                              obj_init_407.apply(obj407, []);
                              return obj407;
                            };
                            func406.paramCounts = [0];
                            obj22.methods["commaToken"] = func406;
                            func406.definitionLine = 130;
                            func406.definitionModule = "lexer";
                              var func416 = function(argcv) {    // method commaToken()object
                                var curarg = 1;
                                var inheritingObject = arguments[curarg++];
                                // Start argument processing
                                curarg = 1;
                                // End argument processing
                                setModuleName("lexer");
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var obj417 = Grace_allocObject(null, "commaToken");
                                obj417.definitionModule = "lexer";
                                obj417.definitionLine = 130;
                                var inho417 = inheritingObject;
                                while (inho417.superobj) inho417 = inho417.superobj;
                                inho417.superobj = obj417;
                                obj417.data = inheritingObject.data;
                                if (inheritingObject.hasOwnProperty('_value'))
                                  obj417._value = inheritingObject._value;
                                obj417.outer = this;
                                var reader_lexer_outer418 = function() {
                                  return this.outer;
                                };
                                obj417.methods["outer"] = reader_lexer_outer418;
                                var obj_init_417 = function() {
                                  var origSuperDepth = superDepth;
                                  superDepth = obj417;
                                  setLineNumber(131);    // compilenode call
                                  var call419 = callmethodChecked(superDepth, "outer", [0]);
                                  onOuter = true;
                                  onSelf = true;
                                  var call420 = callmethodChecked(call419, "token()object", [0, 1], this);
                                  obj417.superobj = call420;
                                  if (call420.data) obj417.data = call420.data;
                                  if (call420.hasOwnProperty('_value'))
                                      obj417._value = call420._value;
                                  setLineNumber(132);    // compilenode string
                                  var string421 = new GraceString("comma");
                                  obj417.data["kind"] = string421;
                                  var reader_lexer_kind422 = function() {
                                    return this.data["kind"];
                                  };
                                  reader_lexer_kind422.def = true;
                                  obj417.methods["kind"] = reader_lexer_kind422;
                                  setLineNumber(133);    // compilenode string
                                  var string423 = new GraceString(",");
                                  obj417.data["value"] = string423;
                                  var reader_lexer_value424 = function() {
                                    return this.data["value"];
                                  };
                                  reader_lexer_value424.def = true;
                                  obj417.methods["value"] = reader_lexer_value424;
                                  setLineNumber(134);    // compilenode num
                                  obj417.data["size"] = new GraceNum(1);
                                  var reader_lexer_size425 = function() {
                                    return this.data["size"];
                                  };
                                  reader_lexer_size425.def = true;
                                  obj417.methods["size"] = reader_lexer_size425;
                                  superDepth = origSuperDepth;
                                };
                                obj_init_417.apply(inheritingObject, []);
                                return obj417;
                                };
                                obj22.methods["commaToken()object"] = func416;
                              var func426 = function(argcv) {    // method colonToken
                                var returnTarget = invocationCount;
                                invocationCount++;
                                var curarg = 1;
                                if (argcv[0] !== 0)
                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for colonToken"));
                                setModuleName("lexer");
                                setLineNumber(136);    // compilenode object
                                var obj427 = Grace_allocObject(null, "lexer.new.colonToken");
                                obj427.definitionModule = "lexer";
                                obj427.definitionLine = 136;
                                obj427.outer = this;
                                var reader_lexer_outer428 = function() {
                                  return this.outer;
                                };
                                obj427.methods["outer"] = reader_lexer_outer428;
                                var obj_init_427 = function() {
                                  var origSuperDepth = superDepth;
                                  superDepth = obj427;
                                  setLineNumber(137);    // compilenode call
                                  var call429 = callmethodChecked(superDepth, "outer", [0]);
                                  onOuter = true;
                                  onSelf = true;
                                  var call430 = callmethodChecked(call429, "token()object", [0, 1], this);
                                  obj427.superobj = call430;
                                  if (call430.data) obj427.data = call430.data;
                                  if (call430.hasOwnProperty('_value'))
                                      obj427._value = call430._value;
                                  setLineNumber(138);    // compilenode string
                                  var string431 = new GraceString("colon");
                                  obj427.data["kind"] = string431;
                                  var reader_lexer_kind432 = function() {
                                    return this.data["kind"];
                                  };
                                  reader_lexer_kind432.def = true;
                                  obj427.methods["kind"] = reader_lexer_kind432;
                                  setLineNumber(139);    // compilenode string
                                  var string433 = new GraceString(":");
                                  obj427.data["value"] = string433;
                                  var reader_lexer_value434 = function() {
                                    return this.data["value"];
                                  };
                                  reader_lexer_value434.def = true;
                                  obj427.methods["value"] = reader_lexer_value434;
                                  setLineNumber(140);    // compilenode num
                                  obj427.data["size"] = new GraceNum(1);
                                  var reader_lexer_size435 = function() {
                                    return this.data["size"];
                                  };
                                  reader_lexer_size435.def = true;
                                  obj427.methods["size"] = reader_lexer_size435;
                                  superDepth = origSuperDepth;
                                };
                                obj_init_427.apply(obj427, []);
                                return obj427;
                              };
                              func426.paramCounts = [0];
                              obj22.methods["colonToken"] = func426;
                              func426.definitionLine = 136;
                              func426.definitionModule = "lexer";
                                var func436 = function(argcv) {    // method colonToken()object
                                  var curarg = 1;
                                  var inheritingObject = arguments[curarg++];
                                  // Start argument processing
                                  curarg = 1;
                                  // End argument processing
                                  setModuleName("lexer");
                                  var returnTarget = invocationCount;
                                  invocationCount++;
                                  var obj437 = Grace_allocObject(null, "colonToken");
                                  obj437.definitionModule = "lexer";
                                  obj437.definitionLine = 136;
                                  var inho437 = inheritingObject;
                                  while (inho437.superobj) inho437 = inho437.superobj;
                                  inho437.superobj = obj437;
                                  obj437.data = inheritingObject.data;
                                  if (inheritingObject.hasOwnProperty('_value'))
                                    obj437._value = inheritingObject._value;
                                  obj437.outer = this;
                                  var reader_lexer_outer438 = function() {
                                    return this.outer;
                                  };
                                  obj437.methods["outer"] = reader_lexer_outer438;
                                  var obj_init_437 = function() {
                                    var origSuperDepth = superDepth;
                                    superDepth = obj437;
                                    setLineNumber(137);    // compilenode call
                                    var call439 = callmethodChecked(superDepth, "outer", [0]);
                                    onOuter = true;
                                    onSelf = true;
                                    var call440 = callmethodChecked(call439, "token()object", [0, 1], this);
                                    obj437.superobj = call440;
                                    if (call440.data) obj437.data = call440.data;
                                    if (call440.hasOwnProperty('_value'))
                                        obj437._value = call440._value;
                                    setLineNumber(138);    // compilenode string
                                    var string441 = new GraceString("colon");
                                    obj437.data["kind"] = string441;
                                    var reader_lexer_kind442 = function() {
                                      return this.data["kind"];
                                    };
                                    reader_lexer_kind442.def = true;
                                    obj437.methods["kind"] = reader_lexer_kind442;
                                    setLineNumber(139);    // compilenode string
                                    var string443 = new GraceString(":");
                                    obj437.data["value"] = string443;
                                    var reader_lexer_value444 = function() {
                                      return this.data["value"];
                                    };
                                    reader_lexer_value444.def = true;
                                    obj437.methods["value"] = reader_lexer_value444;
                                    setLineNumber(140);    // compilenode num
                                    obj437.data["size"] = new GraceNum(1);
                                    var reader_lexer_size445 = function() {
                                      return this.data["size"];
                                    };
                                    reader_lexer_size445.def = true;
                                    obj437.methods["size"] = reader_lexer_size445;
                                    superDepth = origSuperDepth;
                                  };
                                  obj_init_437.apply(inheritingObject, []);
                                  return obj437;
                                  };
                                  obj22.methods["colonToken()object"] = func436;
                                var func446 = function(argcv) {    // method dotToken
                                  var returnTarget = invocationCount;
                                  invocationCount++;
                                  var curarg = 1;
                                  if (argcv[0] !== 0)
                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for dotToken"));
                                  setModuleName("lexer");
                                  setLineNumber(142);    // compilenode object
                                  var obj447 = Grace_allocObject(null, "lexer.new.dotToken");
                                  obj447.definitionModule = "lexer";
                                  obj447.definitionLine = 142;
                                  obj447.outer = this;
                                  var reader_lexer_outer448 = function() {
                                    return this.outer;
                                  };
                                  obj447.methods["outer"] = reader_lexer_outer448;
                                  var obj_init_447 = function() {
                                    var origSuperDepth = superDepth;
                                    superDepth = obj447;
                                    setLineNumber(143);    // compilenode call
                                    var call449 = callmethodChecked(superDepth, "outer", [0]);
                                    onOuter = true;
                                    onSelf = true;
                                    var call450 = callmethodChecked(call449, "token()object", [0, 1], this);
                                    obj447.superobj = call450;
                                    if (call450.data) obj447.data = call450.data;
                                    if (call450.hasOwnProperty('_value'))
                                        obj447._value = call450._value;
                                    setLineNumber(144);    // compilenode string
                                    var string451 = new GraceString("dot");
                                    obj447.data["kind"] = string451;
                                    var reader_lexer_kind452 = function() {
                                      return this.data["kind"];
                                    };
                                    reader_lexer_kind452.def = true;
                                    obj447.methods["kind"] = reader_lexer_kind452;
                                    setLineNumber(145);    // compilenode string
                                    var string453 = new GraceString(".");
                                    obj447.data["value"] = string453;
                                    var reader_lexer_value454 = function() {
                                      return this.data["value"];
                                    };
                                    reader_lexer_value454.def = true;
                                    obj447.methods["value"] = reader_lexer_value454;
                                    setLineNumber(146);    // compilenode num
                                    obj447.data["size"] = new GraceNum(1);
                                    var reader_lexer_size455 = function() {
                                      return this.data["size"];
                                    };
                                    reader_lexer_size455.def = true;
                                    obj447.methods["size"] = reader_lexer_size455;
                                    superDepth = origSuperDepth;
                                  };
                                  obj_init_447.apply(obj447, []);
                                  return obj447;
                                };
                                func446.paramCounts = [0];
                                obj22.methods["dotToken"] = func446;
                                func446.definitionLine = 142;
                                func446.definitionModule = "lexer";
                                  var func456 = function(argcv) {    // method dotToken()object
                                    var curarg = 1;
                                    var inheritingObject = arguments[curarg++];
                                    // Start argument processing
                                    curarg = 1;
                                    // End argument processing
                                    setModuleName("lexer");
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var obj457 = Grace_allocObject(null, "dotToken");
                                    obj457.definitionModule = "lexer";
                                    obj457.definitionLine = 142;
                                    var inho457 = inheritingObject;
                                    while (inho457.superobj) inho457 = inho457.superobj;
                                    inho457.superobj = obj457;
                                    obj457.data = inheritingObject.data;
                                    if (inheritingObject.hasOwnProperty('_value'))
                                      obj457._value = inheritingObject._value;
                                    obj457.outer = this;
                                    var reader_lexer_outer458 = function() {
                                      return this.outer;
                                    };
                                    obj457.methods["outer"] = reader_lexer_outer458;
                                    var obj_init_457 = function() {
                                      var origSuperDepth = superDepth;
                                      superDepth = obj457;
                                      setLineNumber(143);    // compilenode call
                                      var call459 = callmethodChecked(superDepth, "outer", [0]);
                                      onOuter = true;
                                      onSelf = true;
                                      var call460 = callmethodChecked(call459, "token()object", [0, 1], this);
                                      obj457.superobj = call460;
                                      if (call460.data) obj457.data = call460.data;
                                      if (call460.hasOwnProperty('_value'))
                                          obj457._value = call460._value;
                                      setLineNumber(144);    // compilenode string
                                      var string461 = new GraceString("dot");
                                      obj457.data["kind"] = string461;
                                      var reader_lexer_kind462 = function() {
                                        return this.data["kind"];
                                      };
                                      reader_lexer_kind462.def = true;
                                      obj457.methods["kind"] = reader_lexer_kind462;
                                      setLineNumber(145);    // compilenode string
                                      var string463 = new GraceString(".");
                                      obj457.data["value"] = string463;
                                      var reader_lexer_value464 = function() {
                                        return this.data["value"];
                                      };
                                      reader_lexer_value464.def = true;
                                      obj457.methods["value"] = reader_lexer_value464;
                                      setLineNumber(146);    // compilenode num
                                      obj457.data["size"] = new GraceNum(1);
                                      var reader_lexer_size465 = function() {
                                        return this.data["size"];
                                      };
                                      reader_lexer_size465.def = true;
                                      obj457.methods["size"] = reader_lexer_size465;
                                      superDepth = origSuperDepth;
                                    };
                                    obj_init_457.apply(inheritingObject, []);
                                    return obj457;
                                    };
                                    obj22.methods["dotToken()object"] = func456;
                                  var func466 = function(argcv) {    // method numToken(2)
                                    var returnTarget = invocationCount;
                                    invocationCount++;
                                    var curarg = 1;
                                    var var_v = arguments[curarg];
                                    curarg++;
                                    var var_b = arguments[curarg];
                                    curarg++;
                                    if (argcv[0] !== 2)
                                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for numToken(2)"));
                                    setModuleName("lexer");
                                    setLineNumber(148);    // compilenode object
                                    var obj467 = Grace_allocObject(null, "lexer.new.numToken");
                                    obj467.definitionModule = "lexer";
                                    obj467.definitionLine = 148;
                                    obj467.outer = this;
                                    var reader_lexer_outer468 = function() {
                                      return this.outer;
                                    };
                                    obj467.methods["outer"] = reader_lexer_outer468;
                                    var obj_init_467 = function() {
                                      var origSuperDepth = superDepth;
                                      superDepth = obj467;
                                      setLineNumber(149);    // compilenode call
                                      var call469 = callmethodChecked(superDepth, "outer", [0]);
                                      onOuter = true;
                                      onSelf = true;
                                      var call470 = callmethodChecked(call469, "token()object", [0, 1], this);
                                      obj467.superobj = call470;
                                      if (call470.data) obj467.data = call470.data;
                                      if (call470.hasOwnProperty('_value'))
                                          obj467._value = call470._value;
                                      setLineNumber(150);    // compilenode string
                                      var string471 = new GraceString("num");
                                      obj467.data["kind"] = string471;
                                      var reader_lexer_kind472 = function() {
                                        return this.data["kind"];
                                      };
                                      reader_lexer_kind472.def = true;
                                      obj467.methods["kind"] = reader_lexer_kind472;
                                      setLineNumber(151);    // compilenode identifier
                                      obj467.data["value"] = var_v;
                                      var reader_lexer_value473 = function() {
                                        return this.data["value"];
                                      };
                                      reader_lexer_value473.def = true;
                                      obj467.methods["value"] = reader_lexer_value473;
                                      setLineNumber(152);    // compilenode identifier
                                      obj467.data["base"] = var_b;
                                      var reader_lexer_base474 = function() {
                                        return this.data["base"];
                                      };
                                      reader_lexer_base474.def = true;
                                      obj467.methods["base"] = reader_lexer_base474;
                                      setLineNumber(153);    // compilenode call
                                      var call475 = callmethodChecked(superDepth, "outer", [0]);
                                      onOuter = true;
                                      onSelf = true;
                                      var call476 = callmethodChecked(call475, "startPosition", [0]);
                                      var call478 = callmethodChecked(superDepth, "outer", [0]);
                                      onOuter = true;
                                      onSelf = true;
                                      var call479 = callmethodChecked(call478, "linePosition", [0]);
                                      var diff481 = callmethodChecked(call479, "-", [1], call476);
                                      obj467.data["size"] = diff481;
                                      var reader_lexer_size482 = function() {
                                        return this.data["size"];
                                      };
                                      reader_lexer_size482.def = true;
                                      obj467.methods["size"] = reader_lexer_size482;
                                      superDepth = origSuperDepth;
                                    };
                                    obj_init_467.apply(obj467, []);
                                    return obj467;
                                  };
                                  func466.paramCounts = [2];
                                  obj22.methods["numToken"] = func466;
                                  func466.definitionLine = 148;
                                  func466.definitionModule = "lexer";
                                    var func483 = function(argcv) {    // method numToken(2     )()object
                                      var curarg = 1;
                                      var var_v = arguments[curarg];
                                      curarg++;
                                      var var_b = arguments[curarg];
                                      curarg++;
                                      var inheritingObject = arguments[curarg++];
                                      // Start argument processing
                                      curarg = 1;
                                      curarg++;
                                      curarg++;
                                      // End argument processing
                                      setModuleName("lexer");
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var obj484 = Grace_allocObject(null, "numToken");
                                      obj484.definitionModule = "lexer";
                                      obj484.definitionLine = 148;
                                      var inho484 = inheritingObject;
                                      while (inho484.superobj) inho484 = inho484.superobj;
                                      inho484.superobj = obj484;
                                      obj484.data = inheritingObject.data;
                                      if (inheritingObject.hasOwnProperty('_value'))
                                        obj484._value = inheritingObject._value;
                                      obj484.outer = this;
                                      var reader_lexer_outer485 = function() {
                                        return this.outer;
                                      };
                                      obj484.methods["outer"] = reader_lexer_outer485;
                                      var obj_init_484 = function() {
                                        var origSuperDepth = superDepth;
                                        superDepth = obj484;
                                        setLineNumber(149);    // compilenode call
                                        var call486 = callmethodChecked(superDepth, "outer", [0]);
                                        onOuter = true;
                                        onSelf = true;
                                        var call487 = callmethodChecked(call486, "token()object", [0, 1], this);
                                        obj484.superobj = call487;
                                        if (call487.data) obj484.data = call487.data;
                                        if (call487.hasOwnProperty('_value'))
                                            obj484._value = call487._value;
                                        setLineNumber(150);    // compilenode string
                                        var string488 = new GraceString("num");
                                        obj484.data["kind"] = string488;
                                        var reader_lexer_kind489 = function() {
                                          return this.data["kind"];
                                        };
                                        reader_lexer_kind489.def = true;
                                        obj484.methods["kind"] = reader_lexer_kind489;
                                        setLineNumber(151);    // compilenode identifier
                                        obj484.data["value"] = var_v;
                                        var reader_lexer_value490 = function() {
                                          return this.data["value"];
                                        };
                                        reader_lexer_value490.def = true;
                                        obj484.methods["value"] = reader_lexer_value490;
                                        setLineNumber(152);    // compilenode identifier
                                        obj484.data["base"] = var_b;
                                        var reader_lexer_base491 = function() {
                                          return this.data["base"];
                                        };
                                        reader_lexer_base491.def = true;
                                        obj484.methods["base"] = reader_lexer_base491;
                                        setLineNumber(153);    // compilenode call
                                        var call492 = callmethodChecked(superDepth, "outer", [0]);
                                        onOuter = true;
                                        onSelf = true;
                                        var call493 = callmethodChecked(call492, "startPosition", [0]);
                                        var call495 = callmethodChecked(superDepth, "outer", [0]);
                                        onOuter = true;
                                        onSelf = true;
                                        var call496 = callmethodChecked(call495, "linePosition", [0]);
                                        var diff498 = callmethodChecked(call496, "-", [1], call493);
                                        obj484.data["size"] = diff498;
                                        var reader_lexer_size499 = function() {
                                          return this.data["size"];
                                        };
                                        reader_lexer_size499.def = true;
                                        obj484.methods["size"] = reader_lexer_size499;
                                        superDepth = origSuperDepth;
                                      };
                                      obj_init_484.apply(inheritingObject, []);
                                      return obj484;
                                      };
                                      obj22.methods["numToken()object"] = func483;
                                    var func500 = function(argcv) {    // method keywordToken(1)
                                      var returnTarget = invocationCount;
                                      invocationCount++;
                                      var curarg = 1;
                                      var var_v = arguments[curarg];
                                      curarg++;
                                      if (argcv[0] !== 1)
                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for keywordToken(1)"));
                                      setModuleName("lexer");
                                      setLineNumber(155);    // compilenode object
                                      var obj501 = Grace_allocObject(null, "lexer.new.keywordToken");
                                      obj501.definitionModule = "lexer";
                                      obj501.definitionLine = 155;
                                      obj501.outer = this;
                                      var reader_lexer_outer502 = function() {
                                        return this.outer;
                                      };
                                      obj501.methods["outer"] = reader_lexer_outer502;
                                      var obj_init_501 = function() {
                                        var origSuperDepth = superDepth;
                                        superDepth = obj501;
                                        setLineNumber(156);    // compilenode call
                                        var call503 = callmethodChecked(superDepth, "outer", [0]);
                                        onOuter = true;
                                        onSelf = true;
                                        var call504 = callmethodChecked(call503, "token()object", [0, 1], this);
                                        obj501.superobj = call504;
                                        if (call504.data) obj501.data = call504.data;
                                        if (call504.hasOwnProperty('_value'))
                                            obj501._value = call504._value;
                                        setLineNumber(157);    // compilenode string
                                        var string505 = new GraceString("keyword");
                                        obj501.data["kind"] = string505;
                                        var reader_lexer_kind506 = function() {
                                          return this.data["kind"];
                                        };
                                        reader_lexer_kind506.def = true;
                                        obj501.methods["kind"] = reader_lexer_kind506;
                                        setLineNumber(158);    // compilenode identifier
                                        obj501.data["value"] = var_v;
                                        var reader_lexer_value507 = function() {
                                          return this.data["value"];
                                        };
                                        reader_lexer_value507.def = true;
                                        obj501.methods["value"] = reader_lexer_value507;
                                        setLineNumber(159);    // compilenode identifier
                                        var call508 = callmethodChecked(var_v, "size", [0]);
                                        obj501.data["size"] = call508;
                                        var reader_lexer_size509 = function() {
                                          return this.data["size"];
                                        };
                                        reader_lexer_size509.def = true;
                                        obj501.methods["size"] = reader_lexer_size509;
                                        superDepth = origSuperDepth;
                                      };
                                      obj_init_501.apply(obj501, []);
                                      return obj501;
                                    };
                                    func500.paramCounts = [1];
                                    obj22.methods["keywordToken"] = func500;
                                    func500.definitionLine = 155;
                                    func500.definitionModule = "lexer";
                                      var func510 = function(argcv) {    // method keywordToken(1     )()object
                                        var curarg = 1;
                                        var var_v = arguments[curarg];
                                        curarg++;
                                        var inheritingObject = arguments[curarg++];
                                        // Start argument processing
                                        curarg = 1;
                                        curarg++;
                                        // End argument processing
                                        setModuleName("lexer");
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var obj511 = Grace_allocObject(null, "keywordToken");
                                        obj511.definitionModule = "lexer";
                                        obj511.definitionLine = 155;
                                        var inho511 = inheritingObject;
                                        while (inho511.superobj) inho511 = inho511.superobj;
                                        inho511.superobj = obj511;
                                        obj511.data = inheritingObject.data;
                                        if (inheritingObject.hasOwnProperty('_value'))
                                          obj511._value = inheritingObject._value;
                                        obj511.outer = this;
                                        var reader_lexer_outer512 = function() {
                                          return this.outer;
                                        };
                                        obj511.methods["outer"] = reader_lexer_outer512;
                                        var obj_init_511 = function() {
                                          var origSuperDepth = superDepth;
                                          superDepth = obj511;
                                          setLineNumber(156);    // compilenode call
                                          var call513 = callmethodChecked(superDepth, "outer", [0]);
                                          onOuter = true;
                                          onSelf = true;
                                          var call514 = callmethodChecked(call513, "token()object", [0, 1], this);
                                          obj511.superobj = call514;
                                          if (call514.data) obj511.data = call514.data;
                                          if (call514.hasOwnProperty('_value'))
                                              obj511._value = call514._value;
                                          setLineNumber(157);    // compilenode string
                                          var string515 = new GraceString("keyword");
                                          obj511.data["kind"] = string515;
                                          var reader_lexer_kind516 = function() {
                                            return this.data["kind"];
                                          };
                                          reader_lexer_kind516.def = true;
                                          obj511.methods["kind"] = reader_lexer_kind516;
                                          setLineNumber(158);    // compilenode identifier
                                          obj511.data["value"] = var_v;
                                          var reader_lexer_value517 = function() {
                                            return this.data["value"];
                                          };
                                          reader_lexer_value517.def = true;
                                          obj511.methods["value"] = reader_lexer_value517;
                                          setLineNumber(159);    // compilenode identifier
                                          var call518 = callmethodChecked(var_v, "size", [0]);
                                          obj511.data["size"] = call518;
                                          var reader_lexer_size519 = function() {
                                            return this.data["size"];
                                          };
                                          reader_lexer_size519.def = true;
                                          obj511.methods["size"] = reader_lexer_size519;
                                          superDepth = origSuperDepth;
                                        };
                                        obj_init_511.apply(inheritingObject, []);
                                        return obj511;
                                        };
                                        obj22.methods["keywordToken()object"] = func510;
                                      var func520 = function(argcv) {    // method opToken(1)
                                        var returnTarget = invocationCount;
                                        invocationCount++;
                                        var curarg = 1;
                                        var var_v = arguments[curarg];
                                        curarg++;
                                        if (argcv[0] !== 1)
                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for opToken(1)"));
                                        setModuleName("lexer");
                                        setLineNumber(161);    // compilenode object
                                        var obj521 = Grace_allocObject(null, "lexer.new.opToken");
                                        obj521.definitionModule = "lexer";
                                        obj521.definitionLine = 161;
                                        obj521.outer = this;
                                        var reader_lexer_outer522 = function() {
                                          return this.outer;
                                        };
                                        obj521.methods["outer"] = reader_lexer_outer522;
                                        var obj_init_521 = function() {
                                          var origSuperDepth = superDepth;
                                          superDepth = obj521;
                                          setLineNumber(162);    // compilenode call
                                          var call523 = callmethodChecked(superDepth, "outer", [0]);
                                          onOuter = true;
                                          onSelf = true;
                                          var call524 = callmethodChecked(call523, "token()object", [0, 1], this);
                                          obj521.superobj = call524;
                                          if (call524.data) obj521.data = call524.data;
                                          if (call524.hasOwnProperty('_value'))
                                              obj521._value = call524._value;
                                          setLineNumber(163);    // compilenode string
                                          var string525 = new GraceString("op");
                                          obj521.data["kind"] = string525;
                                          var reader_lexer_kind526 = function() {
                                            return this.data["kind"];
                                          };
                                          reader_lexer_kind526.def = true;
                                          obj521.methods["kind"] = reader_lexer_kind526;
                                          setLineNumber(164);    // compilenode identifier
                                          obj521.data["value"] = var_v;
                                          var reader_lexer_value527 = function() {
                                            return this.data["value"];
                                          };
                                          reader_lexer_value527.def = true;
                                          obj521.methods["value"] = reader_lexer_value527;
                                          setLineNumber(165);    // compilenode identifier
                                          var call528 = callmethodChecked(var_v, "size", [0]);
                                          obj521.data["size"] = call528;
                                          var reader_lexer_size529 = function() {
                                            return this.data["size"];
                                          };
                                          reader_lexer_size529.def = true;
                                          obj521.methods["size"] = reader_lexer_size529;
                                          superDepth = origSuperDepth;
                                        };
                                        obj_init_521.apply(obj521, []);
                                        return obj521;
                                      };
                                      func520.paramCounts = [1];
                                      obj22.methods["opToken"] = func520;
                                      func520.definitionLine = 161;
                                      func520.definitionModule = "lexer";
                                        var func530 = function(argcv) {    // method opToken(1     )()object
                                          var curarg = 1;
                                          var var_v = arguments[curarg];
                                          curarg++;
                                          var inheritingObject = arguments[curarg++];
                                          // Start argument processing
                                          curarg = 1;
                                          curarg++;
                                          // End argument processing
                                          setModuleName("lexer");
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var obj531 = Grace_allocObject(null, "opToken");
                                          obj531.definitionModule = "lexer";
                                          obj531.definitionLine = 161;
                                          var inho531 = inheritingObject;
                                          while (inho531.superobj) inho531 = inho531.superobj;
                                          inho531.superobj = obj531;
                                          obj531.data = inheritingObject.data;
                                          if (inheritingObject.hasOwnProperty('_value'))
                                            obj531._value = inheritingObject._value;
                                          obj531.outer = this;
                                          var reader_lexer_outer532 = function() {
                                            return this.outer;
                                          };
                                          obj531.methods["outer"] = reader_lexer_outer532;
                                          var obj_init_531 = function() {
                                            var origSuperDepth = superDepth;
                                            superDepth = obj531;
                                            setLineNumber(162);    // compilenode call
                                            var call533 = callmethodChecked(superDepth, "outer", [0]);
                                            onOuter = true;
                                            onSelf = true;
                                            var call534 = callmethodChecked(call533, "token()object", [0, 1], this);
                                            obj531.superobj = call534;
                                            if (call534.data) obj531.data = call534.data;
                                            if (call534.hasOwnProperty('_value'))
                                                obj531._value = call534._value;
                                            setLineNumber(163);    // compilenode string
                                            var string535 = new GraceString("op");
                                            obj531.data["kind"] = string535;
                                            var reader_lexer_kind536 = function() {
                                              return this.data["kind"];
                                            };
                                            reader_lexer_kind536.def = true;
                                            obj531.methods["kind"] = reader_lexer_kind536;
                                            setLineNumber(164);    // compilenode identifier
                                            obj531.data["value"] = var_v;
                                            var reader_lexer_value537 = function() {
                                              return this.data["value"];
                                            };
                                            reader_lexer_value537.def = true;
                                            obj531.methods["value"] = reader_lexer_value537;
                                            setLineNumber(165);    // compilenode identifier
                                            var call538 = callmethodChecked(var_v, "size", [0]);
                                            obj531.data["size"] = call538;
                                            var reader_lexer_size539 = function() {
                                              return this.data["size"];
                                            };
                                            reader_lexer_size539.def = true;
                                            obj531.methods["size"] = reader_lexer_size539;
                                            superDepth = origSuperDepth;
                                          };
                                          obj_init_531.apply(inheritingObject, []);
                                          return obj531;
                                          };
                                          obj22.methods["opToken()object"] = func530;
                                        var func540 = function(argcv) {    // method arrowToken
                                          var returnTarget = invocationCount;
                                          invocationCount++;
                                          var curarg = 1;
                                          if (argcv[0] !== 0)
                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for arrowToken"));
                                          setModuleName("lexer");
                                          setLineNumber(167);    // compilenode object
                                          var obj541 = Grace_allocObject(null, "lexer.new.arrowToken");
                                          obj541.definitionModule = "lexer";
                                          obj541.definitionLine = 167;
                                          obj541.outer = this;
                                          var reader_lexer_outer542 = function() {
                                            return this.outer;
                                          };
                                          obj541.methods["outer"] = reader_lexer_outer542;
                                          var obj_init_541 = function() {
                                            var origSuperDepth = superDepth;
                                            superDepth = obj541;
                                            setLineNumber(168);    // compilenode call
                                            var call543 = callmethodChecked(superDepth, "outer", [0]);
                                            onOuter = true;
                                            onSelf = true;
                                            var call544 = callmethodChecked(call543, "token()object", [0, 1], this);
                                            obj541.superobj = call544;
                                            if (call544.data) obj541.data = call544.data;
                                            if (call544.hasOwnProperty('_value'))
                                                obj541._value = call544._value;
                                            setLineNumber(169);    // compilenode string
                                            var string545 = new GraceString("arrow");
                                            obj541.data["kind"] = string545;
                                            var reader_lexer_kind546 = function() {
                                              return this.data["kind"];
                                            };
                                            reader_lexer_kind546.def = true;
                                            obj541.methods["kind"] = reader_lexer_kind546;
                                            setLineNumber(170);    // compilenode string
                                            var string547 = new GraceString("\u2192");
                                            obj541.data["value"] = string547;
                                            var reader_lexer_value548 = function() {
                                              return this.data["value"];
                                            };
                                            reader_lexer_value548.def = true;
                                            obj541.methods["value"] = reader_lexer_value548;
                                            setLineNumber(171);    // compilenode num
                                            obj541.data["size"] = new GraceNum(1);
                                            var reader_lexer_size549 = function() {
                                              return this.data["size"];
                                            };
                                            reader_lexer_size549.def = true;
                                            obj541.methods["size"] = reader_lexer_size549;
                                            superDepth = origSuperDepth;
                                          };
                                          obj_init_541.apply(obj541, []);
                                          return obj541;
                                        };
                                        func540.paramCounts = [0];
                                        obj22.methods["arrowToken"] = func540;
                                        func540.definitionLine = 167;
                                        func540.definitionModule = "lexer";
                                          var func550 = function(argcv) {    // method arrowToken()object
                                            var curarg = 1;
                                            var inheritingObject = arguments[curarg++];
                                            // Start argument processing
                                            curarg = 1;
                                            // End argument processing
                                            setModuleName("lexer");
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var obj551 = Grace_allocObject(null, "arrowToken");
                                            obj551.definitionModule = "lexer";
                                            obj551.definitionLine = 167;
                                            var inho551 = inheritingObject;
                                            while (inho551.superobj) inho551 = inho551.superobj;
                                            inho551.superobj = obj551;
                                            obj551.data = inheritingObject.data;
                                            if (inheritingObject.hasOwnProperty('_value'))
                                              obj551._value = inheritingObject._value;
                                            obj551.outer = this;
                                            var reader_lexer_outer552 = function() {
                                              return this.outer;
                                            };
                                            obj551.methods["outer"] = reader_lexer_outer552;
                                            var obj_init_551 = function() {
                                              var origSuperDepth = superDepth;
                                              superDepth = obj551;
                                              setLineNumber(168);    // compilenode call
                                              var call553 = callmethodChecked(superDepth, "outer", [0]);
                                              onOuter = true;
                                              onSelf = true;
                                              var call554 = callmethodChecked(call553, "token()object", [0, 1], this);
                                              obj551.superobj = call554;
                                              if (call554.data) obj551.data = call554.data;
                                              if (call554.hasOwnProperty('_value'))
                                                  obj551._value = call554._value;
                                              setLineNumber(169);    // compilenode string
                                              var string555 = new GraceString("arrow");
                                              obj551.data["kind"] = string555;
                                              var reader_lexer_kind556 = function() {
                                                return this.data["kind"];
                                              };
                                              reader_lexer_kind556.def = true;
                                              obj551.methods["kind"] = reader_lexer_kind556;
                                              setLineNumber(170);    // compilenode string
                                              var string557 = new GraceString("\u2192");
                                              obj551.data["value"] = string557;
                                              var reader_lexer_value558 = function() {
                                                return this.data["value"];
                                              };
                                              reader_lexer_value558.def = true;
                                              obj551.methods["value"] = reader_lexer_value558;
                                              setLineNumber(171);    // compilenode num
                                              obj551.data["size"] = new GraceNum(1);
                                              var reader_lexer_size559 = function() {
                                                return this.data["size"];
                                              };
                                              reader_lexer_size559.def = true;
                                              obj551.methods["size"] = reader_lexer_size559;
                                              superDepth = origSuperDepth;
                                            };
                                            obj_init_551.apply(inheritingObject, []);
                                            return obj551;
                                            };
                                            obj22.methods["arrowToken()object"] = func550;
                                          var func560 = function(argcv) {    // method bindToken
                                            var returnTarget = invocationCount;
                                            invocationCount++;
                                            var curarg = 1;
                                            if (argcv[0] !== 0)
                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for bindToken"));
                                            setModuleName("lexer");
                                            setLineNumber(173);    // compilenode object
                                            var obj561 = Grace_allocObject(null, "lexer.new.bindToken");
                                            obj561.definitionModule = "lexer";
                                            obj561.definitionLine = 173;
                                            obj561.outer = this;
                                            var reader_lexer_outer562 = function() {
                                              return this.outer;
                                            };
                                            obj561.methods["outer"] = reader_lexer_outer562;
                                            var obj_init_561 = function() {
                                              var origSuperDepth = superDepth;
                                              superDepth = obj561;
                                              setLineNumber(174);    // compilenode call
                                              var call563 = callmethodChecked(superDepth, "outer", [0]);
                                              onOuter = true;
                                              onSelf = true;
                                              var call564 = callmethodChecked(call563, "token()object", [0, 1], this);
                                              obj561.superobj = call564;
                                              if (call564.data) obj561.data = call564.data;
                                              if (call564.hasOwnProperty('_value'))
                                                  obj561._value = call564._value;
                                              setLineNumber(175);    // compilenode string
                                              var string565 = new GraceString("bind");
                                              obj561.data["kind"] = string565;
                                              var reader_lexer_kind566 = function() {
                                                return this.data["kind"];
                                              };
                                              reader_lexer_kind566.def = true;
                                              obj561.methods["kind"] = reader_lexer_kind566;
                                              setLineNumber(176);    // compilenode string
                                              var string567 = new GraceString(":=");
                                              obj561.data["value"] = string567;
                                              var reader_lexer_value568 = function() {
                                                return this.data["value"];
                                              };
                                              reader_lexer_value568.def = true;
                                              obj561.methods["value"] = reader_lexer_value568;
                                              setLineNumber(177);    // compilenode num
                                              obj561.data["size"] = new GraceNum(2);
                                              var reader_lexer_size569 = function() {
                                                return this.data["size"];
                                              };
                                              reader_lexer_size569.def = true;
                                              obj561.methods["size"] = reader_lexer_size569;
                                              superDepth = origSuperDepth;
                                            };
                                            obj_init_561.apply(obj561, []);
                                            return obj561;
                                          };
                                          func560.paramCounts = [0];
                                          obj22.methods["bindToken"] = func560;
                                          func560.definitionLine = 173;
                                          func560.definitionModule = "lexer";
                                            var func570 = function(argcv) {    // method bindToken()object
                                              var curarg = 1;
                                              var inheritingObject = arguments[curarg++];
                                              // Start argument processing
                                              curarg = 1;
                                              // End argument processing
                                              setModuleName("lexer");
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var obj571 = Grace_allocObject(null, "bindToken");
                                              obj571.definitionModule = "lexer";
                                              obj571.definitionLine = 173;
                                              var inho571 = inheritingObject;
                                              while (inho571.superobj) inho571 = inho571.superobj;
                                              inho571.superobj = obj571;
                                              obj571.data = inheritingObject.data;
                                              if (inheritingObject.hasOwnProperty('_value'))
                                                obj571._value = inheritingObject._value;
                                              obj571.outer = this;
                                              var reader_lexer_outer572 = function() {
                                                return this.outer;
                                              };
                                              obj571.methods["outer"] = reader_lexer_outer572;
                                              var obj_init_571 = function() {
                                                var origSuperDepth = superDepth;
                                                superDepth = obj571;
                                                setLineNumber(174);    // compilenode call
                                                var call573 = callmethodChecked(superDepth, "outer", [0]);
                                                onOuter = true;
                                                onSelf = true;
                                                var call574 = callmethodChecked(call573, "token()object", [0, 1], this);
                                                obj571.superobj = call574;
                                                if (call574.data) obj571.data = call574.data;
                                                if (call574.hasOwnProperty('_value'))
                                                    obj571._value = call574._value;
                                                setLineNumber(175);    // compilenode string
                                                var string575 = new GraceString("bind");
                                                obj571.data["kind"] = string575;
                                                var reader_lexer_kind576 = function() {
                                                  return this.data["kind"];
                                                };
                                                reader_lexer_kind576.def = true;
                                                obj571.methods["kind"] = reader_lexer_kind576;
                                                setLineNumber(176);    // compilenode string
                                                var string577 = new GraceString(":=");
                                                obj571.data["value"] = string577;
                                                var reader_lexer_value578 = function() {
                                                  return this.data["value"];
                                                };
                                                reader_lexer_value578.def = true;
                                                obj571.methods["value"] = reader_lexer_value578;
                                                setLineNumber(177);    // compilenode num
                                                obj571.data["size"] = new GraceNum(2);
                                                var reader_lexer_size579 = function() {
                                                  return this.data["size"];
                                                };
                                                reader_lexer_size579.def = true;
                                                obj571.methods["size"] = reader_lexer_size579;
                                                superDepth = origSuperDepth;
                                              };
                                              obj_init_571.apply(inheritingObject, []);
                                              return obj571;
                                              };
                                              obj22.methods["bindToken()object"] = func570;
                                            var func580 = function(argcv) {    // method semicolonToken
                                              var returnTarget = invocationCount;
                                              invocationCount++;
                                              var curarg = 1;
                                              if (argcv[0] !== 0)
                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for semicolonToken"));
                                              setModuleName("lexer");
                                              setLineNumber(179);    // compilenode object
                                              var obj581 = Grace_allocObject(null, "lexer.new.semicolonToken");
                                              obj581.definitionModule = "lexer";
                                              obj581.definitionLine = 179;
                                              obj581.outer = this;
                                              var reader_lexer_outer582 = function() {
                                                return this.outer;
                                              };
                                              obj581.methods["outer"] = reader_lexer_outer582;
                                              var obj_init_581 = function() {
                                                var origSuperDepth = superDepth;
                                                superDepth = obj581;
                                                setLineNumber(180);    // compilenode call
                                                var call583 = callmethodChecked(superDepth, "outer", [0]);
                                                onOuter = true;
                                                onSelf = true;
                                                var call584 = callmethodChecked(call583, "token()object", [0, 1], this);
                                                obj581.superobj = call584;
                                                if (call584.data) obj581.data = call584.data;
                                                if (call584.hasOwnProperty('_value'))
                                                    obj581._value = call584._value;
                                                setLineNumber(181);    // compilenode string
                                                var string585 = new GraceString("semicolon");
                                                obj581.data["kind"] = string585;
                                                var reader_lexer_kind586 = function() {
                                                  return this.data["kind"];
                                                };
                                                reader_lexer_kind586.def = true;
                                                obj581.methods["kind"] = reader_lexer_kind586;
                                                setLineNumber(182);    // compilenode string
                                                var string587 = new GraceString(";");
                                                obj581.data["value"] = string587;
                                                var reader_lexer_value588 = function() {
                                                  return this.data["value"];
                                                };
                                                reader_lexer_value588.def = true;
                                                obj581.methods["value"] = reader_lexer_value588;
                                                setLineNumber(183);    // compilenode num
                                                obj581.data["size"] = new GraceNum(1);
                                                var reader_lexer_size589 = function() {
                                                  return this.data["size"];
                                                };
                                                reader_lexer_size589.def = true;
                                                obj581.methods["size"] = reader_lexer_size589;
                                                superDepth = origSuperDepth;
                                              };
                                              obj_init_581.apply(obj581, []);
                                              return obj581;
                                            };
                                            func580.paramCounts = [0];
                                            obj22.methods["semicolonToken"] = func580;
                                            func580.definitionLine = 179;
                                            func580.definitionModule = "lexer";
                                              var func590 = function(argcv) {    // method semicolonToken()object
                                                var curarg = 1;
                                                var inheritingObject = arguments[curarg++];
                                                // Start argument processing
                                                curarg = 1;
                                                // End argument processing
                                                setModuleName("lexer");
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var obj591 = Grace_allocObject(null, "semicolonToken");
                                                obj591.definitionModule = "lexer";
                                                obj591.definitionLine = 179;
                                                var inho591 = inheritingObject;
                                                while (inho591.superobj) inho591 = inho591.superobj;
                                                inho591.superobj = obj591;
                                                obj591.data = inheritingObject.data;
                                                if (inheritingObject.hasOwnProperty('_value'))
                                                  obj591._value = inheritingObject._value;
                                                obj591.outer = this;
                                                var reader_lexer_outer592 = function() {
                                                  return this.outer;
                                                };
                                                obj591.methods["outer"] = reader_lexer_outer592;
                                                var obj_init_591 = function() {
                                                  var origSuperDepth = superDepth;
                                                  superDepth = obj591;
                                                  setLineNumber(180);    // compilenode call
                                                  var call593 = callmethodChecked(superDepth, "outer", [0]);
                                                  onOuter = true;
                                                  onSelf = true;
                                                  var call594 = callmethodChecked(call593, "token()object", [0, 1], this);
                                                  obj591.superobj = call594;
                                                  if (call594.data) obj591.data = call594.data;
                                                  if (call594.hasOwnProperty('_value'))
                                                      obj591._value = call594._value;
                                                  setLineNumber(181);    // compilenode string
                                                  var string595 = new GraceString("semicolon");
                                                  obj591.data["kind"] = string595;
                                                  var reader_lexer_kind596 = function() {
                                                    return this.data["kind"];
                                                  };
                                                  reader_lexer_kind596.def = true;
                                                  obj591.methods["kind"] = reader_lexer_kind596;
                                                  setLineNumber(182);    // compilenode string
                                                  var string597 = new GraceString(";");
                                                  obj591.data["value"] = string597;
                                                  var reader_lexer_value598 = function() {
                                                    return this.data["value"];
                                                  };
                                                  reader_lexer_value598.def = true;
                                                  obj591.methods["value"] = reader_lexer_value598;
                                                  setLineNumber(183);    // compilenode num
                                                  obj591.data["size"] = new GraceNum(1);
                                                  var reader_lexer_size599 = function() {
                                                    return this.data["size"];
                                                  };
                                                  reader_lexer_size599.def = true;
                                                  obj591.methods["size"] = reader_lexer_size599;
                                                  superDepth = origSuperDepth;
                                                };
                                                obj_init_591.apply(inheritingObject, []);
                                                return obj591;
                                                };
                                                obj22.methods["semicolonToken()object"] = func590;
                                              var func600 = function(argcv) {    // method lGenericToken
                                                var returnTarget = invocationCount;
                                                invocationCount++;
                                                var curarg = 1;
                                                if (argcv[0] !== 0)
                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lGenericToken"));
                                                setModuleName("lexer");
                                                setLineNumber(185);    // compilenode object
                                                var obj601 = Grace_allocObject(null, "lexer.new.lGenericToken");
                                                obj601.definitionModule = "lexer";
                                                obj601.definitionLine = 185;
                                                obj601.outer = this;
                                                var reader_lexer_outer602 = function() {
                                                  return this.outer;
                                                };
                                                obj601.methods["outer"] = reader_lexer_outer602;
                                                var obj_init_601 = function() {
                                                  var origSuperDepth = superDepth;
                                                  superDepth = obj601;
                                                  setLineNumber(186);    // compilenode call
                                                  var call603 = callmethodChecked(superDepth, "outer", [0]);
                                                  onOuter = true;
                                                  onSelf = true;
                                                  var call604 = callmethodChecked(call603, "token()object", [0, 1], this);
                                                  obj601.superobj = call604;
                                                  if (call604.data) obj601.data = call604.data;
                                                  if (call604.hasOwnProperty('_value'))
                                                      obj601._value = call604._value;
                                                  setLineNumber(187);    // compilenode string
                                                  var string605 = new GraceString("lgeneric");
                                                  obj601.data["kind"] = string605;
                                                  var reader_lexer_kind606 = function() {
                                                    return this.data["kind"];
                                                  };
                                                  reader_lexer_kind606.def = true;
                                                  obj601.methods["kind"] = reader_lexer_kind606;
                                                  setLineNumber(188);    // compilenode string
                                                  var string607 = new GraceString("\u27e6");
                                                  obj601.data["value"] = string607;
                                                  var reader_lexer_value608 = function() {
                                                    return this.data["value"];
                                                  };
                                                  reader_lexer_value608.def = true;
                                                  obj601.methods["value"] = reader_lexer_value608;
                                                  setLineNumber(189);    // compilenode num
                                                  obj601.data["size"] = new GraceNum(1);
                                                  var reader_lexer_size609 = function() {
                                                    return this.data["size"];
                                                  };
                                                  reader_lexer_size609.def = true;
                                                  obj601.methods["size"] = reader_lexer_size609;
                                                  superDepth = origSuperDepth;
                                                };
                                                obj_init_601.apply(obj601, []);
                                                return obj601;
                                              };
                                              func600.paramCounts = [0];
                                              obj22.methods["lGenericToken"] = func600;
                                              func600.definitionLine = 185;
                                              func600.definitionModule = "lexer";
                                                var func610 = function(argcv) {    // method lGenericToken()object
                                                  var curarg = 1;
                                                  var inheritingObject = arguments[curarg++];
                                                  // Start argument processing
                                                  curarg = 1;
                                                  // End argument processing
                                                  setModuleName("lexer");
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var obj611 = Grace_allocObject(null, "lGenericToken");
                                                  obj611.definitionModule = "lexer";
                                                  obj611.definitionLine = 185;
                                                  var inho611 = inheritingObject;
                                                  while (inho611.superobj) inho611 = inho611.superobj;
                                                  inho611.superobj = obj611;
                                                  obj611.data = inheritingObject.data;
                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                    obj611._value = inheritingObject._value;
                                                  obj611.outer = this;
                                                  var reader_lexer_outer612 = function() {
                                                    return this.outer;
                                                  };
                                                  obj611.methods["outer"] = reader_lexer_outer612;
                                                  var obj_init_611 = function() {
                                                    var origSuperDepth = superDepth;
                                                    superDepth = obj611;
                                                    setLineNumber(186);    // compilenode call
                                                    var call613 = callmethodChecked(superDepth, "outer", [0]);
                                                    onOuter = true;
                                                    onSelf = true;
                                                    var call614 = callmethodChecked(call613, "token()object", [0, 1], this);
                                                    obj611.superobj = call614;
                                                    if (call614.data) obj611.data = call614.data;
                                                    if (call614.hasOwnProperty('_value'))
                                                        obj611._value = call614._value;
                                                    setLineNumber(187);    // compilenode string
                                                    var string615 = new GraceString("lgeneric");
                                                    obj611.data["kind"] = string615;
                                                    var reader_lexer_kind616 = function() {
                                                      return this.data["kind"];
                                                    };
                                                    reader_lexer_kind616.def = true;
                                                    obj611.methods["kind"] = reader_lexer_kind616;
                                                    setLineNumber(188);    // compilenode string
                                                    var string617 = new GraceString("\u27e6");
                                                    obj611.data["value"] = string617;
                                                    var reader_lexer_value618 = function() {
                                                      return this.data["value"];
                                                    };
                                                    reader_lexer_value618.def = true;
                                                    obj611.methods["value"] = reader_lexer_value618;
                                                    setLineNumber(189);    // compilenode num
                                                    obj611.data["size"] = new GraceNum(1);
                                                    var reader_lexer_size619 = function() {
                                                      return this.data["size"];
                                                    };
                                                    reader_lexer_size619.def = true;
                                                    obj611.methods["size"] = reader_lexer_size619;
                                                    superDepth = origSuperDepth;
                                                  };
                                                  obj_init_611.apply(inheritingObject, []);
                                                  return obj611;
                                                  };
                                                  obj22.methods["lGenericToken()object"] = func610;
                                                var func620 = function(argcv) {    // method rGenericToken
                                                  var returnTarget = invocationCount;
                                                  invocationCount++;
                                                  var curarg = 1;
                                                  if (argcv[0] !== 0)
                                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rGenericToken"));
                                                  setModuleName("lexer");
                                                  setLineNumber(191);    // compilenode object
                                                  var obj621 = Grace_allocObject(null, "lexer.new.rGenericToken");
                                                  obj621.definitionModule = "lexer";
                                                  obj621.definitionLine = 191;
                                                  obj621.outer = this;
                                                  var reader_lexer_outer622 = function() {
                                                    return this.outer;
                                                  };
                                                  obj621.methods["outer"] = reader_lexer_outer622;
                                                  var obj_init_621 = function() {
                                                    var origSuperDepth = superDepth;
                                                    superDepth = obj621;
                                                    setLineNumber(192);    // compilenode call
                                                    var call623 = callmethodChecked(superDepth, "outer", [0]);
                                                    onOuter = true;
                                                    onSelf = true;
                                                    var call624 = callmethodChecked(call623, "token()object", [0, 1], this);
                                                    obj621.superobj = call624;
                                                    if (call624.data) obj621.data = call624.data;
                                                    if (call624.hasOwnProperty('_value'))
                                                        obj621._value = call624._value;
                                                    setLineNumber(193);    // compilenode string
                                                    var string625 = new GraceString("rgeneric");
                                                    obj621.data["kind"] = string625;
                                                    var reader_lexer_kind626 = function() {
                                                      return this.data["kind"];
                                                    };
                                                    reader_lexer_kind626.def = true;
                                                    obj621.methods["kind"] = reader_lexer_kind626;
                                                    setLineNumber(194);    // compilenode string
                                                    var string627 = new GraceString("\u27e7");
                                                    obj621.data["value"] = string627;
                                                    var reader_lexer_value628 = function() {
                                                      return this.data["value"];
                                                    };
                                                    reader_lexer_value628.def = true;
                                                    obj621.methods["value"] = reader_lexer_value628;
                                                    setLineNumber(195);    // compilenode num
                                                    obj621.data["size"] = new GraceNum(1);
                                                    var reader_lexer_size629 = function() {
                                                      return this.data["size"];
                                                    };
                                                    reader_lexer_size629.def = true;
                                                    obj621.methods["size"] = reader_lexer_size629;
                                                    superDepth = origSuperDepth;
                                                  };
                                                  obj_init_621.apply(obj621, []);
                                                  return obj621;
                                                };
                                                func620.paramCounts = [0];
                                                obj22.methods["rGenericToken"] = func620;
                                                func620.definitionLine = 191;
                                                func620.definitionModule = "lexer";
                                                  var func630 = function(argcv) {    // method rGenericToken()object
                                                    var curarg = 1;
                                                    var inheritingObject = arguments[curarg++];
                                                    // Start argument processing
                                                    curarg = 1;
                                                    // End argument processing
                                                    setModuleName("lexer");
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var obj631 = Grace_allocObject(null, "rGenericToken");
                                                    obj631.definitionModule = "lexer";
                                                    obj631.definitionLine = 191;
                                                    var inho631 = inheritingObject;
                                                    while (inho631.superobj) inho631 = inho631.superobj;
                                                    inho631.superobj = obj631;
                                                    obj631.data = inheritingObject.data;
                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                      obj631._value = inheritingObject._value;
                                                    obj631.outer = this;
                                                    var reader_lexer_outer632 = function() {
                                                      return this.outer;
                                                    };
                                                    obj631.methods["outer"] = reader_lexer_outer632;
                                                    var obj_init_631 = function() {
                                                      var origSuperDepth = superDepth;
                                                      superDepth = obj631;
                                                      setLineNumber(192);    // compilenode call
                                                      var call633 = callmethodChecked(superDepth, "outer", [0]);
                                                      onOuter = true;
                                                      onSelf = true;
                                                      var call634 = callmethodChecked(call633, "token()object", [0, 1], this);
                                                      obj631.superobj = call634;
                                                      if (call634.data) obj631.data = call634.data;
                                                      if (call634.hasOwnProperty('_value'))
                                                          obj631._value = call634._value;
                                                      setLineNumber(193);    // compilenode string
                                                      var string635 = new GraceString("rgeneric");
                                                      obj631.data["kind"] = string635;
                                                      var reader_lexer_kind636 = function() {
                                                        return this.data["kind"];
                                                      };
                                                      reader_lexer_kind636.def = true;
                                                      obj631.methods["kind"] = reader_lexer_kind636;
                                                      setLineNumber(194);    // compilenode string
                                                      var string637 = new GraceString("\u27e7");
                                                      obj631.data["value"] = string637;
                                                      var reader_lexer_value638 = function() {
                                                        return this.data["value"];
                                                      };
                                                      reader_lexer_value638.def = true;
                                                      obj631.methods["value"] = reader_lexer_value638;
                                                      setLineNumber(195);    // compilenode num
                                                      obj631.data["size"] = new GraceNum(1);
                                                      var reader_lexer_size639 = function() {
                                                        return this.data["size"];
                                                      };
                                                      reader_lexer_size639.def = true;
                                                      obj631.methods["size"] = reader_lexer_size639;
                                                      superDepth = origSuperDepth;
                                                    };
                                                    obj_init_631.apply(inheritingObject, []);
                                                    return obj631;
                                                    };
                                                    obj22.methods["rGenericToken()object"] = func630;
                                                  var func640 = function(argcv) {    // method eofToken
                                                    var returnTarget = invocationCount;
                                                    invocationCount++;
                                                    var curarg = 1;
                                                    if (argcv[0] !== 0)
                                                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for eofToken"));
                                                    setModuleName("lexer");
                                                    setLineNumber(197);    // compilenode object
                                                    var obj641 = Grace_allocObject(null, "lexer.new.eofToken");
                                                    obj641.definitionModule = "lexer";
                                                    obj641.definitionLine = 197;
                                                    obj641.outer = this;
                                                    var reader_lexer_outer642 = function() {
                                                      return this.outer;
                                                    };
                                                    obj641.methods["outer"] = reader_lexer_outer642;
                                                    var obj_init_641 = function() {
                                                      var origSuperDepth = superDepth;
                                                      superDepth = obj641;
                                                      setLineNumber(198);    // compilenode call
                                                      var call643 = callmethodChecked(superDepth, "outer", [0]);
                                                      onOuter = true;
                                                      onSelf = true;
                                                      var call644 = callmethodChecked(call643, "token()object", [0, 1], this);
                                                      obj641.superobj = call644;
                                                      if (call644.data) obj641.data = call644.data;
                                                      if (call644.hasOwnProperty('_value'))
                                                          obj641._value = call644._value;
                                                      setLineNumber(199);    // compilenode string
                                                      var string645 = new GraceString("eof");
                                                      obj641.data["kind"] = string645;
                                                      var reader_lexer_kind646 = function() {
                                                        return this.data["kind"];
                                                      };
                                                      reader_lexer_kind646.def = true;
                                                      obj641.methods["kind"] = reader_lexer_kind646;
                                                      setLineNumber(200);    // compilenode string
                                                      var string647 = new GraceString("");
                                                      obj641.data["value"] = string647;
                                                      var reader_lexer_value648 = function() {
                                                        return this.data["value"];
                                                      };
                                                      reader_lexer_value648.def = true;
                                                      obj641.methods["value"] = reader_lexer_value648;
                                                      setLineNumber(201);    // compilenode num
                                                      obj641.data["size"] = new GraceNum(0);
                                                      var reader_lexer_size649 = function() {
                                                        return this.data["size"];
                                                      };
                                                      reader_lexer_size649.def = true;
                                                      obj641.methods["size"] = reader_lexer_size649;
                                                      superDepth = origSuperDepth;
                                                    };
                                                    obj_init_641.apply(obj641, []);
                                                    return obj641;
                                                  };
                                                  func640.paramCounts = [0];
                                                  obj22.methods["eofToken"] = func640;
                                                  func640.definitionLine = 197;
                                                  func640.definitionModule = "lexer";
                                                    var func650 = function(argcv) {    // method eofToken()object
                                                      var curarg = 1;
                                                      var inheritingObject = arguments[curarg++];
                                                      // Start argument processing
                                                      curarg = 1;
                                                      // End argument processing
                                                      setModuleName("lexer");
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var obj651 = Grace_allocObject(null, "eofToken");
                                                      obj651.definitionModule = "lexer";
                                                      obj651.definitionLine = 197;
                                                      var inho651 = inheritingObject;
                                                      while (inho651.superobj) inho651 = inho651.superobj;
                                                      inho651.superobj = obj651;
                                                      obj651.data = inheritingObject.data;
                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                        obj651._value = inheritingObject._value;
                                                      obj651.outer = this;
                                                      var reader_lexer_outer652 = function() {
                                                        return this.outer;
                                                      };
                                                      obj651.methods["outer"] = reader_lexer_outer652;
                                                      var obj_init_651 = function() {
                                                        var origSuperDepth = superDepth;
                                                        superDepth = obj651;
                                                        setLineNumber(198);    // compilenode call
                                                        var call653 = callmethodChecked(superDepth, "outer", [0]);
                                                        onOuter = true;
                                                        onSelf = true;
                                                        var call654 = callmethodChecked(call653, "token()object", [0, 1], this);
                                                        obj651.superobj = call654;
                                                        if (call654.data) obj651.data = call654.data;
                                                        if (call654.hasOwnProperty('_value'))
                                                            obj651._value = call654._value;
                                                        setLineNumber(199);    // compilenode string
                                                        var string655 = new GraceString("eof");
                                                        obj651.data["kind"] = string655;
                                                        var reader_lexer_kind656 = function() {
                                                          return this.data["kind"];
                                                        };
                                                        reader_lexer_kind656.def = true;
                                                        obj651.methods["kind"] = reader_lexer_kind656;
                                                        setLineNumber(200);    // compilenode string
                                                        var string657 = new GraceString("");
                                                        obj651.data["value"] = string657;
                                                        var reader_lexer_value658 = function() {
                                                          return this.data["value"];
                                                        };
                                                        reader_lexer_value658.def = true;
                                                        obj651.methods["value"] = reader_lexer_value658;
                                                        setLineNumber(201);    // compilenode num
                                                        obj651.data["size"] = new GraceNum(0);
                                                        var reader_lexer_size659 = function() {
                                                          return this.data["size"];
                                                        };
                                                        reader_lexer_size659.def = true;
                                                        obj651.methods["size"] = reader_lexer_size659;
                                                        superDepth = origSuperDepth;
                                                      };
                                                      obj_init_651.apply(inheritingObject, []);
                                                      return obj651;
                                                      };
                                                      obj22.methods["eofToken()object"] = func650;
                                                    var func660 = function(argcv) {    // method modechange(3)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_tokens = arguments[curarg];
                                                      curarg++;
                                                      var var_mode = arguments[curarg];
                                                      curarg++;
                                                      var var_accum = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 3)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for modechange(3)"));
                                                      setModuleName("lexer");
                                                      setLineNumber(222);    // compilenode num
                                                      var var_tok = new GraceNum(0);
                                                      var if661 = GraceDone;
                                                      setLineNumber(223);    // compilenode identifier
                                                      var call663 = callmethodChecked(var_accum, "size", [0]);
                                                      var opresult665 = callmethodChecked(call663, ">", [1], new GraceNum(0));
                                                      var string667 = new GraceString("n");
                                                      var opresult670 = callmethodChecked(var_mode, "\u2260", [1], string667);
                                                      var opresult672 = callmethodChecked(opresult670, "||", [1], opresult665);
                                                      if (Grace_isTrue(opresult672)) {
                                                        var if673 = GraceDone;
                                                        setLineNumber(224);    // compilenode string
                                                        var string674 = new GraceString("i");
                                                        var opresult677 = callmethodChecked(var_mode, "==", [1], string674);
                                                        if (Grace_isTrue(opresult677)) {
                                                          var if678 = GraceDone;
                                                          setLineNumber(225);    // compilenode identifier
                                                          var call679 = callmethodChecked(var_keywords, "contains", [1], var_accum);
                                                          if (Grace_isTrue(call679)) {
                                                            setLineNumber(226);    // compilenode identifier
                                                            onSelf = true;
                                                            var call680 = callmethodChecked(this, "keywordToken", [1], var_accum);
                                                            if678 = call680;
                                                          } else {
                                                            setLineNumber(228);    // compilenode identifier
                                                            onSelf = true;
                                                            var call681 = callmethodChecked(this, "identifierToken", [1], var_accum);
                                                            if678 = call681;
                                                          }
                                                          var_tok = if678;
                                                          setLineNumber(230);    // compilenode identifier
                                                          var call682 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                          if673 = call682;
                                                        } else {
                                                          var if683 = GraceDone;
                                                          setLineNumber(231);    // compilenode string
                                                          var string684 = new GraceString("\"");
                                                          var opresult687 = callmethodChecked(var_mode, "==", [1], string684);
                                                          if (Grace_isTrue(opresult687)) {
                                                            setLineNumber(232);    // compilenode identifier
                                                            onSelf = true;
                                                            var call688 = callmethodChecked(this, "stringToken", [1], var_accum);
                                                            var_tok = call688;
                                                            setLineNumber(233);    // compilenode identifier
                                                            var call689 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                            if683 = call689;
                                                          } else {
                                                            var if690 = GraceDone;
                                                            setLineNumber(234);    // compilenode string
                                                            var string691 = new GraceString("q");
                                                            var opresult694 = callmethodChecked(var_mode, "==", [1], string691);
                                                            if (Grace_isTrue(opresult694)) {
                                                              setLineNumber(235);    // compilenode identifier
                                                              onSelf = true;
                                                              var call695 = callmethodChecked(this, "multiLineStringToken", [1], var_accum);
                                                              var_tok = call695;
                                                              setLineNumber(236);    // compilenode identifier
                                                              var call696 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                              if690 = call696;
                                                            } else {
                                                              var if697 = GraceDone;
                                                              setLineNumber(237);    // compilenode string
                                                              var string698 = new GraceString(",");
                                                              var opresult701 = callmethodChecked(var_mode, "==", [1], string698);
                                                              if (Grace_isTrue(opresult701)) {
                                                                setLineNumber(238);    // compilenode call
                                                                onSelf = true;
                                                                var call702 = callmethodChecked(this, "commaToken", [0]);
                                                                var_tok = call702;
                                                                setLineNumber(239);    // compilenode identifier
                                                                var call703 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                if697 = call703;
                                                              } else {
                                                                var if704 = GraceDone;
                                                                setLineNumber(240);    // compilenode string
                                                                var string705 = new GraceString(".");
                                                                var opresult708 = callmethodChecked(var_mode, "==", [1], string705);
                                                                if (Grace_isTrue(opresult708)) {
                                                                  setLineNumber(241);    // compilenode call
                                                                  onSelf = true;
                                                                  var call709 = callmethodChecked(this, "dotToken", [0]);
                                                                  var_tok = call709;
                                                                  setLineNumber(242);    // compilenode identifier
                                                                  var call710 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                  if704 = call710;
                                                                } else {
                                                                  var if711 = GraceDone;
                                                                  setLineNumber(243);    // compilenode string
                                                                  var string712 = new GraceString("{");
                                                                  var opresult715 = callmethodChecked(var_mode, "==", [1], string712);
                                                                  if (Grace_isTrue(opresult715)) {
                                                                    setLineNumber(244);    // compilenode call
                                                                    onSelf = true;
                                                                    var call716 = callmethodChecked(this, "lBraceToken", [0]);
                                                                    var_tok = call716;
                                                                    setLineNumber(245);    // compilenode identifier
                                                                    var call717 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                    if711 = call717;
                                                                  } else {
                                                                    var if718 = GraceDone;
                                                                    setLineNumber(246);    // compilenode string
                                                                    var string719 = new GraceString("}");
                                                                    var opresult722 = callmethodChecked(var_mode, "==", [1], string719);
                                                                    if (Grace_isTrue(opresult722)) {
                                                                      setLineNumber(247);    // compilenode call
                                                                      onSelf = true;
                                                                      var call723 = callmethodChecked(this, "rBraceToken", [0]);
                                                                      var_tok = call723;
                                                                      setLineNumber(248);    // compilenode identifier
                                                                      var call724 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                      if718 = call724;
                                                                    } else {
                                                                      var if725 = GraceDone;
                                                                      setLineNumber(249);    // compilenode string
                                                                      var string726 = new GraceString("(");
                                                                      var opresult729 = callmethodChecked(var_mode, "==", [1], string726);
                                                                      if (Grace_isTrue(opresult729)) {
                                                                        setLineNumber(250);    // compilenode call
                                                                        onSelf = true;
                                                                        var call730 = callmethodChecked(this, "lParenToken", [0]);
                                                                        var_tok = call730;
                                                                        setLineNumber(251);    // compilenode identifier
                                                                        var call731 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                        if725 = call731;
                                                                      } else {
                                                                        var if732 = GraceDone;
                                                                        setLineNumber(252);    // compilenode string
                                                                        var string733 = new GraceString(")");
                                                                        var opresult736 = callmethodChecked(var_mode, "==", [1], string733);
                                                                        if (Grace_isTrue(opresult736)) {
                                                                          setLineNumber(253);    // compilenode call
                                                                          onSelf = true;
                                                                          var call737 = callmethodChecked(this, "rParenToken", [0]);
                                                                          var_tok = call737;
                                                                          var if738 = GraceDone;
                                                                          setLineNumber(254);    // compilenode string
                                                                          var string739 = new GraceString("lparen");
                                                                          var call741 = callmethodChecked(var_tokens, "last", [0]);
                                                                          var call742 = callmethodChecked(call741, "kind", [0]);
                                                                          var opresult744 = callmethodChecked(call742, "==", [1], string739);
                                                                          if (Grace_isTrue(opresult744)) {
                                                                            setLineNumber(256);    // compilenode string
                                                                            var string745 = new GraceString("Remove them, or put something between them.");
                                                                            setLineNumber(255);    // compilenode string
                                                                            var string747 = new GraceString("empty parenthesis are not allowed. ");
                                                                            var opresult749 = callmethodChecked(string747, "++", [1], string745);
                                                                            setLineNumber(257);    // compilenode identifier
                                                                            var call750 = callmethodChecked(var_tok, "line", [0]);
                                                                            var call751 = callmethodChecked(var_tokens, "last", [0]);
                                                                            var call752 = callmethodChecked(call751, "linePos", [0]);
                                                                            var call753 = callmethodChecked(var_tok, "linePos", [0]);
                                                                            setLineNumber(255);    // compilenode identifier
                                                                            var call754 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult749, call750, call752, call753);
                                                                            if738 = call754;
                                                                          }
                                                                          setLineNumber(259);    // compilenode identifier
                                                                          var call755 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                          if732 = call755;
                                                                        } else {
                                                                          var if756 = GraceDone;
                                                                          setLineNumber(260);    // compilenode string
                                                                          var string757 = new GraceString("[");
                                                                          var opresult760 = callmethodChecked(var_mode, "==", [1], string757);
                                                                          if (Grace_isTrue(opresult760)) {
                                                                            setLineNumber(261);    // compilenode call
                                                                            onSelf = true;
                                                                            var call761 = callmethodChecked(this, "lSquareToken", [0]);
                                                                            var_tok = call761;
                                                                            setLineNumber(262);    // compilenode identifier
                                                                            var call762 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                            if756 = call762;
                                                                          } else {
                                                                            var if763 = GraceDone;
                                                                            setLineNumber(263);    // compilenode string
                                                                            var string764 = new GraceString("]");
                                                                            var opresult767 = callmethodChecked(var_mode, "==", [1], string764);
                                                                            if (Grace_isTrue(opresult767)) {
                                                                              setLineNumber(264);    // compilenode call
                                                                              onSelf = true;
                                                                              var call768 = callmethodChecked(this, "rSquareToken", [0]);
                                                                              var_tok = call768;
                                                                              setLineNumber(265);    // compilenode identifier
                                                                              var call769 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                              if763 = call769;
                                                                            } else {
                                                                              var if770 = GraceDone;
                                                                              setLineNumber(266);    // compilenode string
                                                                              var string771 = new GraceString("\u27e6");
                                                                              var opresult774 = callmethodChecked(var_mode, "==", [1], string771);
                                                                              if (Grace_isTrue(opresult774)) {
                                                                                setLineNumber(267);    // compilenode call
                                                                                onSelf = true;
                                                                                var call775 = callmethodChecked(this, "lGenericToken", [0]);
                                                                                var_tok = call775;
                                                                                setLineNumber(268);    // compilenode identifier
                                                                                var call776 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                if770 = call776;
                                                                              } else {
                                                                                var if777 = GraceDone;
                                                                                setLineNumber(269);    // compilenode string
                                                                                var string778 = new GraceString("\u27e7");
                                                                                var opresult781 = callmethodChecked(var_mode, "==", [1], string778);
                                                                                if (Grace_isTrue(opresult781)) {
                                                                                  setLineNumber(270);    // compilenode call
                                                                                  onSelf = true;
                                                                                  var call782 = callmethodChecked(this, "rGenericToken", [0]);
                                                                                  var_tok = call782;
                                                                                  setLineNumber(271);    // compilenode identifier
                                                                                  var call783 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                  if777 = call783;
                                                                                } else {
                                                                                  var if784 = GraceDone;
                                                                                  setLineNumber(272);    // compilenode string
                                                                                  var string785 = new GraceString(";");
                                                                                  var opresult788 = callmethodChecked(var_mode, "==", [1], string785);
                                                                                  if (Grace_isTrue(opresult788)) {
                                                                                    setLineNumber(273);    // compilenode call
                                                                                    onSelf = true;
                                                                                    var call789 = callmethodChecked(this, "semicolonToken", [0]);
                                                                                    var_tok = call789;
                                                                                    setLineNumber(274);    // compilenode identifier
                                                                                    var call790 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                    if784 = call790;
                                                                                  } else {
                                                                                    var if791 = GraceDone;
                                                                                    setLineNumber(275);    // compilenode string
                                                                                    var string792 = new GraceString("m");
                                                                                    var opresult795 = callmethodChecked(var_mode, "==", [1], string792);
                                                                                    if (Grace_isTrue(opresult795)) {
                                                                                      var if796 = GraceDone;
                                                                                      setLineNumber(276);    // compilenode block
                                                                                      var block797 = new GraceBlock(this, 276, 0);
                                                                                      block797.real = function() {
                                                                                        var string798 = new GraceString("dot");
                                                                                        var call800 = callmethodChecked(var_tokens, "last", [0]);
                                                                                        var call801 = callmethodChecked(call800, "kind", [0]);
                                                                                        var opresult803 = callmethodChecked(call801, "==", [1], string798);
                                                                                        return opresult803;
                                                                                      };
                                                                                      var call806 = callmethodChecked(var_tokens, "size", [0]);
                                                                                      var opresult808 = callmethodChecked(call806, ">", [1], new GraceNum(1));
                                                                                      var opresult810 = callmethodChecked(opresult808, "&&", [1], block797);
                                                                                      if (Grace_isTrue(opresult810)) {
                                                                                        setLineNumber(277);    // compilenode identifier
                                                                                        var call811 = callmethodChecked(var_tokens, "pop", [0]);
                                                                                        var var_dot = call811;
                                                                                        var if812 = GraceDone;
                                                                                        setLineNumber(278);    // compilenode string
                                                                                        var string813 = new GraceString("num");
                                                                                        var call815 = callmethodChecked(var_tokens, "last", [0]);
                                                                                        var call816 = callmethodChecked(call815, "kind", [0]);
                                                                                        var opresult818 = callmethodChecked(call816, "==", [1], string813);
                                                                                        if (Grace_isTrue(opresult818)) {
                                                                                          var if819 = GraceDone;
                                                                                          setLineNumber(279);    // compilenode identifier
                                                                                          var call821 = callmethodChecked(var_tokens, "last", [0]);
                                                                                          var call822 = callmethodChecked(call821, "base", [0]);
                                                                                          var opresult824 = callmethodChecked(call822, "==", [1], new GraceNum(10));
                                                                                          if (Grace_isTrue(opresult824)) {
                                                                                            setLineNumber(280);    // compilenode identifier
                                                                                            var call825 = callmethodChecked(var_tokens, "pop", [0]);
                                                                                            var_tok = call825;
                                                                                            setLineNumber(281);    // compilenode identifier
                                                                                            onSelf = true;
                                                                                            var call826 = callmethodChecked(this, "makeNumToken", [1], var_accum);
                                                                                            var var_decimal = call826;
                                                                                            var if827 = GraceDone;
                                                                                            setLineNumber(282);    // compilenode identifier
                                                                                            var call829 = callmethodChecked(var_decimal, "base", [0]);
                                                                                            var opresult831 = callmethodChecked(call829, "==", [1], new GraceNum(10));
                                                                                            if (Grace_isTrue(opresult831)) {
                                                                                              setLineNumber(283);    // compilenode string
                                                                                              var string833 = new GraceString(".");
                                                                                              var call835 = callmethodChecked(var_tok, "value", [0]);
                                                                                              var opresult837 = callmethodChecked(call835, "++", [1], string833);
                                                                                              var opresult839 = callmethodChecked(opresult837, "++", [1], var_accum);
                                                                                              onSelf = true;
                                                                                              var call840 = callmethodChecked(this, "numToken", [2], opresult839, new GraceNum(10));
                                                                                              var_tok = call840;
                                                                                              if827 = GraceDone;
                                                                                            } else {
                                                                                              setLineNumber(285);    // compilenode array
                                                                                              var array841 = new PrimitiveGraceList([]);
                                                                                              var var_suggestions = array841;
                                                                                              setLineNumber(286);    // compilenode identifier
                                                                                              var call842 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                              var call843 = callmethodChecked(call842, "new", [0]);
                                                                                              var var_suggestion = call843;
                                                                                              setLineNumber(287);    // compilenode identifier
                                                                                              var call845 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                              var opresult847 = callmethodChecked(call845, "+", [1], new GraceNum(1));
                                                                                              onSelf = true;
                                                                                              var call849 = callmethodChecked(this, "linePosition", [0]);
                                                                                              var diff851 = callmethodChecked(call849, "-", [1], new GraceNum(1));
                                                                                              var call852 = callmethodChecked(var_decimal, "value", [0]);
                                                                                              onSelf = true;
                                                                                              var call853 = callmethodChecked(this, "lineNumber", [0]);
                                                                                              var call854 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], opresult847, diff851, call852, call853);
                                                                                              setLineNumber(288);    // compilenode identifier
                                                                                              var call855 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                              setLineNumber(289);    // compilenode identifier
                                                                                              var call856 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                              var call857 = callmethodChecked(call856, "new", [0]);
                                                                                              var_suggestion = call857;
                                                                                              setLineNumber(290);    // compilenode identifier
                                                                                              var call858 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                              onSelf = true;
                                                                                              var call860 = callmethodChecked(this, "linePosition", [0]);
                                                                                              var diff862 = callmethodChecked(call860, "-", [1], new GraceNum(1));
                                                                                              onSelf = true;
                                                                                              var call863 = callmethodChecked(this, "lineNumber", [0]);
                                                                                              var call864 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], call858, diff862, call863);
                                                                                              setLineNumber(291);    // compilenode identifier
                                                                                              var call865 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                              setLineNumber(292);    // compilenode string
                                                                                              var string866 = new GraceString("the fractional part of a number must be in base 10.");
                                                                                              setLineNumber(293);    // compilenode call
                                                                                              onSelf = true;
                                                                                              var call867 = callmethodChecked(this, "lineNumber", [0]);
                                                                                              var call869 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                              var opresult871 = callmethodChecked(call869, "+", [1], new GraceNum(1));
                                                                                              onSelf = true;
                                                                                              var call873 = callmethodChecked(this, "linePosition", [0]);
                                                                                              var diff875 = callmethodChecked(call873, "-", [1], new GraceNum(1));
                                                                                              setLineNumber(292);    // compilenode identifier
                                                                                              var call876 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], string866, call867, opresult871, diff875, var_suggestions);
                                                                                              if827 = call876;
                                                                                            }
                                                                                            if819 = if827;
                                                                                          } else {
                                                                                            setLineNumber(296);    // compilenode array
                                                                                            var array877 = new PrimitiveGraceList([]);
                                                                                            var var_suggestions = array877;
                                                                                            setLineNumber(297);    // compilenode identifier
                                                                                            var call878 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                            var call879 = callmethodChecked(call878, "new", [0]);
                                                                                            var var_suggestion = call879;
                                                                                            setLineNumber(298);    // compilenode identifier
                                                                                            var call880 = callmethodChecked(var_tokens, "last", [0]);
                                                                                            var call881 = callmethodChecked(call880, "linePos", [0]);
                                                                                            var call883 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                            var diff885 = callmethodChecked(call883, "-", [1], new GraceNum(1));
                                                                                            var call886 = callmethodChecked(var_tokens, "last", [0]);
                                                                                            var call887 = callmethodChecked(call886, "value", [0]);
                                                                                            onSelf = true;
                                                                                            var call888 = callmethodChecked(this, "lineNumber", [0]);
                                                                                            var call889 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call881, diff885, call887, call888);
                                                                                            setLineNumber(299);    // compilenode identifier
                                                                                            var call890 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                            setLineNumber(300);    // compilenode identifier
                                                                                            var call891 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                            var call892 = callmethodChecked(call891, "new", [0]);
                                                                                            var_suggestion = call892;
                                                                                            setLineNumber(301);    // compilenode identifier
                                                                                            var call893 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                            onSelf = true;
                                                                                            var call894 = callmethodChecked(this, "lineNumber", [0]);
                                                                                            var call895 = callmethodChecked(var_suggestion, "deleteChar()onLine", [1, 1], call893, call894);
                                                                                            setLineNumber(302);    // compilenode identifier
                                                                                            var call896 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                            setLineNumber(303);    // compilenode string
                                                                                            var string897 = new GraceString(" cannot have a fractional part.");
                                                                                            var call899 = callmethodChecked(var_tokens, "last", [0]);
                                                                                            var call900 = callmethodChecked(call899, "base", [0]);
                                                                                            var string902 = new GraceString("a number in base ");
                                                                                            var opresult904 = callmethodChecked(string902, "++", [1], call900);
                                                                                            var opresult906 = callmethodChecked(opresult904, "++", [1], string897);
                                                                                            setLineNumber(304);    // compilenode call
                                                                                            onSelf = true;
                                                                                            var call907 = callmethodChecked(this, "lineNumber", [0]);
                                                                                            var call908 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                            onSelf = true;
                                                                                            var call910 = callmethodChecked(this, "linePosition", [0]);
                                                                                            var diff912 = callmethodChecked(call910, "-", [1], new GraceNum(1));
                                                                                            setLineNumber(303);    // compilenode identifier
                                                                                            var call913 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], opresult906, call907, call908, diff912, var_suggestions);
                                                                                            if819 = call913;
                                                                                          }
                                                                                          if812 = if819;
                                                                                        } else {
                                                                                          var if914 = GraceDone;
                                                                                          setLineNumber(307);    // compilenode string
                                                                                          var string915 = new GraceString("string");
                                                                                          var call917 = callmethodChecked(var_tokens, "last", [0]);
                                                                                          var call918 = callmethodChecked(call917, "kind", [0]);
                                                                                          var opresult920 = callmethodChecked(call918, "==", [1], string915);
                                                                                          if (Grace_isTrue(opresult920)) {
                                                                                            setLineNumber(308);    // compilenode identifier
                                                                                            var call921 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                            var call922 = callmethodChecked(call921, "new", [0]);
                                                                                            var var_suggestion = call922;
                                                                                            setLineNumber(309);    // compilenode identifier
                                                                                            var call923 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                            var string924 = new GraceString("++");
                                                                                            var call925 = callmethodChecked(var_dot, "line", [0]);
                                                                                            var call926 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], call923, string924, call925);
                                                                                            setLineNumber(311);    // compilenode string
                                                                                            var string927 = new GraceString("To join a number to a string, use '++'.");
                                                                                            setLineNumber(310);    // compilenode string
                                                                                            var string929 = new GraceString("a number may follow a '.' only if there is a number before the '.'. ");
                                                                                            var opresult931 = callmethodChecked(string929, "++", [1], string927);
                                                                                            setLineNumber(312);    // compilenode identifier
                                                                                            var call932 = callmethodChecked(var_dot, "line", [0]);
                                                                                            var call933 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                            var call934 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                            setLineNumber(310);    // compilenode identifier
                                                                                            var call935 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult931, call932, call933, call934, var_suggestion);
                                                                                            if914 = call935;
                                                                                          } else {
                                                                                            var if936 = GraceDone;
                                                                                            setLineNumber(313);    // compilenode string
                                                                                            var string937 = new GraceString("bind");
                                                                                            var call939 = callmethodChecked(var_tokens, "last", [0]);
                                                                                            var call940 = callmethodChecked(call939, "kind", [0]);
                                                                                            var opresult942 = callmethodChecked(call940, "==", [1], string937);
                                                                                            var string944 = new GraceString("op");
                                                                                            var call946 = callmethodChecked(var_tokens, "last", [0]);
                                                                                            var call947 = callmethodChecked(call946, "kind", [0]);
                                                                                            var opresult949 = callmethodChecked(call947, "==", [1], string944);
                                                                                            var opresult951 = callmethodChecked(opresult949, "||", [1], opresult942);
                                                                                            if (Grace_isTrue(opresult951)) {
                                                                                              setLineNumber(314);    // compilenode identifier
                                                                                              var call952 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                              var call953 = callmethodChecked(call952, "new", [0]);
                                                                                              var var_suggestion = call953;
                                                                                              setLineNumber(315);    // compilenode string
                                                                                              var string954 = new GraceString("0");
                                                                                              var call955 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                              var call956 = callmethodChecked(var_dot, "line", [0]);
                                                                                              var call957 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string954, call955, call956);
                                                                                              setLineNumber(316);    // compilenode string
                                                                                              var string958 = new GraceString("a number must have a digit before the decimal point.");
                                                                                              setLineNumber(317);    // compilenode identifier
                                                                                              var call959 = callmethodChecked(var_dot, "line", [0]);
                                                                                              var call960 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                              setLineNumber(316);    // compilenode identifier
                                                                                              var call961 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], string958, call959, call960, var_suggestion);
                                                                                              if936 = call961;
                                                                                            } else {
                                                                                              var if962 = GraceDone;
                                                                                              setLineNumber(318);    // compilenode string
                                                                                              var string963 = new GraceString("identifier");
                                                                                              var call965 = callmethodChecked(var_tokens, "last", [0]);
                                                                                              var call966 = callmethodChecked(call965, "kind", [0]);
                                                                                              var opresult968 = callmethodChecked(call966, "==", [1], string963);
                                                                                              if (Grace_isTrue(opresult968)) {
                                                                                                setLineNumber(319);    // compilenode array
                                                                                                var array969 = new PrimitiveGraceList([]);
                                                                                                var var_suggestions = array969;
                                                                                                var if970 = GraceDone;
                                                                                                setLineNumber(320);    // compilenode string
                                                                                                var string971 = new GraceString("o");
                                                                                                var call973 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                var call974 = callmethodChecked(call973, "value", [0]);
                                                                                                var opresult976 = callmethodChecked(call974, "==", [1], string971);
                                                                                                if (Grace_isTrue(opresult976)) {
                                                                                                  setLineNumber(321);    // compilenode identifier
                                                                                                  var call977 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                  var call978 = callmethodChecked(call977, "new", [0]);
                                                                                                  var var_suggestion = call978;
                                                                                                  setLineNumber(322);    // compilenode identifier
                                                                                                  var call979 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                  var call980 = callmethodChecked(call979, "linePos", [0]);
                                                                                                  var string981 = new GraceString("0");
                                                                                                  var call982 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                  var call983 = callmethodChecked(call982, "line", [0]);
                                                                                                  var call984 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], call980, string981, call983);
                                                                                                  setLineNumber(323);    // compilenode identifier
                                                                                                  var call985 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                  if970 = call985;
                                                                                                }
                                                                                                setLineNumber(325);    // compilenode identifier
                                                                                                var call986 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                var call987 = callmethodChecked(call986, "new", [0]);
                                                                                                var var_suggestion = call987;
                                                                                                setLineNumber(326);    // compilenode identifier
                                                                                                var call988 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                onSelf = true;
                                                                                                var call990 = callmethodChecked(this, "linePosition", [0]);
                                                                                                var diff992 = callmethodChecked(call990, "-", [1], new GraceNum(1));
                                                                                                var string993 = new GraceString(")");
                                                                                                var string996 = new GraceString("(");
                                                                                                var opresult998 = callmethodChecked(string996, "++", [1], var_accum);
                                                                                                var opresult1000 = callmethodChecked(opresult998, "++", [1], string993);
                                                                                                var call1001 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                var call1002 = callmethodChecked(call1001, "line", [0]);
                                                                                                var call1003 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call988, diff992, opresult1000, call1002);
                                                                                                setLineNumber(327);    // compilenode identifier
                                                                                                var call1004 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                setLineNumber(328);    // compilenode string
                                                                                                var string1005 = new GraceString("a number may follow a '.' only if there is a number before the '.'.");
                                                                                                setLineNumber(329);    // compilenode identifier
                                                                                                var call1006 = callmethodChecked(var_dot, "line", [0]);
                                                                                                var call1007 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                var call1008 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                setLineNumber(328);    // compilenode identifier
                                                                                                var call1009 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], string1005, call1006, call1007, call1008, var_suggestions);
                                                                                                if962 = call1009;
                                                                                              } else {
                                                                                                setLineNumber(331);    // compilenode string
                                                                                                var string1010 = new GraceString("a number may follow a '.' only if there is a number before the '.'.");
                                                                                                setLineNumber(332);    // compilenode identifier
                                                                                                var call1011 = callmethodChecked(var_dot, "line", [0]);
                                                                                                var call1012 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                var call1013 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                setLineNumber(331);    // compilenode identifier
                                                                                                var call1014 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], string1010, call1011, call1012, call1013);
                                                                                                if962 = call1014;
                                                                                              }
                                                                                              if936 = if962;
                                                                                            }
                                                                                            if914 = if936;
                                                                                          }
                                                                                          if812 = if914;
                                                                                        }
                                                                                        if796 = if812;
                                                                                      } else {
                                                                                        setLineNumber(336);    // compilenode identifier
                                                                                        onSelf = true;
                                                                                        var call1015 = callmethodChecked(this, "makeNumToken", [1], var_accum);
                                                                                        var_tok = call1015;
                                                                                        if796 = GraceDone;
                                                                                      }
                                                                                      setLineNumber(338);    // compilenode identifier
                                                                                      var call1016 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                      if791 = call1016;
                                                                                    } else {
                                                                                      var if1017 = GraceDone;
                                                                                      setLineNumber(339);    // compilenode string
                                                                                      var string1018 = new GraceString("o");
                                                                                      var opresult1021 = callmethodChecked(var_mode, "==", [1], string1018);
                                                                                      if (Grace_isTrue(opresult1021)) {
                                                                                        setLineNumber(340);    // compilenode identifier
                                                                                        onSelf = true;
                                                                                        var call1022 = callmethodChecked(this, "opToken", [1], var_accum);
                                                                                        var_tok = call1022;
                                                                                        var if1023 = GraceDone;
                                                                                        setLineNumber(341);    // compilenode string
                                                                                        var string1024 = new GraceString("\u2192");
                                                                                        var opresult1027 = callmethodChecked(var_accum, "==", [1], string1024);
                                                                                        if (Grace_isTrue(opresult1027)) {
                                                                                          setLineNumber(342);    // compilenode call
                                                                                          onSelf = true;
                                                                                          var call1028 = callmethodChecked(this, "arrowToken", [0]);
                                                                                          var_tok = call1028;
                                                                                          if1023 = GraceDone;
                                                                                        } else {
                                                                                          var if1029 = GraceDone;
                                                                                          setLineNumber(343);    // compilenode string
                                                                                          var string1030 = new GraceString(":=");
                                                                                          var opresult1033 = callmethodChecked(var_accum, "==", [1], string1030);
                                                                                          if (Grace_isTrue(opresult1033)) {
                                                                                            setLineNumber(344);    // compilenode call
                                                                                            onSelf = true;
                                                                                            var call1034 = callmethodChecked(this, "bindToken", [0]);
                                                                                            var_tok = call1034;
                                                                                            if1029 = GraceDone;
                                                                                          } else {
                                                                                            var if1035 = GraceDone;
                                                                                            setLineNumber(345);    // compilenode string
                                                                                            var string1036 = new GraceString(":");
                                                                                            var opresult1039 = callmethodChecked(var_accum, "==", [1], string1036);
                                                                                            if (Grace_isTrue(opresult1039)) {
                                                                                              setLineNumber(346);    // compilenode call
                                                                                              onSelf = true;
                                                                                              var call1040 = callmethodChecked(this, "colonToken", [0]);
                                                                                              var_tok = call1040;
                                                                                              if1035 = GraceDone;
                                                                                            }
                                                                                            if1029 = if1035;
                                                                                          }
                                                                                          if1023 = if1029;
                                                                                        }
                                                                                        setLineNumber(348);    // compilenode identifier
                                                                                        var call1041 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                        if1017 = call1041;
                                                                                      } else {
                                                                                        var if1042 = GraceDone;
                                                                                        setLineNumber(349);    // compilenode string
                                                                                        var string1043 = new GraceString("d");
                                                                                        var opresult1046 = callmethodChecked(var_mode, "==", [1], string1043);
                                                                                        if (Grace_isTrue(opresult1046)) {
                                                                                          setLineNumber(350);    // compilenode call
                                                                                          onSelf = true;
                                                                                          var call1048 = callmethodChecked(this, "linePosition", [0]);
                                                                                          var diff1050 = callmethodChecked(call1048, "-", [1], new GraceNum(1));
                                                                                          onSelf = true;
                                                                                          var call1051 = callmethodChecked(this, "indentLevel:=", [1], diff1050);
                                                                                          if1042 = call1051;
                                                                                        } else {
                                                                                          var if1052 = GraceDone;
                                                                                          setLineNumber(351);    // compilenode string
                                                                                          var string1053 = new GraceString("n");
                                                                                          var opresult1056 = callmethodChecked(var_mode, "==", [1], string1053);
                                                                                          if (Grace_isTrue(opresult1056)) {
                                                                                          } else {
                                                                                            var if1057 = GraceDone;
                                                                                            setLineNumber(352);    // compilenode string
                                                                                            var string1058 = new GraceString("e");
                                                                                            var opresult1061 = callmethodChecked(var_mode, "==", [1], string1058);
                                                                                            if (Grace_isTrue(opresult1061)) {
                                                                                            } else {
                                                                                              var if1062 = GraceDone;
                                                                                              setLineNumber(353);    // compilenode string
                                                                                              var string1063 = new GraceString("c");
                                                                                              var opresult1066 = callmethodChecked(var_mode, "==", [1], string1063);
                                                                                              if (Grace_isTrue(opresult1066)) {
                                                                                                setLineNumber(354);    // compilenode num
                                                                                                var var_firstNonSpace = new GraceNum(3);
                                                                                                setLineNumber(355);    // compilenode identifier
                                                                                                var call1067 = callmethodChecked(var_accum, "size", [0]);
                                                                                                var var_accumSize = call1067;
                                                                                                setLineNumber(356);    // compilenode block
                                                                                                var block1068 = new GraceBlock(this, 356, 0);
                                                                                                block1068.real = function() {
                                                                                                  var block1069 = new GraceBlock(this, 356, 0);
                                                                                                  block1069.real = function() {
                                                                                                    setLineNumber(357);    // compilenode string
                                                                                                    var string1070 = new GraceString(" ");
                                                                                                    var call1072 = callmethodChecked(var_accum, "at", [1], var_firstNonSpace);
                                                                                                    var opresult1074 = callmethodChecked(call1072, "==", [1], string1070);
                                                                                                    return opresult1074;
                                                                                                  };
                                                                                                  setLineNumber(356);    // compilenode identifier
                                                                                                  var call1076 = callmethodChecked(var_accum, "size", [0]);
                                                                                                  var opresult1079 = callmethodChecked(var_firstNonSpace, "\u2264", [1], call1076);
                                                                                                  var opresult1081 = callmethodChecked(opresult1079, "&&", [1], block1069);
                                                                                                  return opresult1081;
                                                                                                };
                                                                                                setLineNumber(357);    // compilenode block
                                                                                                var block1082 = new GraceBlock(this, 357, 0);
                                                                                                block1082.real = function() {
                                                                                                  setLineNumber(358);    // compilenode identifier
                                                                                                  var opresult1085 = callmethodChecked(var_firstNonSpace, "+", [1], new GraceNum(1));
                                                                                                  var_firstNonSpace = opresult1085;
                                                                                                  return GraceDone;
                                                                                                };
                                                                                                var call1086 = callmethodChecked(var_prelude, "while()do", [1, 1], block1068, block1082);
                                                                                                setLineNumber(360);    // compilenode identifier
                                                                                                var call1087 = callmethodChecked(var_accum, "size", [0]);
                                                                                                var call1088 = callmethodChecked(var_accum, "substringFrom()to", [1, 1], var_firstNonSpace, call1087);
                                                                                                var var_cmt = call1088;
                                                                                                setLineNumber(361);    // compilenode identifier
                                                                                                onSelf = true;
                                                                                                var call1089 = callmethodChecked(this, "commentToken", [1], var_cmt);
                                                                                                var call1090 = callmethodChecked(var_tokens, "push", [1], call1089);
                                                                                                if1062 = call1090;
                                                                                              } else {
                                                                                                var if1091 = GraceDone;
                                                                                                setLineNumber(362);    // compilenode string
                                                                                                var string1092 = new GraceString("p");
                                                                                                var opresult1095 = callmethodChecked(var_mode, "==", [1], string1092);
                                                                                                if (Grace_isTrue(opresult1095)) {
                                                                                                  var if1096 = GraceDone;
                                                                                                  setLineNumber(363);    // compilenode string
                                                                                                  var string1097 = new GraceString("#pragma ");
                                                                                                  var call1099 = callmethodChecked(var_accum, "substringFrom()to", [1, 1], new GraceNum(1), new GraceNum(8));
                                                                                                  var opresult1101 = callmethodChecked(call1099, "==", [1], string1097);
                                                                                                  if (Grace_isTrue(opresult1101)) {
                                                                                                    setLineNumber(365);    // compilenode identifier
                                                                                                    var call1102 = callmethodChecked(var_accum, "size", [0]);
                                                                                                    var call1103 = callmethodChecked(var_accum, "substringFrom()to", [1, 1], new GraceNum(9), call1102);
                                                                                                    setLineNumber(364);    // compilenode identifier
                                                                                                    var call1104 = callmethodChecked(var_util, "processExtension", [1], call1103);
                                                                                                    if1096 = call1104;
                                                                                                  }
                                                                                                  if1091 = if1096;
                                                                                                } else {
                                                                                                  setLineNumber(370);    // compilenode string
                                                                                                  var string1105 = new GraceString("");
                                                                                                  onSelf = true;
                                                                                                  var call1107 = callmethodChecked(this, "linePosition", [0]);
                                                                                                  var string1109 = new GraceString(":");
                                                                                                  onSelf = true;
                                                                                                  var call1111 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                  var string1113 = new GraceString("at position ");
                                                                                                  var opresult1115 = callmethodChecked(string1113, "++", [1], call1111);
                                                                                                  var opresult1117 = callmethodChecked(opresult1115, "++", [1], string1109);
                                                                                                  var opresult1119 = callmethodChecked(opresult1117, "++", [1], call1107);
                                                                                                  var opresult1121 = callmethodChecked(opresult1119, "++", [1], string1105);
                                                                                                  setLineNumber(369);    // compilenode string
                                                                                                  var string1123 = new GraceString("\u203a ");
                                                                                                  var string1126 = new GraceString(" with accum \u2039");
                                                                                                  var string1129 = new GraceString("no handler for mode ");
                                                                                                  var opresult1131 = callmethodChecked(string1129, "++", [1], var_mode);
                                                                                                  var opresult1133 = callmethodChecked(opresult1131, "++", [1], string1126);
                                                                                                  var opresult1135 = callmethodChecked(opresult1133, "++", [1], var_accum);
                                                                                                  var opresult1137 = callmethodChecked(opresult1135, "++", [1], string1123);
                                                                                                  setLineNumber(368);    // compilenode string
                                                                                                  var string1139 = new GraceString("Internal error in lexer: ");
                                                                                                  var opresult1141 = callmethodChecked(string1139, "++", [1], opresult1137);
                                                                                                  var opresult1143 = callmethodChecked(opresult1141, "++", [1], opresult1121);
                                                                                                  var call1144 = callmethodChecked(var_prelude, "ProgrammingError", [0]);
                                                                                                  var call1145 = callmethodChecked(call1144, "raise", [1], opresult1143);
                                                                                                  if1091 = call1145;
                                                                                                }
                                                                                                if1062 = if1091;
                                                                                              }
                                                                                              if1057 = if1062;
                                                                                            }
                                                                                            if1052 = if1057;
                                                                                          }
                                                                                          if1042 = if1052;
                                                                                        }
                                                                                        if1017 = if1042;
                                                                                      }
                                                                                      if791 = if1017;
                                                                                    }
                                                                                    if784 = if791;
                                                                                  }
                                                                                  if777 = if784;
                                                                                }
                                                                                if770 = if777;
                                                                              }
                                                                              if763 = if770;
                                                                            }
                                                                            if756 = if763;
                                                                          }
                                                                          if732 = if756;
                                                                        }
                                                                        if725 = if732;
                                                                      }
                                                                      if718 = if725;
                                                                    }
                                                                    if711 = if718;
                                                                  }
                                                                  if704 = if711;
                                                                }
                                                                if697 = if704;
                                                              }
                                                              if690 = if697;
                                                            }
                                                            if683 = if690;
                                                          }
                                                          if673 = if683;
                                                        }
                                                        if661 = if673;
                                                      }
                                                      setLineNumber(373);    // compilenode call
                                                      onSelf = true;
                                                      var call1146 = callmethodChecked(this, "linePosition", [0]);
                                                      onSelf = true;
                                                      var call1147 = callmethodChecked(this, "startPosition:=", [1], call1146);
                                                      return call1147;
                                                    };
                                                    func660.paramCounts = [3];
                                                    obj22.methods["modechange"] = func660;
                                                    func660.definitionLine = 205;
                                                    func660.definitionModule = "lexer";
                                                    var func1148 = function(argcv) {    // method fromBase(2)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_str = arguments[curarg];
                                                      curarg++;
                                                      var var_base = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 2)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for fromBase(2)"));
                                                      setModuleName("lexer");
                                                      setLineNumber(377);    // compilenode num
                                                      var var_val = new GraceNum(0);
                                                      setLineNumber(378);    // compilenode num
                                                      var var_i = new GraceNum(0);
                                                      setLineNumber(379);    // compilenode block
                                                      var block1149 = new GraceBlock(this, 379, 1);
                                                      setLineNumber(1);    // compilenode identifier
                                                      block1149.real = function(var_c) {
                                                        setLineNumber(380);    // compilenode identifier
                                                        var call1150 = callmethodChecked(var_c, "ord", [0]);
                                                        var var_n = call1150;
                                                        setLineNumber(381);    // compilenode identifier
                                                        var prod1153 = callmethodChecked(var_val, "*", [1], var_base);
                                                        var_val = prod1153;
                                                        setLineNumber(382);    // compilenode num
                                                        var var_inc = new GraceNum(0);
                                                        var if1154 = GraceDone;
                                                        setLineNumber(383);    // compilenode identifier
                                                        var opresult1157 = callmethodChecked(var_n, "\u2264", [1], new GraceNum(57));
                                                        var opresult1161 = callmethodChecked(var_n, "\u2265", [1], new GraceNum(48));
                                                        var opresult1163 = callmethodChecked(opresult1161, "&&", [1], opresult1157);
                                                        if (Grace_isTrue(opresult1163)) {
                                                          setLineNumber(384);    // compilenode identifier
                                                          var diff1166 = callmethodChecked(var_n, "-", [1], new GraceNum(48));
                                                          var_inc = diff1166;
                                                          if1154 = GraceDone;
                                                        } else {
                                                          var if1167 = GraceDone;
                                                          setLineNumber(385);    // compilenode identifier
                                                          var opresult1170 = callmethodChecked(var_n, "\u2264", [1], new GraceNum(90));
                                                          var opresult1174 = callmethodChecked(var_n, "\u2265", [1], new GraceNum(65));
                                                          var opresult1176 = callmethodChecked(opresult1174, "&&", [1], opresult1170);
                                                          if (Grace_isTrue(opresult1176)) {
                                                            setLineNumber(386);    // compilenode identifier
                                                            var diff1179 = callmethodChecked(var_n, "-", [1], new GraceNum(55));
                                                            var_inc = diff1179;
                                                            if1167 = GraceDone;
                                                          } else {
                                                            setLineNumber(388);    // compilenode identifier
                                                            var diff1182 = callmethodChecked(var_n, "-", [1], new GraceNum(87));
                                                            var_inc = diff1182;
                                                            if1167 = GraceDone;
                                                          }
                                                          if1154 = if1167;
                                                        }
                                                        var if1183 = GraceDone;
                                                        setLineNumber(390);    // compilenode identifier
                                                        var opresult1186 = callmethodChecked(var_inc, "\u2265", [1], var_base);
                                                        if (Grace_isTrue(opresult1186)) {
                                                          var if1187 = GraceDone;
                                                          setLineNumber(391);    // compilenode identifier
                                                          var opresult1190 = callmethodChecked(var_inc, "<", [1], new GraceNum(16));
                                                          var string1192 = new GraceString("0");
                                                          var call1194 = callmethodChecked(var_str, "first", [0]);
                                                          var opresult1196 = callmethodChecked(call1194, "==", [1], string1192);
                                                          var opresult1198 = callmethodChecked(opresult1196, "&&", [1], opresult1190);
                                                          if (Grace_isTrue(opresult1198)) {
                                                            setLineNumber(392);    // compilenode identifier
                                                            var call1199 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                            var call1200 = callmethodChecked(call1199, "new", [0]);
                                                            var var_suggestion = call1200;
                                                            setLineNumber(393);    // compilenode string
                                                            var string1201 = new GraceString("x");
                                                            var call1203 = callmethodChecked(var_str, "size", [0]);
                                                            onSelf = true;
                                                            var call1205 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1207 = callmethodChecked(call1205, "-", [1], call1203);
                                                            var opresult1209 = callmethodChecked(diff1207, "+", [1], new GraceNum(1));
                                                            onSelf = true;
                                                            var call1210 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call1211 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string1201, opresult1209, call1210);
                                                            setLineNumber(394);    // compilenode string
                                                            var string1212 = new GraceString("a number in base 16 must start with '0x'.");
                                                            setLineNumber(395);    // compilenode call
                                                            onSelf = true;
                                                            var call1213 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call1215 = callmethodChecked(var_str, "size", [0]);
                                                            onSelf = true;
                                                            var call1217 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1219 = callmethodChecked(call1217, "-", [1], call1215);
                                                            var opresult1221 = callmethodChecked(diff1219, "+", [1], new GraceNum(1));
                                                            setLineNumber(394);    // compilenode identifier
                                                            var call1222 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], string1212, call1213, opresult1221, var_suggestion);
                                                            if1187 = call1222;
                                                          } else {
                                                            setLineNumber(397);    // compilenode identifier
                                                            var call1223 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                            var call1224 = callmethodChecked(call1223, "new", [0]);
                                                            var var_suggestion = call1224;
                                                            var if1225 = GraceDone;
                                                            setLineNumber(398);    // compilenode identifier
                                                            var call1227 = callmethodChecked(var_str, "size", [0]);
                                                            var opresult1229 = callmethodChecked(call1227, "==", [1], new GraceNum(1));
                                                            if (Grace_isTrue(opresult1229)) {
                                                              setLineNumber(399);    // compilenode identifier
                                                              var call1231 = callmethodChecked(var_str, "size", [0]);
                                                              onSelf = true;
                                                              var call1233 = callmethodChecked(this, "linePosition", [0]);
                                                              var diff1235 = callmethodChecked(call1233, "-", [1], call1231);
                                                              var diff1237 = callmethodChecked(diff1235, "-", [1], new GraceNum(1));
                                                              onSelf = true;
                                                              var call1239 = callmethodChecked(this, "linePosition", [0]);
                                                              var diff1241 = callmethodChecked(call1239, "-", [1], new GraceNum(1));
                                                              onSelf = true;
                                                              var call1242 = callmethodChecked(this, "lineNumber", [0]);
                                                              var call1243 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff1237, diff1241, call1242);
                                                              if1225 = call1243;
                                                            } else {
                                                              setLineNumber(401);    // compilenode identifier
                                                              var call1245 = callmethodChecked(var_str, "size", [0]);
                                                              onSelf = true;
                                                              var call1247 = callmethodChecked(this, "linePosition", [0]);
                                                              var diff1249 = callmethodChecked(call1247, "-", [1], call1245);
                                                              var opresult1251 = callmethodChecked(diff1249, "+", [1], var_i);
                                                              onSelf = true;
                                                              var call1252 = callmethodChecked(this, "lineNumber", [0]);
                                                              var call1253 = callmethodChecked(var_suggestion, "deleteChar()onLine", [1, 1], opresult1251, call1252);
                                                              if1225 = call1253;
                                                            }
                                                            var if1254 = GraceDone;
                                                            setLineNumber(403);    // compilenode identifier
                                                            var opresult1257 = callmethodChecked(var_base, "\u2264", [1], new GraceNum(10));
                                                            if (Grace_isTrue(opresult1257)) {
                                                              setLineNumber(404);    // compilenode string
                                                              var string1258 = new GraceString("'");
                                                              var diff1262 = callmethodChecked(var_base, "-", [1], new GraceNum(1));
                                                              var string1264 = new GraceString("'0' to '");
                                                              var opresult1266 = callmethodChecked(string1264, "++", [1], diff1262);
                                                              var opresult1268 = callmethodChecked(opresult1266, "++", [1], string1258);
                                                              if1254 = opresult1268;
                                                            } else {
                                                              setLineNumber(406);    // compilenode string
                                                              var string1269 = new GraceString("'");
                                                              var opresult1273 = callmethodChecked(new GraceNum(87), "+", [1], var_base);
                                                              var call1274 = callmethodChecked(var_unicode, "create", [1], opresult1273);
                                                              var string1276 = new GraceString("'0' to '9', 'a' to '");
                                                              var opresult1278 = callmethodChecked(string1276, "++", [1], call1274);
                                                              var opresult1280 = callmethodChecked(opresult1278, "++", [1], string1269);
                                                              if1254 = opresult1280;
                                                            }
                                                            var var_validDigits = if1254;
                                                            setLineNumber(408);    // compilenode string
                                                            var string1281 = new GraceString(".");
                                                            var string1284 = new GraceString(". Valid digits are ");
                                                            var string1287 = new GraceString("' is not a valid digit in base ");
                                                            var string1290 = new GraceString("'");
                                                            var opresult1292 = callmethodChecked(string1290, "++", [1], var_c);
                                                            var opresult1294 = callmethodChecked(opresult1292, "++", [1], string1287);
                                                            var opresult1296 = callmethodChecked(opresult1294, "++", [1], var_base);
                                                            var opresult1298 = callmethodChecked(opresult1296, "++", [1], string1284);
                                                            var opresult1300 = callmethodChecked(opresult1298, "++", [1], var_validDigits);
                                                            var opresult1302 = callmethodChecked(opresult1300, "++", [1], string1281);
                                                            setLineNumber(409);    // compilenode call
                                                            onSelf = true;
                                                            var call1303 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call1305 = callmethodChecked(var_str, "size", [0]);
                                                            onSelf = true;
                                                            var call1307 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1309 = callmethodChecked(call1307, "-", [1], call1305);
                                                            var opresult1311 = callmethodChecked(diff1309, "+", [1], var_i);
                                                            var call1313 = callmethodChecked(var_str, "size", [0]);
                                                            onSelf = true;
                                                            var call1315 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1317 = callmethodChecked(call1315, "-", [1], call1313);
                                                            var opresult1319 = callmethodChecked(diff1317, "+", [1], var_i);
                                                            setLineNumber(408);    // compilenode identifier
                                                            var call1320 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult1302, call1303, opresult1311, opresult1319, var_suggestion);
                                                            if1187 = call1320;
                                                          }
                                                          if1183 = if1187;
                                                        }
                                                        setLineNumber(412);    // compilenode identifier
                                                        var opresult1323 = callmethodChecked(var_val, "+", [1], var_inc);
                                                        var_val = opresult1323;
                                                        setLineNumber(413);    // compilenode identifier
                                                        var opresult1326 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                        var_i = opresult1326;
                                                        return GraceDone;
                                                      };
                                                      var call1327 = callmethodChecked(var_prelude, "for()do", [1, 1], var_str, block1149);
                                                      setLineNumber(415);    // compilenode identifier
                                                      return var_val;
                                                    };
                                                    func1148.paramCounts = [2];
                                                    obj22.methods["fromBase"] = func1148;
                                                    func1148.definitionLine = 376;
                                                    func1148.definitionModule = "lexer";
                                                    var func1328 = function(argcv) {    // method hexdecchar(1)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_c = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 1)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for hexdecchar(1)"));
                                                      setModuleName("lexer");
                                                      setLineNumber(420);    // compilenode string
                                                      var string1329 = new GraceString("A");
                                                      var call1330 = callmethodChecked(string1329, "ord", [0]);
                                                      var var_AOrd = call1330;
                                                      setLineNumber(421);    // compilenode string
                                                      var string1331 = new GraceString("a");
                                                      var call1332 = callmethodChecked(string1331, "ord", [0]);
                                                      var var_aOrd = call1332;
                                                      setLineNumber(422);    // compilenode string
                                                      var string1333 = new GraceString("0");
                                                      var call1334 = callmethodChecked(string1333, "ord", [0]);
                                                      var var_zeroOrd = call1334;
                                                      setLineNumber(423);    // compilenode identifier
                                                      var call1335 = callmethodChecked(var_c, "ord", [0]);
                                                      var var_cOrd = call1335;
                                                      var if1336 = GraceDone;
                                                      setLineNumber(424);    // compilenode string
                                                      var string1337 = new GraceString("F");
                                                      var call1338 = callmethodChecked(string1337, "ord", [0]);
                                                      var opresult1341 = callmethodChecked(var_cOrd, "\u2264", [1], call1338);
                                                      var opresult1345 = callmethodChecked(var_cOrd, "\u2265", [1], var_AOrd);
                                                      var opresult1347 = callmethodChecked(opresult1345, "&&", [1], opresult1341);
                                                      if (Grace_isTrue(opresult1347)) {
                                                        setLineNumber(425);    // compilenode identifier
                                                        var diff1351 = callmethodChecked(var_cOrd, "-", [1], var_AOrd);
                                                        var opresult1353 = callmethodChecked(diff1351, "+", [1], new GraceNum(10));
                                                        if1336 = opresult1353;
                                                      } else {
                                                        var if1354 = GraceDone;
                                                        setLineNumber(426);    // compilenode string
                                                        var string1355 = new GraceString("f");
                                                        var call1356 = callmethodChecked(string1355, "ord", [0]);
                                                        var opresult1359 = callmethodChecked(var_cOrd, "\u2264", [1], call1356);
                                                        var opresult1363 = callmethodChecked(var_cOrd, "\u2265", [1], var_aOrd);
                                                        var opresult1365 = callmethodChecked(opresult1363, "&&", [1], opresult1359);
                                                        if (Grace_isTrue(opresult1365)) {
                                                          setLineNumber(427);    // compilenode identifier
                                                          var diff1369 = callmethodChecked(var_cOrd, "-", [1], var_aOrd);
                                                          var opresult1371 = callmethodChecked(diff1369, "+", [1], new GraceNum(10));
                                                          if1354 = opresult1371;
                                                        } else {
                                                          var if1372 = GraceDone;
                                                          setLineNumber(428);    // compilenode string
                                                          var string1373 = new GraceString("9");
                                                          var call1374 = callmethodChecked(string1373, "ord", [0]);
                                                          var opresult1377 = callmethodChecked(var_cOrd, "\u2264", [1], call1374);
                                                          var opresult1381 = callmethodChecked(var_cOrd, "\u2265", [1], var_zeroOrd);
                                                          var opresult1383 = callmethodChecked(opresult1381, "&&", [1], opresult1377);
                                                          if (Grace_isTrue(opresult1383)) {
                                                            setLineNumber(429);    // compilenode identifier
                                                            var diff1386 = callmethodChecked(var_cOrd, "-", [1], var_zeroOrd);
                                                            if1372 = diff1386;
                                                          } else {
                                                            setLineNumber(431);    // compilenode string
                                                            var string1387 = new GraceString("' must be a hexadecimal digit");
                                                            var string1390 = new GraceString("the character '");
                                                            var opresult1392 = callmethodChecked(string1390, "++", [1], var_c);
                                                            var opresult1394 = callmethodChecked(opresult1392, "++", [1], string1387);
                                                            setLineNumber(432);    // compilenode call
                                                            onSelf = true;
                                                            var call1395 = callmethodChecked(this, "lineNumber", [0]);
                                                            onSelf = true;
                                                            var call1396 = callmethodChecked(this, "linePosition", [0]);
                                                            onSelf = true;
                                                            var call1397 = callmethodChecked(this, "linePosition", [0]);
                                                            setLineNumber(431);    // compilenode identifier
                                                            var call1398 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult1394, call1395, call1396, call1397);
                                                            if1372 = call1398;
                                                          }
                                                          if1354 = if1372;
                                                        }
                                                        if1336 = if1354;
                                                      }
                                                      return if1336;
                                                    };
                                                    func1328.paramCounts = [1];
                                                    obj22.methods["hexdecchar"] = func1328;
                                                    func1328.definitionLine = 418;
                                                    func1328.definitionModule = "lexer";
                                                    var func1399 = function(argcv) {    // method makeNumToken(1)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_accum = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 1)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for makeNumToken(1)"));
                                                      setModuleName("lexer");
                                                      setLineNumber(437);    // compilenode num
                                                      var var_base = new GraceNum(10);
                                                      setLineNumber(438);    // compilenode identifier
                                                      var var_baseSet = GraceFalse;
                                                      setLineNumber(439);    // compilenode string
                                                      var string1400 = new GraceString("");
                                                      var var_sofar = string1400;
                                                      setLineNumber(440);    // compilenode num
                                                      var var_i = new GraceNum(0);
                                                      setLineNumber(441);    // compilenode block
                                                      var block1401 = new GraceBlock(this, 441, 1);
                                                      setLineNumber(1);    // compilenode identifier
                                                      block1401.real = function(var_c) {
                                                        var if1402 = GraceDone;
                                                        setLineNumber(442);    // compilenode identifier
                                                        var call1403 = callmethodChecked(var_baseSet, "prefix!", [0]);
                                                        var string1405 = new GraceString("x");
                                                        var opresult1408 = callmethodChecked(var_c, "==", [1], string1405);
                                                        var opresult1410 = callmethodChecked(opresult1408, "&&", [1], call1403);
                                                        if (Grace_isTrue(opresult1410)) {
                                                          setLineNumber(443);    // compilenode identifier
                                                          var call1411 = callmethodChecked(var_sofar, "asNumber", [0]);
                                                          var_base = call1411;
                                                          setLineNumber(444);    // compilenode identifier
                                                          var_baseSet = GraceTrue;
                                                          var if1412 = GraceDone;
                                                          setLineNumber(445);    // compilenode identifier
                                                          var opresult1415 = callmethodChecked(var_base, "==", [1], new GraceNum(0));
                                                          if (Grace_isTrue(opresult1415)) {
                                                            setLineNumber(446);    // compilenode num
                                                            var_base = new GraceNum(16);
                                                            if1412 = GraceDone;
                                                          }
                                                          var if1416 = GraceDone;
                                                          setLineNumber(448);    // compilenode identifier
                                                          var opresult1419 = callmethodChecked(var_base, ">", [1], new GraceNum(36));
                                                          var opresult1423 = callmethodChecked(var_base, "<", [1], new GraceNum(2));
                                                          var opresult1425 = callmethodChecked(opresult1423, "||", [1], opresult1419);
                                                          if (Grace_isTrue(opresult1425)) {
                                                            setLineNumber(449);    // compilenode array
                                                            var array1426 = new PrimitiveGraceList([]);
                                                            var var_suggestions = array1426;
                                                            setLineNumber(450);    // compilenode identifier
                                                            var call1427 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                            var call1428 = callmethodChecked(call1427, "new", [0]);
                                                            var var_suggestion = call1428;
                                                            setLineNumber(451);    // compilenode identifier
                                                            var call1430 = callmethodChecked(var_accum, "size", [0]);
                                                            onSelf = true;
                                                            var call1432 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1434 = callmethodChecked(call1432, "-", [1], call1430);
                                                            var opresult1436 = callmethodChecked(diff1434, "+", [1], var_i);
                                                            var string1437 = new GraceString("*");
                                                            onSelf = true;
                                                            var call1438 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call1439 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], opresult1436, string1437, call1438);
                                                            setLineNumber(452);    // compilenode identifier
                                                            var call1440 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                            setLineNumber(453);    // compilenode identifier
                                                            var call1441 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                            var call1442 = callmethodChecked(call1441, "new", [0]);
                                                            var_suggestion = call1442;
                                                            setLineNumber(454);    // compilenode identifier
                                                            var call1443 = callmethodChecked(var_accum, "size", [0]);
                                                            onSelf = true;
                                                            var call1445 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1447 = callmethodChecked(call1445, "-", [1], call1443);
                                                            var call1449 = callmethodChecked(var_accum, "size", [0]);
                                                            onSelf = true;
                                                            var call1451 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1453 = callmethodChecked(call1451, "-", [1], call1449);
                                                            var opresult1455 = callmethodChecked(diff1453, "+", [1], var_i);
                                                            onSelf = true;
                                                            var call1456 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call1457 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff1447, opresult1455, call1456);
                                                            setLineNumber(455);    // compilenode identifier
                                                            var call1458 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                            setLineNumber(456);    // compilenode string
                                                            var string1459 = new GraceString(" is not a valid numerical base.");
                                                            var string1462 = new GraceString("base ");
                                                            var opresult1464 = callmethodChecked(string1462, "++", [1], var_base);
                                                            var opresult1466 = callmethodChecked(opresult1464, "++", [1], string1459);
                                                            setLineNumber(457);    // compilenode call
                                                            onSelf = true;
                                                            var call1467 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call1468 = callmethodChecked(var_accum, "size", [0]);
                                                            onSelf = true;
                                                            var call1470 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1472 = callmethodChecked(call1470, "-", [1], call1468);
                                                            var call1475 = callmethodChecked(var_accum, "size", [0]);
                                                            onSelf = true;
                                                            var call1477 = callmethodChecked(this, "linePosition", [0]);
                                                            var diff1479 = callmethodChecked(call1477, "-", [1], call1475);
                                                            var opresult1481 = callmethodChecked(diff1479, "+", [1], var_i);
                                                            var diff1483 = callmethodChecked(opresult1481, "-", [1], new GraceNum(1));
                                                            setLineNumber(456);    // compilenode identifier
                                                            var call1484 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], opresult1466, call1467, diff1472, diff1483, var_suggestions);
                                                            if1416 = call1484;
                                                          }
                                                          setLineNumber(459);    // compilenode string
                                                          var string1485 = new GraceString("");
                                                          var_sofar = string1485;
                                                          if1402 = GraceDone;
                                                        } else {
                                                          setLineNumber(461);    // compilenode identifier
                                                          var opresult1488 = callmethodChecked(var_sofar, "++", [1], var_c);
                                                          var_sofar = opresult1488;
                                                          if1402 = GraceDone;
                                                        }
                                                        setLineNumber(463);    // compilenode identifier
                                                        var opresult1491 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                        var_i = opresult1491;
                                                        return GraceDone;
                                                      };
                                                      var call1492 = callmethodChecked(var_prelude, "for()do", [1, 1], var_accum, block1401);
                                                      var if1493 = GraceDone;
                                                      setLineNumber(465);    // compilenode string
                                                      var string1494 = new GraceString("");
                                                      var opresult1497 = callmethodChecked(var_sofar, "==", [1], string1494);
                                                      if (Grace_isTrue(opresult1497)) {
                                                        setLineNumber(466);    // compilenode array
                                                        var array1498 = new PrimitiveGraceList([]);
                                                        var var_suggestions = array1498;
                                                        setLineNumber(467);    // compilenode identifier
                                                        var call1499 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                        var call1500 = callmethodChecked(call1499, "new", [0]);
                                                        var var_suggestion = call1500;
                                                        setLineNumber(468);    // compilenode identifier
                                                        var call1503 = callmethodChecked(var_accum, "size", [0]);
                                                        onSelf = true;
                                                        var call1505 = callmethodChecked(this, "linePosition", [0]);
                                                        var diff1507 = callmethodChecked(call1505, "-", [1], call1503);
                                                        var opresult1509 = callmethodChecked(diff1507, "+", [1], var_i);
                                                        var diff1511 = callmethodChecked(opresult1509, "-", [1], new GraceNum(1));
                                                        onSelf = true;
                                                        var call1513 = callmethodChecked(this, "linePosition", [0]);
                                                        var diff1515 = callmethodChecked(call1513, "-", [1], new GraceNum(1));
                                                        onSelf = true;
                                                        var call1516 = callmethodChecked(this, "lineNumber", [0]);
                                                        var call1517 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff1511, diff1515, call1516);
                                                        setLineNumber(469);    // compilenode identifier
                                                        var call1518 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                        setLineNumber(470);    // compilenode identifier
                                                        var call1519 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                        var call1520 = callmethodChecked(call1519, "new", [0]);
                                                        var_suggestion = call1520;
                                                        setLineNumber(471);    // compilenode string
                                                        var string1521 = new GraceString("0");
                                                        onSelf = true;
                                                        var call1522 = callmethodChecked(this, "linePosition", [0]);
                                                        onSelf = true;
                                                        var call1523 = callmethodChecked(this, "lineNumber", [0]);
                                                        var call1524 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string1521, call1522, call1523);
                                                        setLineNumber(472);    // compilenode identifier
                                                        var call1525 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                        setLineNumber(473);    // compilenode string
                                                        var string1526 = new GraceString("at least one digit must follow the 'x' in a number.");
                                                        setLineNumber(474);    // compilenode call
                                                        onSelf = true;
                                                        var call1527 = callmethodChecked(this, "lineNumber", [0]);
                                                        var call1529 = callmethodChecked(var_accum, "size", [0]);
                                                        onSelf = true;
                                                        var call1531 = callmethodChecked(this, "linePosition", [0]);
                                                        var diff1533 = callmethodChecked(call1531, "-", [1], call1529);
                                                        var opresult1535 = callmethodChecked(diff1533, "+", [1], var_i);
                                                        setLineNumber(473);    // compilenode identifier
                                                        var call1536 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestions", [1, 2, 1], string1526, call1527, opresult1535, var_suggestions);
                                                        if1493 = call1536;
                                                      }
                                                      setLineNumber(476);    // compilenode identifier
                                                      onSelf = true;
                                                      var call1537 = callmethodChecked(this, "fromBase", [2], var_sofar, var_base);
                                                      var call1538 = callmethodChecked(call1537, "asString", [0]);
                                                      onSelf = true;
                                                      var call1539 = callmethodChecked(this, "numToken", [2], call1538, var_base);
                                                      return call1539;
                                                    };
                                                    func1399.paramCounts = [1];
                                                    obj22.methods["makeNumToken"] = func1399;
                                                    func1399.definitionLine = 436;
                                                    func1399.definitionModule = "lexer";
                                                    var func1540 = function(argcv) {    // method isidentifierchar(1)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_ov = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 1)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for isidentifierchar(1)"));
                                                      setModuleName("lexer");
                                                      var if1541 = GraceDone;
                                                      setLineNumber(482);    // compilenode identifier
                                                      var call1542 = callmethodChecked(var_unicode, "isLetter", [1], var_ov);
                                                      if (Grace_isTrue(call1542)) {
                                                        setLineNumber(483);    // compilenode identifier
                                                        return GraceTrue;
                                                      }
                                                      var if1543 = GraceDone;
                                                      setLineNumber(485);    // compilenode identifier
                                                      var call1544 = callmethodChecked(var_unicode, "isNumber", [1], var_ov);
                                                      if (Grace_isTrue(call1544)) {
                                                        setLineNumber(486);    // compilenode identifier
                                                        return GraceTrue;
                                                      }
                                                      var if1545 = GraceDone;
                                                      setLineNumber(488);    // compilenode identifier
                                                      var opresult1548 = callmethodChecked(var_ov, "==", [1], new GraceNum(39));
                                                      var opresult1552 = callmethodChecked(var_ov, "==", [1], new GraceNum(95));
                                                      var opresult1554 = callmethodChecked(opresult1552, "||", [1], opresult1548);
                                                      if (Grace_isTrue(opresult1554)) {
                                                        setLineNumber(490);    // compilenode identifier
                                                        if1545 = GraceTrue;
                                                      } else {
                                                        setLineNumber(492);    // compilenode identifier
                                                        if1545 = GraceFalse;
                                                      }
                                                      return if1545;
                                                    };
                                                    func1540.paramCounts = [1];
                                                    obj22.methods["isidentifierchar"] = func1540;
                                                    func1540.definitionLine = 481;
                                                    func1540.definitionModule = "lexer";
                                                    var func1555 = function(argcv) {    // method isoperatorchar(2)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_c = arguments[curarg];
                                                      curarg++;
                                                      var var_ordval = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 2)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for isoperatorchar(2)"));
                                                      setModuleName("lexer");
                                                      var if1556 = GraceDone;
                                                      setLineNumber(498);    // compilenode identifier
                                                      var call1557 = callmethodChecked(var_operatorChars, "contains", [1], var_c);
                                                      if (Grace_isTrue(call1557)) {
                                                        return GraceTrue;
                                                      }
                                                      var if1558 = GraceDone;
                                                      setLineNumber(499);    // compilenode identifier
                                                      var call1559 = callmethodChecked(var_unicode, "isSymbolMathematical", [1], var_ordval);
                                                      if (Grace_isTrue(call1559)) {
                                                        return GraceTrue;
                                                      }
                                                      var if1560 = GraceDone;
                                                      setLineNumber(500);    // compilenode string
                                                      var string1561 = new GraceString("So");
                                                      var call1562 = callmethodChecked(var_unicode, "iscategory", [2], var_c, string1561);
                                                      if (Grace_isTrue(call1562)) {
                                                        return GraceTrue;
                                                      }
                                                      setLineNumber(501);    // compilenode identifier
                                                      return GraceFalse;
                                                    };
                                                    func1555.paramCounts = [2];
                                                    obj22.methods["isoperatorchar"] = func1555;
                                                    func1555.definitionLine = 497;
                                                    func1555.definitionModule = "lexer";
                                                    var func1563 = function(argcv) {    // method lexfile(1)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_file = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 1)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lexfile(1)"));
                                                      setModuleName("lexer");
                                                      setLineNumber(507);    // compilenode identifier
                                                      var call1564 = callmethodChecked(var_util, "lines", [0]);
                                                      var call1565 = callmethodChecked(call1564, "makeEmpty", [0]);
                                                      var var_lines = call1565;
                                                      setLineNumber(508);    // compilenode identifier
                                                      var call1566 = callmethodChecked(var_util, "cLines", [0]);
                                                      var call1567 = callmethodChecked(call1566, "makeEmpty", [0]);
                                                      var var_cLines = call1567;
                                                      setLineNumber(512);    // compilenode string
                                                      var string1568 = new GraceString("");
                                                      var var_line = string1568;
                                                      setLineNumber(513);    // compilenode string
                                                      var string1569 = new GraceString("");
                                                      var var_cLine = string1569;
                                                      setLineNumber(514);    // compilenode identifier
                                                      var var_wasCR = GraceFalse;
                                                      setLineNumber(515);    // compilenode identifier
                                                      var call1570 = callmethodChecked(var_file, "read", [0]);
                                                      var block1571 = new GraceBlock(this, 515, 1);
                                                      setLineNumber(1);    // compilenode identifier
                                                      block1571.real = function(var_c) {
                                                        var if1572 = GraceDone;
                                                        setLineNumber(516);    // compilenode string
                                                        var string1573 = new GraceString("\u000d");
                                                        var opresult1576 = callmethodChecked(var_c, "==", [1], string1573);
                                                        if (Grace_isTrue(opresult1576)) {
                                                          setLineNumber(517);    // compilenode identifier
                                                          var call1577 = callmethodChecked(var_lines, "push", [1], var_line);
                                                          setLineNumber(518);    // compilenode identifier
                                                          var call1578 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                          setLineNumber(519);    // compilenode string
                                                          var string1579 = new GraceString("");
                                                          var_line = string1579;
                                                          setLineNumber(520);    // compilenode string
                                                          var string1580 = new GraceString("");
                                                          var_cLine = string1580;
                                                          setLineNumber(521);    // compilenode identifier
                                                          var_wasCR = GraceTrue;
                                                          if1572 = GraceDone;
                                                        } else {
                                                          var if1581 = GraceDone;
                                                          setLineNumber(522);    // compilenode string
                                                          var string1582 = new GraceString("\n");
                                                          var opresult1585 = callmethodChecked(var_c, "==", [1], string1582);
                                                          if (Grace_isTrue(opresult1585)) {
                                                            var if1586 = GraceDone;
                                                            setLineNumber(523);    // compilenode identifier
                                                            if (Grace_isTrue(var_wasCR)) {
                                                            } else {
                                                              setLineNumber(527);    // compilenode identifier
                                                              var call1587 = callmethodChecked(var_lines, "push", [1], var_line);
                                                              setLineNumber(528);    // compilenode identifier
                                                              var call1588 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                              setLineNumber(529);    // compilenode string
                                                              var string1589 = new GraceString("");
                                                              var_line = string1589;
                                                              setLineNumber(530);    // compilenode string
                                                              var string1590 = new GraceString("");
                                                              var_cLine = string1590;
                                                              if1586 = GraceDone;
                                                            }
                                                            setLineNumber(532);    // compilenode identifier
                                                            var_wasCR = GraceFalse;
                                                            if1581 = GraceDone;
                                                          } else {
                                                            var if1591 = GraceDone;
                                                            setLineNumber(533);    // compilenode string
                                                            var string1592 = new GraceString("\u2028");
                                                            var opresult1595 = callmethodChecked(var_c, "==", [1], string1592);
                                                            if (Grace_isTrue(opresult1595)) {
                                                              setLineNumber(534);    // compilenode identifier
                                                              var call1596 = callmethodChecked(var_lines, "push", [1], var_line);
                                                              setLineNumber(535);    // compilenode identifier
                                                              var call1597 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                              setLineNumber(536);    // compilenode string
                                                              var string1598 = new GraceString("");
                                                              var_line = string1598;
                                                              setLineNumber(537);    // compilenode string
                                                              var string1599 = new GraceString("");
                                                              var_cLine = string1599;
                                                              setLineNumber(538);    // compilenode identifier
                                                              var_wasCR = GraceFalse;
                                                              if1591 = GraceDone;
                                                            } else {
                                                              var if1600 = GraceDone;
                                                              setLineNumber(539);    // compilenode string
                                                              var string1601 = new GraceString("\\");
                                                              var opresult1604 = callmethodChecked(var_c, "==", [1], string1601);
                                                              if (Grace_isTrue(opresult1604)) {
                                                                setLineNumber(540);    // compilenode identifier
                                                                var opresult1607 = callmethodChecked(var_line, "++", [1], var_c);
                                                                var_line = opresult1607;
                                                                setLineNumber(541);    // compilenode string
                                                                var string1608 = new GraceString("\\\\");
                                                                var opresult1611 = callmethodChecked(var_cLine, "++", [1], string1608);
                                                                var_cLine = opresult1611;
                                                                setLineNumber(542);    // compilenode identifier
                                                                var_wasCR = GraceFalse;
                                                                if1600 = GraceDone;
                                                              } else {
                                                                var if1612 = GraceDone;
                                                                setLineNumber(543);    // compilenode string
                                                                var string1613 = new GraceString("\"");
                                                                var opresult1616 = callmethodChecked(var_c, "==", [1], string1613);
                                                                if (Grace_isTrue(opresult1616)) {
                                                                  setLineNumber(544);    // compilenode identifier
                                                                  var opresult1619 = callmethodChecked(var_line, "++", [1], var_c);
                                                                  var_line = opresult1619;
                                                                  setLineNumber(545);    // compilenode string
                                                                  var string1620 = new GraceString("\\\"");
                                                                  var opresult1623 = callmethodChecked(var_cLine, "++", [1], string1620);
                                                                  var_cLine = opresult1623;
                                                                  setLineNumber(546);    // compilenode identifier
                                                                  var_wasCR = GraceFalse;
                                                                  if1612 = GraceDone;
                                                                } else {
                                                                  setLineNumber(548);    // compilenode identifier
                                                                  var opresult1626 = callmethodChecked(var_line, "++", [1], var_c);
                                                                  var_line = opresult1626;
                                                                  setLineNumber(549);    // compilenode identifier
                                                                  var opresult1629 = callmethodChecked(var_cLine, "++", [1], var_c);
                                                                  var_cLine = opresult1629;
                                                                  setLineNumber(550);    // compilenode identifier
                                                                  var_wasCR = GraceFalse;
                                                                  if1612 = GraceDone;
                                                                }
                                                                if1600 = if1612;
                                                              }
                                                              if1591 = if1600;
                                                            }
                                                            if1581 = if1591;
                                                          }
                                                          if1572 = if1581;
                                                        }
                                                        return if1572;
                                                      };
                                                      var call1630 = callmethodChecked(var_prelude, "for()do", [1, 1], call1570, block1571);
                                                      var if1631 = GraceDone;
                                                      setLineNumber(553);    // compilenode string
                                                      var string1632 = new GraceString("");
                                                      var opresult1635 = callmethodChecked(var_line, "\u2260", [1], string1632);
                                                      if (Grace_isTrue(opresult1635)) {
                                                        setLineNumber(555);    // compilenode identifier
                                                        var call1636 = callmethodChecked(var_lines, "push", [1], var_line);
                                                        setLineNumber(556);    // compilenode identifier
                                                        var call1637 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                        if1631 = call1637;
                                                      }
                                                      setLineNumber(558);    // compilenode identifier
                                                      onSelf = true;
                                                      var call1638 = callmethodChecked(this, "lexinput", [1], var_lines);
                                                      return call1638;
                                                    };
                                                    func1563.paramCounts = [1];
                                                    obj22.methods["lexfile"] = func1563;
                                                    func1563.definitionLine = 506;
                                                    func1563.definitionModule = "lexer";
                                                    var func1639 = function(argcv) {    // method lexinput(1)
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var curarg = 1;
                                                      var var_inputLines = arguments[curarg];
                                                      curarg++;
                                                      if (argcv[0] !== 1)
                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lexinput(1)"));
                                                      setModuleName("lexer");
                                                      setLineNumber(563);    // compilenode object
                                                      var obj1640 = Grace_allocObject(GraceObject, "object");
                                                      obj1640.definitionModule = "lexer";
                                                      obj1640.definitionLine = 563;
                                                      obj1640.outer = this;
                                                      var reader_lexer_outer1641 = function() {
                                                        return this.outer;
                                                      };
                                                      obj1640.methods["outer"] = reader_lexer_outer1641;
                                                      var obj_init_1640 = function() {
                                                        var origSuperDepth = superDepth;
                                                        superDepth = obj1640;
                                                        var func1642 = function(argcv) {    // method push(1)
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          var var_t = arguments[curarg];
                                                          curarg++;
                                                          if (argcv[0] !== 1)
                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for push(1)"));
                                                          setModuleName("lexer");
                                                          var if1643 = GraceDone;
                                                          setLineNumber(569);    // compilenode call
                                                          onSelf = true;
                                                          var call1645 = callmethodChecked(this, "first", [0]);
                                                          var opresult1647 = callmethodChecked(call1645, "==", [1], GraceFalse);
                                                          if (Grace_isTrue(opresult1647)) {
                                                            setLineNumber(570);    // compilenode identifier
                                                            onSelf = true;
                                                            var call1648 = callmethodChecked(this, "first:=", [1], var_t);
                                                            setLineNumber(571);    // compilenode identifier
                                                            onSelf = true;
                                                            var call1649 = callmethodChecked(this, "last:=", [1], var_t);
                                                            if1643 = call1649;
                                                          } else {
                                                            setLineNumber(573);    // compilenode call
                                                            onSelf = true;
                                                            var call1650 = callmethodChecked(this, "last", [0]);
                                                            var call1651 = callmethodChecked(call1650, "next:=", [1], var_t);
                                                            setLineNumber(574);    // compilenode call
                                                            onSelf = true;
                                                            var call1652 = callmethodChecked(this, "last", [0]);
                                                            var call1653 = callmethodChecked(var_t, "prev:=", [1], call1652);
                                                            setLineNumber(575);    // compilenode identifier
                                                            onSelf = true;
                                                            var call1654 = callmethodChecked(this, "last:=", [1], var_t);
                                                            if1643 = call1654;
                                                          }
                                                          setLineNumber(577);    // compilenode call
                                                          onSelf = true;
                                                          var call1656 = callmethodChecked(this, "size'", [0]);
                                                          var opresult1658 = callmethodChecked(call1656, "+", [1], new GraceNum(1));
                                                          onSelf = true;
                                                          var call1659 = callmethodChecked(this, "size':=", [1], opresult1658);
                                                          return call1659;
                                                        };
                                                        func1642.paramCounts = [1];
                                                        obj1640.methods["push"] = func1642;
                                                        func1642.definitionLine = 568;
                                                        func1642.definitionModule = "lexer";
                                                        var func1660 = function(argcv) {    // method pop
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          if (argcv[0] !== 0)
                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for pop"));
                                                          setModuleName("lexer");
                                                          var if1661 = GraceDone;
                                                          setLineNumber(581);    // compilenode call
                                                          onSelf = true;
                                                          var call1663 = callmethodChecked(this, "last", [0]);
                                                          var opresult1665 = callmethodChecked(call1663, "\u2260", [1], GraceFalse);
                                                          if (Grace_isTrue(opresult1665)) {
                                                            setLineNumber(582);    // compilenode call
                                                            onSelf = true;
                                                            var call1666 = callmethodChecked(this, "last", [0]);
                                                            var var_popped = call1666;
                                                            setLineNumber(583);    // compilenode call
                                                            onSelf = true;
                                                            var call1667 = callmethodChecked(this, "last", [0]);
                                                            var call1668 = callmethodChecked(call1667, "prev", [0]);
                                                            onSelf = true;
                                                            var call1669 = callmethodChecked(this, "last:=", [1], call1668);
                                                            var if1670 = GraceDone;
                                                            setLineNumber(584);    // compilenode call
                                                            onSelf = true;
                                                            var call1672 = callmethodChecked(this, "last", [0]);
                                                            var opresult1674 = callmethodChecked(call1672, "==", [1], GraceFalse);
                                                            if (Grace_isTrue(opresult1674)) {
                                                              setLineNumber(585);    // compilenode identifier
                                                              onSelf = true;
                                                              var call1675 = callmethodChecked(this, "first:=", [1], GraceFalse);
                                                              if1670 = call1675;
                                                            }
                                                            setLineNumber(587);    // compilenode call
                                                            onSelf = true;
                                                            var call1677 = callmethodChecked(this, "size'", [0]);
                                                            var diff1679 = callmethodChecked(call1677, "-", [1], new GraceNum(1));
                                                            onSelf = true;
                                                            var call1680 = callmethodChecked(this, "size':=", [1], diff1679);
                                                            setLineNumber(588);    // compilenode identifier
                                                            if1661 = var_popped;
                                                          }
                                                          return if1661;
                                                        };
                                                        func1660.paramCounts = [0];
                                                        obj1640.methods["pop"] = func1660;
                                                        func1660.definitionLine = 580;
                                                        func1660.definitionModule = "lexer";
                                                        var func1681 = function(argcv) {    // method poll
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          if (argcv[0] !== 0)
                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for poll"));
                                                          setModuleName("lexer");
                                                          var if1682 = GraceDone;
                                                          setLineNumber(593);    // compilenode call
                                                          onSelf = true;
                                                          var call1684 = callmethodChecked(this, "first", [0]);
                                                          var opresult1686 = callmethodChecked(call1684, "\u2260", [1], GraceFalse);
                                                          if (Grace_isTrue(opresult1686)) {
                                                            setLineNumber(594);    // compilenode call
                                                            onSelf = true;
                                                            var call1687 = callmethodChecked(this, "first", [0]);
                                                            var var_polled = call1687;
                                                            setLineNumber(595);    // compilenode call
                                                            onSelf = true;
                                                            var call1688 = callmethodChecked(this, "first", [0]);
                                                            var call1689 = callmethodChecked(call1688, "next", [0]);
                                                            onSelf = true;
                                                            var call1690 = callmethodChecked(this, "first:=", [1], call1689);
                                                            var if1691 = GraceDone;
                                                            setLineNumber(596);    // compilenode call
                                                            onSelf = true;
                                                            var call1693 = callmethodChecked(this, "first", [0]);
                                                            var opresult1695 = callmethodChecked(call1693, "==", [1], GraceFalse);
                                                            if (Grace_isTrue(opresult1695)) {
                                                              setLineNumber(597);    // compilenode identifier
                                                              onSelf = true;
                                                              var call1696 = callmethodChecked(this, "last:=", [1], GraceFalse);
                                                              if1691 = call1696;
                                                            }
                                                            setLineNumber(599);    // compilenode call
                                                            onSelf = true;
                                                            var call1698 = callmethodChecked(this, "size'", [0]);
                                                            var diff1700 = callmethodChecked(call1698, "-", [1], new GraceNum(1));
                                                            onSelf = true;
                                                            var call1701 = callmethodChecked(this, "size':=", [1], diff1700);
                                                            setLineNumber(600);    // compilenode identifier
                                                            if1682 = var_polled;
                                                          }
                                                          return if1682;
                                                        };
                                                        func1681.paramCounts = [0];
                                                        obj1640.methods["poll"] = func1681;
                                                        func1681.definitionLine = 592;
                                                        func1681.definitionModule = "lexer";
                                                        var func1702 = function(argcv) {    // method size
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          if (argcv[0] !== 0)
                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for size"));
                                                          setModuleName("lexer");
                                                          setLineNumber(605);    // compilenode call
                                                          onSelf = true;
                                                          var call1704 = callmethodChecked(this, "size'", [0]);
                                                          var opresult1706 = callmethodChecked(call1704, "+", [1], new GraceNum(0));
                                                          return opresult1706;
                                                        };
                                                        func1702.paramCounts = [0];
                                                        obj1640.methods["size"] = func1702;
                                                        func1702.definitionLine = 604;
                                                        func1702.definitionModule = "lexer";
                                                        var func1707 = function(argcv) {    // method iter
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          if (argcv[0] !== 0)
                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for iter"));
                                                          setModuleName("lexer");
                                                          setLineNumber(609);    // compilenode object
                                                          var obj1708 = Grace_allocObject(GraceObject, "object");
                                                          obj1708.definitionModule = "lexer";
                                                          obj1708.definitionLine = 609;
                                                          obj1708.outer = this;
                                                          var reader_lexer_outer1709 = function() {
                                                            return this.outer;
                                                          };
                                                          obj1708.methods["outer"] = reader_lexer_outer1709;
                                                          var obj_init_1708 = function() {
                                                            var origSuperDepth = superDepth;
                                                            superDepth = obj1708;
                                                            var func1710 = function(argcv) {    // method havemore
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              if (argcv[0] !== 0)
                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for havemore"));
                                                              setModuleName("lexer");
                                                              setLineNumber(612);    // compilenode call
                                                              onSelf = true;
                                                              var call1712 = callmethodChecked(this, "n", [0]);
                                                              var opresult1714 = callmethodChecked(call1712, "\u2260", [1], GraceFalse);
                                                              return opresult1714;
                                                            };
                                                            func1710.paramCounts = [0];
                                                            obj1708.methods["havemore"] = func1710;
                                                            func1710.definitionLine = 611;
                                                            func1710.definitionModule = "lexer";
                                                            var func1715 = function(argcv) {    // method hasNext
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              if (argcv[0] !== 0)
                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for hasNext"));
                                                              setModuleName("lexer");
                                                              setLineNumber(615);    // compilenode call
                                                              onSelf = true;
                                                              var call1717 = callmethodChecked(this, "n", [0]);
                                                              var opresult1719 = callmethodChecked(call1717, "\u2260", [1], GraceFalse);
                                                              return opresult1719;
                                                            };
                                                            func1715.paramCounts = [0];
                                                            obj1708.methods["hasNext"] = func1715;
                                                            func1715.definitionLine = 614;
                                                            func1715.definitionModule = "lexer";
                                                            var func1720 = function(argcv) {    // method next
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              if (argcv[0] !== 0)
                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for next"));
                                                              setModuleName("lexer");
                                                              setLineNumber(618);    // compilenode call
                                                              onSelf = true;
                                                              var call1721 = callmethodChecked(this, "n", [0]);
                                                              var var_ret = call1721;
                                                              setLineNumber(619);    // compilenode call
                                                              onSelf = true;
                                                              var call1722 = callmethodChecked(this, "n", [0]);
                                                              var call1723 = callmethodChecked(call1722, "next", [0]);
                                                              onSelf = true;
                                                              var call1724 = callmethodChecked(this, "n:=", [1], call1723);
                                                              setLineNumber(620);    // compilenode identifier
                                                              return var_ret;
                                                            };
                                                            func1720.paramCounts = [0];
                                                            obj1708.methods["next"] = func1720;
                                                            func1720.definitionLine = 617;
                                                            func1720.definitionModule = "lexer";
                                                            setLineNumber(610);    // compilenode call
                                                            var call1725 = callmethodChecked(superDepth, "outer", [0]);
                                                            onOuter = true;
                                                            onSelf = true;
                                                            var call1726 = callmethodChecked(call1725, "first", [0]);
                                                            obj1708.data["n"] = call1726;
                                                            var reader_lexer_n1727 = function() {
                                                              return this.data["n"];
                                                            };
                                                            obj1708.methods["n"] = reader_lexer_n1727;
                                                            obj1708.data["n"] = call1726;
                                                            var writer_lexer_n1727 = function(argcv, o) {
                                                              this.data["n"] = o;
                                                              return GraceDone;
                                                            };
                                                            obj1708.methods["n:="] = writer_lexer_n1727;
                                                            reader_lexer_n1727.confidential = true;
                                                            writer_lexer_n1727.confidential = true;
                                                            obj1708.mutable = true;
                                                            superDepth = origSuperDepth;
                                                          };
                                                          obj_init_1708.apply(obj1708, []);
                                                          return obj1708;
                                                        };
                                                        func1707.paramCounts = [0];
                                                        obj1640.methods["iter"] = func1707;
                                                        func1707.definitionLine = 608;
                                                        func1707.definitionModule = "lexer";
                                                          var func1728 = function(argcv) {    // method iter()object
                                                            var curarg = 1;
                                                            var inheritingObject = arguments[curarg++];
                                                            // Start argument processing
                                                            curarg = 1;
                                                            // End argument processing
                                                            setModuleName("lexer");
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var obj1729 = Grace_allocObject(GraceObject, "iter");
                                                            obj1729.definitionModule = "lexer";
                                                            obj1729.definitionLine = 609;
                                                            var inho1729 = inheritingObject;
                                                            while (inho1729.superobj) inho1729 = inho1729.superobj;
                                                            inho1729.superobj = obj1729;
                                                            obj1729.data = inheritingObject.data;
                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                              obj1729._value = inheritingObject._value;
                                                            obj1729.outer = this;
                                                            var reader_lexer_outer1730 = function() {
                                                              return this.outer;
                                                            };
                                                            obj1729.methods["outer"] = reader_lexer_outer1730;
                                                            var obj_init_1729 = function() {
                                                              var origSuperDepth = superDepth;
                                                              superDepth = obj1729;
                                                              var func1731 = function(argcv) {    // method havemore
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                if (argcv[0] !== 0)
                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for havemore"));
                                                                setModuleName("lexer");
                                                                setLineNumber(612);    // compilenode call
                                                                onSelf = true;
                                                                var call1733 = callmethodChecked(this, "n", [0]);
                                                                var opresult1735 = callmethodChecked(call1733, "\u2260", [1], GraceFalse);
                                                                return opresult1735;
                                                              };
                                                              func1731.paramCounts = [0];
                                                              obj1729.methods["havemore"] = func1731;
                                                              func1731.definitionLine = 611;
                                                              func1731.definitionModule = "lexer";
                                                              var func1736 = function(argcv) {    // method hasNext
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                if (argcv[0] !== 0)
                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for hasNext"));
                                                                setModuleName("lexer");
                                                                setLineNumber(615);    // compilenode call
                                                                onSelf = true;
                                                                var call1738 = callmethodChecked(this, "n", [0]);
                                                                var opresult1740 = callmethodChecked(call1738, "\u2260", [1], GraceFalse);
                                                                return opresult1740;
                                                              };
                                                              func1736.paramCounts = [0];
                                                              obj1729.methods["hasNext"] = func1736;
                                                              func1736.definitionLine = 614;
                                                              func1736.definitionModule = "lexer";
                                                              var func1741 = function(argcv) {    // method next
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                if (argcv[0] !== 0)
                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for next"));
                                                                setModuleName("lexer");
                                                                setLineNumber(618);    // compilenode call
                                                                onSelf = true;
                                                                var call1742 = callmethodChecked(this, "n", [0]);
                                                                var var_ret = call1742;
                                                                setLineNumber(619);    // compilenode call
                                                                onSelf = true;
                                                                var call1743 = callmethodChecked(this, "n", [0]);
                                                                var call1744 = callmethodChecked(call1743, "next", [0]);
                                                                onSelf = true;
                                                                var call1745 = callmethodChecked(this, "n:=", [1], call1744);
                                                                setLineNumber(620);    // compilenode identifier
                                                                return var_ret;
                                                              };
                                                              func1741.paramCounts = [0];
                                                              obj1729.methods["next"] = func1741;
                                                              func1741.definitionLine = 617;
                                                              func1741.definitionModule = "lexer";
                                                              setLineNumber(610);    // compilenode call
                                                              var call1746 = callmethodChecked(superDepth, "outer", [0]);
                                                              onOuter = true;
                                                              onSelf = true;
                                                              var call1747 = callmethodChecked(call1746, "first", [0]);
                                                              obj1729.data["n"] = call1747;
                                                              var reader_lexer_n1748 = function() {
                                                                return this.data["n"];
                                                              };
                                                              obj1729.methods["n"] = reader_lexer_n1748;
                                                              obj1729.data["n"] = call1747;
                                                              var writer_lexer_n1748 = function(argcv, o) {
                                                                this.data["n"] = o;
                                                                return GraceDone;
                                                              };
                                                              obj1729.methods["n:="] = writer_lexer_n1748;
                                                              reader_lexer_n1748.confidential = true;
                                                              writer_lexer_n1748.confidential = true;
                                                              obj1729.mutable = true;
                                                              superDepth = origSuperDepth;
                                                            };
                                                            obj_init_1729.apply(inheritingObject, []);
                                                            return obj1729;
                                                            };
                                                            obj1640.methods["iter()object"] = func1728;
                                                          var func1749 = function(argcv) {    // method iterator
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            if (argcv[0] !== 0)
                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for iterator"));
                                                            setModuleName("lexer");
                                                            setLineNumber(626);    // compilenode call
                                                            onSelf = true;
                                                            var call1750 = callmethodChecked(this, "iter", [0]);
                                                            return call1750;
                                                          };
                                                          func1749.paramCounts = [0];
                                                          obj1640.methods["iterator"] = func1749;
                                                          func1749.definitionLine = 625;
                                                          func1749.definitionModule = "lexer";
                                                          var func1751 = function(argcv) {    // method do(1)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_action = arguments[curarg];
                                                            curarg++;
                                                            if (argcv[0] !== 1)
                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for do(1)"));
                                                            setModuleName("lexer");
                                                            setLineNumber(630);    // compilenode call
                                                            onSelf = true;
                                                            var call1752 = callmethodChecked(this, "first", [0]);
                                                            var var_n = call1752;
                                                            setLineNumber(631);    // compilenode block
                                                            var block1753 = new GraceBlock(this, 631, 0);
                                                            block1753.real = function() {
                                                              var opresult1756 = callmethodChecked(var_n, "\u2260", [1], GraceFalse);
                                                              return opresult1756;
                                                            };
                                                            var block1757 = new GraceBlock(this, 631, 0);
                                                            block1757.real = function() {
                                                              setLineNumber(632);    // compilenode identifier
                                                              var call1758 = callmethodChecked(var_action, "apply", [1], var_n);
                                                              setLineNumber(633);    // compilenode identifier
                                                              var call1759 = callmethodChecked(var_n, "next", [0]);
                                                              var_n = call1759;
                                                              return GraceDone;
                                                            };
                                                            var call1760 = callmethodChecked(var_prelude, "while()do", [1, 1], block1753, block1757);
                                                            return call1760;
                                                          };
                                                          func1751.paramCounts = [1];
                                                          obj1640.methods["do"] = func1751;
                                                          func1751.definitionLine = 629;
                                                          func1751.definitionModule = "lexer";
                                                          setLineNumber(564);    // compilenode identifier
                                                          obj1640.data["first"] = GraceFalse;
                                                          var reader_lexer_first1761 = function() {
                                                            return this.data["first"];
                                                          };
                                                          obj1640.methods["first"] = reader_lexer_first1761;
                                                          obj1640.data["first"] = GraceFalse;
                                                          var writer_lexer_first1761 = function(argcv, o) {
                                                            this.data["first"] = o;
                                                            return GraceDone;
                                                          };
                                                          obj1640.methods["first:="] = writer_lexer_first1761;
                                                          writer_lexer_first1761.confidential = true;
                                                          obj1640.mutable = true;
                                                          setLineNumber(565);    // compilenode identifier
                                                          obj1640.data["last"] = GraceFalse;
                                                          var reader_lexer_last1762 = function() {
                                                            return this.data["last"];
                                                          };
                                                          obj1640.methods["last"] = reader_lexer_last1762;
                                                          obj1640.data["last"] = GraceFalse;
                                                          var writer_lexer_last1762 = function(argcv, o) {
                                                            this.data["last"] = o;
                                                            return GraceDone;
                                                          };
                                                          obj1640.methods["last:="] = writer_lexer_last1762;
                                                          writer_lexer_last1762.confidential = true;
                                                          obj1640.mutable = true;
                                                          setLineNumber(566);    // compilenode num
                                                          obj1640.data["size'"] = new GraceNum(0);
                                                          var reader_lexer_size__39__1763 = function() {
                                                            return this.data["size'"];
                                                          };
                                                          obj1640.methods["size'"] = reader_lexer_size__39__1763;
                                                          obj1640.data["size'"] = new GraceNum(0);
                                                          var writer_lexer_size__39__1763 = function(argcv, o) {
                                                            this.data["size'"] = o;
                                                            return GraceDone;
                                                          };
                                                          obj1640.methods["size':="] = writer_lexer_size__39__1763;
                                                          reader_lexer_size__39__1763.confidential = true;
                                                          writer_lexer_size__39__1763.confidential = true;
                                                          obj1640.mutable = true;
                                                          superDepth = origSuperDepth;
                                                        };
                                                        obj_init_1640.apply(obj1640, []);
                                                        var var_tokens = obj1640;
                                                        setLineNumber(638);    // compilenode string
                                                        var string1764 = new GraceString("d");
                                                        var var_mode = string1764;
                                                        setLineNumber(639);    // compilenode identifier
                                                        var var_newmode = var_mode;
                                                        setLineNumber(640);    // compilenode identifier
                                                        var var_inStr = GraceFalse;
                                                        setLineNumber(641);    // compilenode identifier
                                                        var var_inBackticks = GraceFalse;
                                                        setLineNumber(642);    // compilenode identifier
                                                        var var_backtickIdent = GraceFalse;
                                                        setLineNumber(643);    // compilenode string
                                                        var string1765 = new GraceString("");
                                                        var var_accum = string1765;
                                                        setLineNumber(644);    // compilenode identifier
                                                        var var_escaped = GraceFalse;
                                                        setLineNumber(645);    // compilenode num
                                                        var var_unichars = new GraceNum(0);
                                                        setLineNumber(646);    // compilenode num
                                                        var var_codepoint = new GraceNum(0);
                                                        setLineNumber(647);    // compilenode num
                                                        var var_interpdepth = new GraceNum(0);
                                                        setLineNumber(648);    // compilenode identifier
                                                        var var_interpString = GraceFalse;
                                                        setLineNumber(649);    // compilenode identifier
                                                        var var_atStart = GraceTrue;
                                                        setLineNumber(650);    // compilenode identifier
                                                        var var_newlineFound = GraceFalse;
                                                        setLineNumber(651);    // compilenode num
                                                        onSelf = true;
                                                        var call1766 = callmethodChecked(this, "linePosition:=", [1], new GraceNum(0));
                                                        setLineNumber(652);    // compilenode string
                                                        var string1767 = new GraceString("lexing.");
                                                        var call1768 = callmethodChecked(var_util, "log_verbose", [1], string1767);
                                                        setLineNumber(653);    // compilenode string
                                                        var string1769 = new GraceString("Z");
                                                        var call1770 = callmethodChecked(var_unicode, "pattern()not", [2, 2], string1769, new GraceNum(9), new GraceNum(32), new GraceNum(160));
                                                        var var_badSeparator = call1770;
                                                        setLineNumber(655);    // compilenode string
                                                        var string1771 = new GraceString("C");
                                                        var call1772 = callmethodChecked(var_unicode, "pattern()not", [1, 2], string1771, new GraceNum(10), new GraceNum(13));
                                                        var var_badControl = call1772;
                                                        setLineNumber(656);    // compilenode string
                                                        var string1773 = new GraceString("(");
                                                        var call1774 = callmethodChecked(string1773, "ord", [0]);
                                                        var string1775 = new GraceString(")");
                                                        var call1776 = callmethodChecked(string1775, "ord", [0]);
                                                        var string1777 = new GraceString(",");
                                                        var call1778 = callmethodChecked(string1777, "ord", [0]);
                                                        setLineNumber(657);    // compilenode string
                                                        var string1779 = new GraceString("{");
                                                        var call1780 = callmethodChecked(string1779, "ord", [0]);
                                                        var string1781 = new GraceString("}");
                                                        var call1782 = callmethodChecked(string1781, "ord", [0]);
                                                        var string1783 = new GraceString("[");
                                                        var call1784 = callmethodChecked(string1783, "ord", [0]);
                                                        var string1785 = new GraceString("]");
                                                        var call1786 = callmethodChecked(string1785, "ord", [0]);
                                                        var string1787 = new GraceString(";");
                                                        var call1788 = callmethodChecked(string1787, "ord", [0]);
                                                        var string1789 = new GraceString("\u27e6");
                                                        var call1790 = callmethodChecked(string1789, "ord", [0]);
                                                        var string1791 = new GraceString("\u27e7");
                                                        var call1792 = callmethodChecked(string1791, "ord", [0]);
                                                        setLineNumber(656);    // compilenode identifier
                                                        var call1793 = callmethodChecked(var_unicode, "pattern", [10], call1774, call1776, call1778, call1780, call1782, call1784, call1786, call1788, call1790, call1792);
                                                        var var_selfModes = call1793;
                                                        setLineNumber(658);    // compilenode string
                                                        var string1794 = new GraceString("(");
                                                        var call1795 = callmethodChecked(string1794, "ord", [0]);
                                                        var string1796 = new GraceString(")");
                                                        var call1797 = callmethodChecked(string1796, "ord", [0]);
                                                        setLineNumber(659);    // compilenode string
                                                        var string1798 = new GraceString("{");
                                                        var call1799 = callmethodChecked(string1798, "ord", [0]);
                                                        var string1800 = new GraceString("}");
                                                        var call1801 = callmethodChecked(string1800, "ord", [0]);
                                                        var string1802 = new GraceString("[");
                                                        var call1803 = callmethodChecked(string1802, "ord", [0]);
                                                        var string1804 = new GraceString("]");
                                                        var call1805 = callmethodChecked(string1804, "ord", [0]);
                                                        var string1806 = new GraceString("\u27e6");
                                                        var call1807 = callmethodChecked(string1806, "ord", [0]);
                                                        var string1808 = new GraceString("\u27e7");
                                                        var call1809 = callmethodChecked(string1808, "ord", [0]);
                                                        setLineNumber(658);    // compilenode identifier
                                                        var call1810 = callmethodChecked(var_unicode, "pattern", [8], call1795, call1797, call1799, call1801, call1803, call1805, call1807, call1809);
                                                        var var_brackets = call1810;
                                                        setLineNumber(660);    // compilenode string
                                                        var string1811 = new GraceString("L");
                                                        var string1812 = new GraceString("N");
                                                        var call1813 = callmethodChecked(var_unicode, "pattern", [4], string1811, string1812, new GraceNum(95), new GraceNum(39));
                                                        var var_identifierChar = call1813;
                                                        setLineNumber(661);    // compilenode string
                                                        var string1814 = new GraceString("0");
                                                        var call1815 = callmethodChecked(string1814, "ord", [0]);
                                                        var string1816 = new GraceString("1");
                                                        var call1817 = callmethodChecked(string1816, "ord", [0]);
                                                        var string1818 = new GraceString("2");
                                                        var call1819 = callmethodChecked(string1818, "ord", [0]);
                                                        var string1820 = new GraceString("3");
                                                        var call1821 = callmethodChecked(string1820, "ord", [0]);
                                                        setLineNumber(662);    // compilenode string
                                                        var string1822 = new GraceString("4");
                                                        var call1823 = callmethodChecked(string1822, "ord", [0]);
                                                        var string1824 = new GraceString("5");
                                                        var call1825 = callmethodChecked(string1824, "ord", [0]);
                                                        var string1826 = new GraceString("6");
                                                        var call1827 = callmethodChecked(string1826, "ord", [0]);
                                                        var string1828 = new GraceString("7");
                                                        var call1829 = callmethodChecked(string1828, "ord", [0]);
                                                        var string1830 = new GraceString("8");
                                                        var call1831 = callmethodChecked(string1830, "ord", [0]);
                                                        var string1832 = new GraceString("9");
                                                        var call1833 = callmethodChecked(string1832, "ord", [0]);
                                                        setLineNumber(661);    // compilenode identifier
                                                        var call1834 = callmethodChecked(var_unicode, "pattern", [10], call1815, call1817, call1819, call1821, call1823, call1825, call1827, call1829, call1831, call1833);
                                                        var var_digit = call1834;
                                                        setLineNumber(663);    // compilenode block
                                                        var block1835 = new GraceBlock(this, 663, 1);
                                                        setLineNumber(1);    // compilenode identifier
                                                        block1835.real = function(var_c) {
                                                          setLineNumber(664);    // compilenode string
                                                          var string1836 = new GraceString("");
                                                          var var_ct = string1836;
                                                          setLineNumber(665);    // compilenode identifier
                                                          var call1837 = callmethodChecked(var_c, "ord", [0]);
                                                          var var_ordval = call1837;
                                                          var if1838 = GraceDone;
                                                          setLineNumber(666);    // compilenode block
                                                          var block1839 = new GraceBlock(this, 666, 0);
                                                          block1839.real = function() {
                                                            var string1840 = new GraceString("q");
                                                            var opresult1843 = callmethodChecked(var_mode, "\u2260", [1], string1840);
                                                            return opresult1843;
                                                          };
                                                          var call1845 = callmethodChecked(var_badSeparator, "match", [1], var_ordval);
                                                          var opresult1847 = callmethodChecked(call1845, "&&", [1], block1839);
                                                          if (Grace_isTrue(opresult1847)) {
                                                            setLineNumber(669);    // compilenode identifier
                                                            var call1848 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                            var call1849 = callmethodChecked(call1848, "new", [0]);
                                                            var var_suggestion = call1849;
                                                            setLineNumber(670);    // compilenode call
                                                            onSelf = true;
                                                            var call1850 = callmethodChecked(this, "linePosition", [0]);
                                                            var string1851 = new GraceString(" ");
                                                            onSelf = true;
                                                            var call1852 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call1853 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], call1850, string1851, call1852);
                                                            var if1854 = GraceDone;
                                                            setLineNumber(671);    // compilenode identifier
                                                            var opresult1857 = callmethodChecked(var_ordval, "==", [1], new GraceNum(9));
                                                            if (Grace_isTrue(opresult1857)) {
                                                              var if1858 = GraceDone;
                                                              setLineNumber(672);    // compilenode identifier
                                                              if (Grace_isTrue(var_inStr)) {
                                                                setLineNumber(673);    // compilenode call
                                                                onSelf = true;
                                                                var call1859 = callmethodChecked(this, "linePosition", [0]);
                                                                onSelf = true;
                                                                var call1860 = callmethodChecked(this, "linePosition", [0]);
                                                                setLineNumber(674);    // compilenode string
                                                                var string1861 = new GraceString("");
                                                                var call1863 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string1864 = new GraceString("0");
                                                                var call1865 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call1866 = callmethodChecked(call1865, "padl", [3], call1863, new GraceNum(4), string1864);
                                                                var string1868 = new GraceString("\\u");
                                                                var opresult1870 = callmethodChecked(string1868, "++", [1], call1866);
                                                                var opresult1872 = callmethodChecked(opresult1870, "++", [1], string1861);
                                                                setLineNumber(675);    // compilenode call
                                                                onSelf = true;
                                                                var call1873 = callmethodChecked(this, "lineNumber", [0]);
                                                                setLineNumber(673);    // compilenode identifier
                                                                var call1874 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call1859, call1860, opresult1872, call1873);
                                                                setLineNumber(680);    // compilenode string
                                                                var string1875 = new GraceString(" instead");
                                                                setLineNumber(679);    // compilenode identifier
                                                                var call1877 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string1878 = new GraceString("0");
                                                                var call1879 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call1880 = callmethodChecked(call1879, "padl", [3], call1877, new GraceNum(4), string1878);
                                                                setLineNumber(678);    // compilenode string
                                                                var string1882 = new GraceString("use the Unicode escape \\u");
                                                                setLineNumber(677);    // compilenode string
                                                                var string1884 = new GraceString("written in the source code; ");
                                                                setLineNumber(676);    // compilenode string
                                                                var string1886 = new GraceString("tabs cannot be ");
                                                                var opresult1888 = callmethodChecked(string1886, "++", [1], string1884);
                                                                var opresult1890 = callmethodChecked(opresult1888, "++", [1], string1882);
                                                                var opresult1892 = callmethodChecked(opresult1890, "++", [1], call1880);
                                                                var opresult1894 = callmethodChecked(opresult1892, "++", [1], string1875);
                                                                setLineNumber(681);    // compilenode call
                                                                onSelf = true;
                                                                var call1895 = callmethodChecked(this, "lineNumber", [0]);
                                                                onSelf = true;
                                                                var call1896 = callmethodChecked(this, "linePosition", [0]);
                                                                onSelf = true;
                                                                var call1897 = callmethodChecked(this, "linePosition", [0]);
                                                                setLineNumber(676);    // compilenode identifier
                                                                var call1898 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult1894, call1895, call1896, call1897, var_suggestion);
                                                                if1858 = call1898;
                                                              }
                                                              setLineNumber(684);    // compilenode string
                                                              var string1899 = new GraceString("tabs are not allowed; use spaces instead.");
                                                              onSelf = true;
                                                              var call1900 = callmethodChecked(this, "lineNumber", [0]);
                                                              setLineNumber(685);    // compilenode call
                                                              onSelf = true;
                                                              var call1901 = callmethodChecked(this, "linePosition", [0]);
                                                              onSelf = true;
                                                              var call1902 = callmethodChecked(this, "linePosition", [0]);
                                                              setLineNumber(684);    // compilenode identifier
                                                              var call1903 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], string1899, call1900, call1901, call1902, var_suggestion);
                                                              if1854 = call1903;
                                                            } else {
                                                              var if1904 = GraceDone;
                                                              setLineNumber(687);    // compilenode string
                                                              var string1905 = new GraceString("\"");
                                                              var opresult1908 = callmethodChecked(var_mode, "==", [1], string1905);
                                                              if (Grace_isTrue(opresult1908)) {
                                                                setLineNumber(688);    // compilenode call
                                                                onSelf = true;
                                                                var call1909 = callmethodChecked(this, "linePosition", [0]);
                                                                onSelf = true;
                                                                var call1910 = callmethodChecked(this, "linePosition", [0]);
                                                                setLineNumber(689);    // compilenode string
                                                                var string1911 = new GraceString("");
                                                                var call1913 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string1914 = new GraceString("0");
                                                                var call1915 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call1916 = callmethodChecked(call1915, "padl", [3], call1913, new GraceNum(4), string1914);
                                                                var string1918 = new GraceString("\\u");
                                                                var opresult1920 = callmethodChecked(string1918, "++", [1], call1916);
                                                                var opresult1922 = callmethodChecked(opresult1920, "++", [1], string1911);
                                                                setLineNumber(690);    // compilenode call
                                                                onSelf = true;
                                                                var call1923 = callmethodChecked(this, "lineNumber", [0]);
                                                                setLineNumber(688);    // compilenode identifier
                                                                var call1924 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call1909, call1910, opresult1922, call1923);
                                                                setLineNumber(697);    // compilenode string
                                                                var string1925 = new GraceString(" instead");
                                                                setLineNumber(696);    // compilenode identifier
                                                                var call1927 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string1928 = new GraceString("0");
                                                                var call1929 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call1930 = callmethodChecked(call1929, "padl", [3], call1927, new GraceNum(4), string1928);
                                                                setLineNumber(695);    // compilenode string
                                                                var string1932 = new GraceString("use the Unicode escape \\u");
                                                                setLineNumber(694);    // compilenode string
                                                                var string1934 = new GraceString("written in the source code; ");
                                                                setLineNumber(693);    // compilenode string
                                                                var string1936 = new GraceString(" and cannot be ");
                                                                setLineNumber(692);    // compilenode string
                                                                var string1938 = new GraceString("is not a valid whitespace character");
                                                                setLineNumber(691);    // compilenode string
                                                                var string1940 = new GraceString(") ");
                                                                var call1942 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string1943 = new GraceString("0");
                                                                var call1944 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call1945 = callmethodChecked(call1944, "padl", [3], call1942, new GraceNum(4), string1943);
                                                                var string1947 = new GraceString(" (U+");
                                                                var call1949 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                var string1951 = new GraceString("");
                                                                var opresult1953 = callmethodChecked(string1951, "++", [1], call1949);
                                                                var opresult1955 = callmethodChecked(opresult1953, "++", [1], string1947);
                                                                var opresult1957 = callmethodChecked(opresult1955, "++", [1], call1945);
                                                                var opresult1959 = callmethodChecked(opresult1957, "++", [1], string1940);
                                                                var opresult1961 = callmethodChecked(opresult1959, "++", [1], string1938);
                                                                var opresult1963 = callmethodChecked(opresult1961, "++", [1], string1936);
                                                                var opresult1965 = callmethodChecked(opresult1963, "++", [1], string1934);
                                                                var opresult1967 = callmethodChecked(opresult1965, "++", [1], string1932);
                                                                var opresult1969 = callmethodChecked(opresult1967, "++", [1], call1930);
                                                                var opresult1971 = callmethodChecked(opresult1969, "++", [1], string1925);
                                                                setLineNumber(698);    // compilenode call
                                                                onSelf = true;
                                                                var call1972 = callmethodChecked(this, "lineNumber", [0]);
                                                                onSelf = true;
                                                                var call1973 = callmethodChecked(this, "linePosition", [0]);
                                                                onSelf = true;
                                                                var call1974 = callmethodChecked(this, "linePosition", [0]);
                                                                setLineNumber(691);    // compilenode identifier
                                                                var call1975 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult1971, call1972, call1973, call1974, var_suggestion);
                                                                if1904 = call1975;
                                                              }
                                                              setLineNumber(702);    // compilenode string
                                                              var string1976 = new GraceString("is not a valid whitespace character; use spaces instead.");
                                                              setLineNumber(701);    // compilenode string
                                                              var string1978 = new GraceString(") ");
                                                              var call1980 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                              var string1981 = new GraceString("0");
                                                              var call1982 = callmethodChecked(superDepth, "outer", [0]);
                                                              onOuter = true;
                                                              onSelf = true;
                                                              var call1983 = callmethodChecked(call1982, "padl", [3], call1980, new GraceNum(4), string1981);
                                                              var string1985 = new GraceString(" (U+");
                                                              var call1987 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                              var string1989 = new GraceString("");
                                                              var opresult1991 = callmethodChecked(string1989, "++", [1], call1987);
                                                              var opresult1993 = callmethodChecked(opresult1991, "++", [1], string1985);
                                                              var opresult1995 = callmethodChecked(opresult1993, "++", [1], call1983);
                                                              var opresult1997 = callmethodChecked(opresult1995, "++", [1], string1978);
                                                              var opresult1999 = callmethodChecked(opresult1997, "++", [1], string1976);
                                                              setLineNumber(702);    // compilenode call
                                                              onSelf = true;
                                                              var call2000 = callmethodChecked(this, "lineNumber", [0]);
                                                              setLineNumber(703);    // compilenode call
                                                              onSelf = true;
                                                              var call2001 = callmethodChecked(this, "linePosition", [0]);
                                                              onSelf = true;
                                                              var call2002 = callmethodChecked(this, "linePosition", [0]);
                                                              setLineNumber(701);    // compilenode identifier
                                                              var call2003 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult1999, call2000, call2001, call2002, var_suggestion);
                                                              if1854 = call2003;
                                                            }
                                                            if1838 = if1854;
                                                          } else {
                                                            var if2004 = GraceDone;
                                                            setLineNumber(705);    // compilenode block
                                                            var block2005 = new GraceBlock(this, 705, 0);
                                                            block2005.real = function() {
                                                              var string2006 = new GraceString("q");
                                                              var opresult2009 = callmethodChecked(var_mode, "\u2260", [1], string2006);
                                                              return opresult2009;
                                                            };
                                                            var call2011 = callmethodChecked(var_badControl, "match", [1], var_ordval);
                                                            var opresult2013 = callmethodChecked(call2011, "&&", [1], block2005);
                                                            if (Grace_isTrue(opresult2013)) {
                                                              setLineNumber(708);    // compilenode identifier
                                                              var call2014 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                              var call2015 = callmethodChecked(call2014, "new", [0]);
                                                              var var_suggestion = call2015;
                                                              var if2016 = GraceDone;
                                                              setLineNumber(709);    // compilenode identifier
                                                              if (Grace_isTrue(var_inStr)) {
                                                                setLineNumber(710);    // compilenode call
                                                                onSelf = true;
                                                                var call2017 = callmethodChecked(this, "linePosition", [0]);
                                                                onSelf = true;
                                                                var call2018 = callmethodChecked(this, "linePosition", [0]);
                                                                setLineNumber(711);    // compilenode string
                                                                var string2019 = new GraceString("");
                                                                var call2021 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string2022 = new GraceString("0");
                                                                var call2023 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call2024 = callmethodChecked(call2023, "padl", [3], call2021, new GraceNum(4), string2022);
                                                                var string2026 = new GraceString("\\u");
                                                                var opresult2028 = callmethodChecked(string2026, "++", [1], call2024);
                                                                var opresult2030 = callmethodChecked(opresult2028, "++", [1], string2019);
                                                                setLineNumber(712);    // compilenode call
                                                                onSelf = true;
                                                                var call2031 = callmethodChecked(this, "lineNumber", [0]);
                                                                setLineNumber(710);    // compilenode identifier
                                                                var call2032 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call2017, call2018, opresult2030, call2031);
                                                                setLineNumber(718);    // compilenode string
                                                                var string2033 = new GraceString(" instead");
                                                                setLineNumber(717);    // compilenode identifier
                                                                var call2035 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string2036 = new GraceString("0");
                                                                var call2037 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call2038 = callmethodChecked(call2037, "padl", [3], call2035, new GraceNum(4), string2036);
                                                                setLineNumber(716);    // compilenode string
                                                                var string2040 = new GraceString("use the Unicode escape \\u");
                                                                setLineNumber(715);    // compilenode string
                                                                var string2042 = new GraceString("written in the source code; ");
                                                                setLineNumber(714);    // compilenode string
                                                                var string2044 = new GraceString("is a control character and cannot be ");
                                                                setLineNumber(713);    // compilenode string
                                                                var string2046 = new GraceString(") ");
                                                                var call2048 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                var string2049 = new GraceString("0");
                                                                var call2050 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call2051 = callmethodChecked(call2050, "padl", [3], call2048, new GraceNum(4), string2049);
                                                                var string2053 = new GraceString(" (U+");
                                                                var call2055 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                var string2057 = new GraceString("");
                                                                var opresult2059 = callmethodChecked(string2057, "++", [1], call2055);
                                                                var opresult2061 = callmethodChecked(opresult2059, "++", [1], string2053);
                                                                var opresult2063 = callmethodChecked(opresult2061, "++", [1], call2051);
                                                                var opresult2065 = callmethodChecked(opresult2063, "++", [1], string2046);
                                                                var opresult2067 = callmethodChecked(opresult2065, "++", [1], string2044);
                                                                var opresult2069 = callmethodChecked(opresult2067, "++", [1], string2042);
                                                                var opresult2071 = callmethodChecked(opresult2069, "++", [1], string2040);
                                                                var opresult2073 = callmethodChecked(opresult2071, "++", [1], call2038);
                                                                var opresult2075 = callmethodChecked(opresult2073, "++", [1], string2033);
                                                                setLineNumber(719);    // compilenode call
                                                                onSelf = true;
                                                                var call2076 = callmethodChecked(this, "lineNumber", [0]);
                                                                onSelf = true;
                                                                var call2077 = callmethodChecked(this, "linePosition", [0]);
                                                                onSelf = true;
                                                                var call2078 = callmethodChecked(this, "linePosition", [0]);
                                                                setLineNumber(713);    // compilenode identifier
                                                                var call2079 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult2075, call2076, call2077, call2078, var_suggestion);
                                                                if2016 = call2079;
                                                              }
                                                              setLineNumber(722);    // compilenode call
                                                              onSelf = true;
                                                              var call2080 = callmethodChecked(this, "linePosition", [0]);
                                                              onSelf = true;
                                                              var call2081 = callmethodChecked(this, "lineNumber", [0]);
                                                              var call2082 = callmethodChecked(var_suggestion, "deleteChar()onLine", [1, 1], call2080, call2081);
                                                              setLineNumber(724);    // compilenode string
                                                              var string2083 = new GraceString("is a control character and cannot be written in the source code; consider using spaces instead.");
                                                              setLineNumber(723);    // compilenode string
                                                              var string2085 = new GraceString(") ");
                                                              var call2087 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                              var string2088 = new GraceString("0");
                                                              var call2089 = callmethodChecked(superDepth, "outer", [0]);
                                                              onOuter = true;
                                                              onSelf = true;
                                                              var call2090 = callmethodChecked(call2089, "padl", [3], call2087, new GraceNum(4), string2088);
                                                              var string2092 = new GraceString(" (U+");
                                                              var call2094 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                              var string2096 = new GraceString("");
                                                              var opresult2098 = callmethodChecked(string2096, "++", [1], call2094);
                                                              var opresult2100 = callmethodChecked(opresult2098, "++", [1], string2092);
                                                              var opresult2102 = callmethodChecked(opresult2100, "++", [1], call2090);
                                                              var opresult2104 = callmethodChecked(opresult2102, "++", [1], string2085);
                                                              var opresult2106 = callmethodChecked(opresult2104, "++", [1], string2083);
                                                              setLineNumber(724);    // compilenode call
                                                              onSelf = true;
                                                              var call2107 = callmethodChecked(this, "lineNumber", [0]);
                                                              setLineNumber(725);    // compilenode call
                                                              onSelf = true;
                                                              var call2108 = callmethodChecked(this, "linePosition", [0]);
                                                              onSelf = true;
                                                              var call2109 = callmethodChecked(this, "linePosition", [0]);
                                                              setLineNumber(723);    // compilenode identifier
                                                              var call2110 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult2106, call2107, call2108, call2109, var_suggestion);
                                                              if2004 = call2110;
                                                            }
                                                            if1838 = if2004;
                                                          }
                                                          var if2111 = GraceDone;
                                                          setLineNumber(727);    // compilenode identifier
                                                          if (Grace_isTrue(var_atStart)) {
                                                            var if2112 = GraceDone;
                                                            setLineNumber(728);    // compilenode call
                                                            onSelf = true;
                                                            var call2114 = callmethodChecked(this, "linePosition", [0]);
                                                            var opresult2116 = callmethodChecked(call2114, "==", [1], new GraceNum(1));
                                                            if (Grace_isTrue(opresult2116)) {
                                                              var if2117 = GraceDone;
                                                              setLineNumber(729);    // compilenode string
                                                              var string2118 = new GraceString("#");
                                                              var opresult2121 = callmethodChecked(var_c, "==", [1], string2118);
                                                              if (Grace_isTrue(opresult2121)) {
                                                                setLineNumber(730);    // compilenode string
                                                                var string2122 = new GraceString("p");
                                                                var_mode = string2122;
                                                                setLineNumber(731);    // compilenode identifier
                                                                var_newmode = var_mode;
                                                                if2117 = GraceDone;
                                                              } else {
                                                                setLineNumber(733);    // compilenode identifier
                                                                var_atStart = GraceFalse;
                                                                if2117 = GraceDone;
                                                              }
                                                              if2112 = if2117;
                                                            }
                                                            if2111 = if2112;
                                                          }
                                                          var if2123 = GraceDone;
                                                          setLineNumber(737);    // compilenode identifier
                                                          if (Grace_isTrue(var_inStr)) {
                                                          } else {
                                                            var if2124 = GraceDone;
                                                            setLineNumber(739);    // compilenode string
                                                            var string2125 = new GraceString("p");
                                                            var opresult2128 = callmethodChecked(var_mode, "\u2260", [1], string2125);
                                                            var string2130 = new GraceString("c");
                                                            var opresult2133 = callmethodChecked(var_mode, "\u2260", [1], string2130);
                                                            var opresult2135 = callmethodChecked(opresult2133, "&&", [1], opresult2128);
                                                            if (Grace_isTrue(opresult2135)) {
                                                              var if2136 = GraceDone;
                                                              setLineNumber(741);    // compilenode string
                                                              var string2137 = new GraceString("d");
                                                              var opresult2140 = callmethodChecked(var_mode, "\u2260", [1], string2137);
                                                              var string2142 = new GraceString(" ");
                                                              var opresult2145 = callmethodChecked(var_c, "==", [1], string2142);
                                                              var opresult2147 = callmethodChecked(opresult2145, "&&", [1], opresult2140);
                                                              if (Grace_isTrue(opresult2147)) {
                                                                setLineNumber(742);    // compilenode string
                                                                var string2148 = new GraceString("n");
                                                                var_newmode = string2148;
                                                                if2136 = GraceDone;
                                                              }
                                                              var if2149 = GraceDone;
                                                              setLineNumber(744);    // compilenode string
                                                              var string2150 = new GraceString("\"");
                                                              var opresult2153 = callmethodChecked(var_c, "==", [1], string2150);
                                                              if (Grace_isTrue(opresult2153)) {
                                                                setLineNumber(746);    // compilenode string
                                                                var string2154 = new GraceString("\"");
                                                                var_newmode = string2154;
                                                                setLineNumber(747);    // compilenode identifier
                                                                var_inStr = GraceTrue;
                                                                setLineNumber(748);    // compilenode call
                                                                onSelf = true;
                                                                var call2155 = callmethodChecked(this, "linePosition", [0]);
                                                                onSelf = true;
                                                                var call2156 = callmethodChecked(this, "stringStart:=", [1], call2155);
                                                                if2149 = call2156;
                                                              } else {
                                                                var if2157 = GraceDone;
                                                                setLineNumber(749);    // compilenode string
                                                                var string2158 = new GraceString("\u2039");
                                                                var opresult2161 = callmethodChecked(var_c, "==", [1], string2158);
                                                                if (Grace_isTrue(opresult2161)) {
                                                                  setLineNumber(751);    // compilenode string
                                                                  var string2162 = new GraceString("q");
                                                                  var_newmode = string2162;
                                                                  setLineNumber(752);    // compilenode identifier
                                                                  var_inStr = GraceTrue;
                                                                  setLineNumber(753);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2163 = callmethodChecked(this, "lineNumber", [0]);
                                                                  onSelf = true;
                                                                  var call2164 = callmethodChecked(this, "startLine:=", [1], call2163);
                                                                  setLineNumber(754);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2165 = callmethodChecked(this, "linePosition", [0]);
                                                                  onSelf = true;
                                                                  var call2166 = callmethodChecked(this, "stringStart:=", [1], call2165);
                                                                  if2157 = call2166;
                                                                } else {
                                                                  var if2167 = GraceDone;
                                                                  setLineNumber(755);    // compilenode identifier
                                                                  var call2168 = callmethodChecked(var_identifierChar, "match", [1], var_ordval);
                                                                  if (Grace_isTrue(call2168)) {
                                                                    setLineNumber(756);    // compilenode string
                                                                    var string2169 = new GraceString("i");
                                                                    var_newmode = string2169;
                                                                    if2167 = GraceDone;
                                                                  }
                                                                  if2157 = if2167;
                                                                }
                                                                if2149 = if2157;
                                                              }
                                                              var if2170 = GraceDone;
                                                              setLineNumber(758);    // compilenode identifier
                                                              var call2171 = callmethodChecked(var_digit, "match", [1], var_ordval);
                                                              if (Grace_isTrue(call2171)) {
                                                                var if2172 = GraceDone;
                                                                setLineNumber(761);    // compilenode string
                                                                var string2173 = new GraceString("i");
                                                                var opresult2176 = callmethodChecked(var_mode, "\u2260", [1], string2173);
                                                                if (Grace_isTrue(opresult2176)) {
                                                                  setLineNumber(762);    // compilenode string
                                                                  var string2177 = new GraceString("m");
                                                                  var_newmode = string2177;
                                                                  if2172 = GraceDone;
                                                                }
                                                                if2170 = if2172;
                                                              }
                                                              var if2178 = GraceDone;
                                                              setLineNumber(765);    // compilenode string
                                                              var string2179 = new GraceString("m");
                                                              var opresult2182 = callmethodChecked(var_mode, "==", [1], string2179);
                                                              if (Grace_isTrue(opresult2182)) {
                                                                var if2183 = GraceDone;
                                                                setLineNumber(766);    // compilenode identifier
                                                                var opresult2186 = callmethodChecked(var_ordval, "\u2264", [1], new GraceNum(122));
                                                                var opresult2190 = callmethodChecked(var_ordval, "\u2265", [1], new GraceNum(97));
                                                                var opresult2192 = callmethodChecked(opresult2190, "&&", [1], opresult2186);
                                                                if (Grace_isTrue(opresult2192)) {
                                                                  setLineNumber(767);    // compilenode string
                                                                  var string2193 = new GraceString("m");
                                                                  var_newmode = string2193;
                                                                  if2183 = GraceDone;
                                                                } else {
                                                                  var if2194 = GraceDone;
                                                                  setLineNumber(769);    // compilenode identifier
                                                                  var opresult2197 = callmethodChecked(var_ordval, "\u2264", [1], new GraceNum(90));
                                                                  var opresult2201 = callmethodChecked(var_ordval, "\u2265", [1], new GraceNum(65));
                                                                  var opresult2203 = callmethodChecked(opresult2201, "&&", [1], opresult2197);
                                                                  if (Grace_isTrue(opresult2203)) {
                                                                    setLineNumber(770);    // compilenode string
                                                                    var string2204 = new GraceString("m");
                                                                    var_newmode = string2204;
                                                                    if2194 = GraceDone;
                                                                  }
                                                                  if2183 = if2194;
                                                                }
                                                                if2178 = if2183;
                                                              }
                                                              var if2205 = GraceDone;
                                                              setLineNumber(774);    // compilenode string
                                                              var string2206 = new GraceString("<");
                                                              var opresult2209 = callmethodChecked(var_c, "==", [1], string2206);
                                                              if (Grace_isTrue(opresult2209)) {
                                                                var if2210 = GraceDone;
                                                                setLineNumber(775);    // compilenode string
                                                                var string2211 = new GraceString("i");
                                                                var opresult2214 = callmethodChecked(var_mode, "==", [1], string2211);
                                                                if (Grace_isTrue(opresult2214)) {
                                                                  setLineNumber(776);    // compilenode string
                                                                  var string2215 = new GraceString("\u27e6");
                                                                  var_newmode = string2215;
                                                                  if2210 = GraceDone;
                                                                } else {
                                                                  var if2216 = GraceDone;
                                                                  setLineNumber(777);    // compilenode string
                                                                  var string2217 = new GraceString("op");
                                                                  var call2219 = callmethodChecked(var_tokens, "last", [0]);
                                                                  var call2220 = callmethodChecked(call2219, "kind", [0]);
                                                                  var opresult2222 = callmethodChecked(call2220, "==", [1], string2217);
                                                                  var string2224 = new GraceString("n");
                                                                  var opresult2227 = callmethodChecked(var_mode, "==", [1], string2224);
                                                                  var opresult2229 = callmethodChecked(opresult2227, "&&", [1], opresult2222);
                                                                  if (Grace_isTrue(opresult2229)) {
                                                                    setLineNumber(778);    // compilenode string
                                                                    var string2230 = new GraceString("\u27e7");
                                                                    var_newmode = string2230;
                                                                    if2216 = GraceDone;
                                                                  } else {
                                                                    setLineNumber(780);    // compilenode string
                                                                    var string2231 = new GraceString("o");
                                                                    var_newmode = string2231;
                                                                    if2216 = GraceDone;
                                                                  }
                                                                  if2210 = if2216;
                                                                }
                                                                if2205 = if2210;
                                                              } else {
                                                                var if2232 = GraceDone;
                                                                setLineNumber(782);    // compilenode block
                                                                var block2233 = new GraceBlock(this, 782, 0);
                                                                block2233.real = function() {
                                                                  var string2234 = new GraceString("e");
                                                                  var opresult2237 = callmethodChecked(var_mode, "==", [1], string2234);
                                                                  var string2239 = new GraceString("i");
                                                                  var opresult2242 = callmethodChecked(var_mode, "==", [1], string2239);
                                                                  var opresult2244 = callmethodChecked(opresult2242, "||", [1], opresult2237);
                                                                  return opresult2244;
                                                                };
                                                                var string2246 = new GraceString(">");
                                                                var opresult2249 = callmethodChecked(var_c, "==", [1], string2246);
                                                                var opresult2251 = callmethodChecked(opresult2249, "&&", [1], block2233);
                                                                if (Grace_isTrue(opresult2251)) {
                                                                  var if2252 = GraceDone;
                                                                  setLineNumber(783);    // compilenode string
                                                                  var string2253 = new GraceString("\u27e7");
                                                                  var opresult2256 = callmethodChecked(var_mode, "==", [1], string2253);
                                                                  if (Grace_isTrue(opresult2256)) {
                                                                    setLineNumber(784);    // compilenode identifier
                                                                    onSelf = true;
                                                                    var call2257 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                    if2252 = call2257;
                                                                  }
                                                                  setLineNumber(786);    // compilenode string
                                                                  var string2258 = new GraceString("\u27e7");
                                                                  var_newmode = string2258;
                                                                  if2232 = GraceDone;
                                                                } else {
                                                                  var if2259 = GraceDone;
                                                                  setLineNumber(787);    // compilenode identifier
                                                                  onSelf = true;
                                                                  var call2260 = callmethodChecked(this, "isoperatorchar", [2], var_c, var_ordval);
                                                                  if (Grace_isTrue(call2260)) {
                                                                    setLineNumber(788);    // compilenode string
                                                                    var string2261 = new GraceString("o");
                                                                    var_newmode = string2261;
                                                                    if2259 = GraceDone;
                                                                  } else {
                                                                    var if2262 = GraceDone;
                                                                    setLineNumber(789);    // compilenode identifier
                                                                    var call2263 = callmethodChecked(var_selfModes, "match", [1], var_ordval);
                                                                    if (Grace_isTrue(call2263)) {
                                                                      setLineNumber(790);    // compilenode identifier
                                                                      var_newmode = var_c;
                                                                      if2262 = GraceDone;
                                                                    }
                                                                    if2259 = if2262;
                                                                  }
                                                                  if2232 = if2259;
                                                                }
                                                                if2205 = if2232;
                                                              }
                                                              var if2264 = GraceDone;
                                                              setLineNumber(792);    // compilenode string
                                                              var string2265 = new GraceString("#");
                                                              var opresult2268 = callmethodChecked(var_c, "==", [1], string2265);
                                                              if (Grace_isTrue(opresult2268)) {
                                                                var if2269 = GraceDone;
                                                                setLineNumber(793);    // compilenode string
                                                                var string2270 = new GraceString("#pragma");
                                                                onSelf = true;
                                                                var call2272 = callmethodChecked(this, "lineNumber", [0]);
                                                                var call2273 = callmethodChecked(var_util, "lines", [0]);
                                                                var call2274 = callmethodChecked(call2273, "at", [1], call2272);
                                                                var call2275 = callmethodChecked(call2274, "substringFrom()to", [1, 1], new GraceNum(1), new GraceNum(7));
                                                                var opresult2277 = callmethodChecked(call2275, "==", [1], string2270);
                                                                if (Grace_isTrue(opresult2277)) {
                                                                  var if2278 = GraceDone;
                                                                  setLineNumber(794);    // compilenode identifier
                                                                  if (Grace_isTrue(var_atStart)) {
                                                                    setLineNumber(795);    // compilenode string
                                                                    var string2279 = new GraceString("p");
                                                                    var_mode = string2279;
                                                                    setLineNumber(796);    // compilenode string
                                                                    var string2280 = new GraceString("p");
                                                                    var_newmode = string2280;
                                                                    if2278 = GraceDone;
                                                                  } else {
                                                                    setLineNumber(798);    // compilenode string
                                                                    var string2281 = new GraceString("pragmas must be at the start of the file.");
                                                                    setLineNumber(799);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2282 = callmethodChecked(this, "lineNumber", [0]);
                                                                    setLineNumber(798);    // compilenode identifier
                                                                    var call2283 = callmethodChecked(var_errormessages, "syntaxError()atLine", [1, 1], string2281, call2282);
                                                                    if2278 = call2283;
                                                                  }
                                                                  if2269 = if2278;
                                                                }
                                                                if2264 = if2269;
                                                              }
                                                              var if2284 = GraceDone;
                                                              setLineNumber(803);    // compilenode string
                                                              var string2285 = new GraceString(".");
                                                              var opresult2288 = callmethodChecked(var_c, "==", [1], string2285);
                                                              if (Grace_isTrue(opresult2288)) {
                                                                var if2289 = GraceDone;
                                                                setLineNumber(804);    // compilenode string
                                                                var string2290 = new GraceString(".");
                                                                var opresult2293 = callmethodChecked(var_accum, "==", [1], string2290);
                                                                if (Grace_isTrue(opresult2293)) {
                                                                  setLineNumber(806);    // compilenode string
                                                                  var string2294 = new GraceString("o");
                                                                  var_mode = string2294;
                                                                  setLineNumber(807);    // compilenode identifier
                                                                  var_newmode = var_mode;
                                                                  if2289 = GraceDone;
                                                                } else {
                                                                  var if2295 = GraceDone;
                                                                  setLineNumber(808);    // compilenode string
                                                                  var string2296 = new GraceString("..");
                                                                  var opresult2299 = callmethodChecked(var_accum, "==", [1], string2296);
                                                                  if (Grace_isTrue(opresult2299)) {
                                                                    setLineNumber(810);    // compilenode string
                                                                    var string2300 = new GraceString("n");
                                                                    var_mode = string2300;
                                                                    setLineNumber(811);    // compilenode identifier
                                                                    var_newmode = var_mode;
                                                                    setLineNumber(812);    // compilenode string
                                                                    var string2301 = new GraceString("i");
                                                                    var string2302 = new GraceString("...");
                                                                    onSelf = true;
                                                                    var call2303 = callmethodChecked(this, "modechange", [3], var_tokens, string2301, string2302);
                                                                    setLineNumber(813);    // compilenode string
                                                                    var string2304 = new GraceString("");
                                                                    var_accum = string2304;
                                                                    if2295 = GraceDone;
                                                                  } else {
                                                                    setLineNumber(815);    // compilenode string
                                                                    var string2305 = new GraceString(".");
                                                                    var_newmode = string2305;
                                                                    if2295 = GraceDone;
                                                                  }
                                                                  if2289 = if2295;
                                                                }
                                                                if2284 = if2289;
                                                              }
                                                              var if2306 = GraceDone;
                                                              setLineNumber(818);    // compilenode string
                                                              var string2307 = new GraceString("/");
                                                              var opresult2310 = callmethodChecked(var_c, "==", [1], string2307);
                                                              if (Grace_isTrue(opresult2310)) {
                                                                var if2311 = GraceDone;
                                                                setLineNumber(819);    // compilenode string
                                                                var string2312 = new GraceString("/");
                                                                var opresult2315 = callmethodChecked(var_accum, "==", [1], string2312);
                                                                if (Grace_isTrue(opresult2315)) {
                                                                  setLineNumber(821);    // compilenode string
                                                                  var string2316 = new GraceString("c");
                                                                  var_mode = string2316;
                                                                  setLineNumber(822);    // compilenode identifier
                                                                  var_newmode = var_mode;
                                                                  if2311 = GraceDone;
                                                                }
                                                                if2306 = if2311;
                                                              }
                                                              var if2317 = GraceDone;
                                                              setLineNumber(825);    // compilenode string
                                                              var string2318 = new GraceString("n");
                                                              var opresult2321 = callmethodChecked(var_mode, "==", [1], string2318);
                                                              if (Grace_isTrue(opresult2321)) {
                                                                var if2322 = GraceDone;
                                                                setLineNumber(826);    // compilenode identifier
                                                                var opresult2325 = callmethodChecked(var_mode, "==", [1], var_newmode);
                                                                if (Grace_isTrue(opresult2325)) {
                                                                  var if2326 = GraceDone;
                                                                  setLineNumber(827);    // compilenode identifier
                                                                  var call2327 = callmethodChecked(var_unicode, "isSeparator", [1], var_ordval);
                                                                  var call2328 = callmethodChecked(call2327, "not", [0]);
                                                                  if (Grace_isTrue(call2328)) {
                                                                    var if2329 = GraceDone;
                                                                    setLineNumber(828);    // compilenode identifier
                                                                    var call2330 = callmethodChecked(var_unicode, "isControl", [1], var_ordval);
                                                                    var call2331 = callmethodChecked(call2330, "not", [0]);
                                                                    if (Grace_isTrue(call2331)) {
                                                                      var if2332 = GraceDone;
                                                                      setLineNumber(829);    // compilenode identifier
                                                                      var opresult2335 = callmethodChecked(var_ordval, "\u2260", [1], new GraceNum(10));
                                                                      if (Grace_isTrue(opresult2335)) {
                                                                        var if2336 = GraceDone;
                                                                        setLineNumber(830);    // compilenode identifier
                                                                        var opresult2339 = callmethodChecked(var_ordval, "\u2260", [1], new GraceNum(13));
                                                                        if (Grace_isTrue(opresult2339)) {
                                                                          var if2340 = GraceDone;
                                                                          setLineNumber(831);    // compilenode identifier
                                                                          var opresult2343 = callmethodChecked(var_ordval, "\u2260", [1], new GraceNum(32));
                                                                          if (Grace_isTrue(opresult2343)) {
                                                                            var if2344 = GraceDone;
                                                                            setLineNumber(832);    // compilenode string
                                                                            var string2345 = new GraceString(".");
                                                                            var opresult2348 = callmethodChecked(var_c, "\u2260", [1], string2345);
                                                                            if (Grace_isTrue(opresult2348)) {
                                                                              setLineNumber(834);    // compilenode string
                                                                              var string2349 = new GraceString("is not a valid character; use spaces instead.");
                                                                              setLineNumber(833);    // compilenode string
                                                                              var string2351 = new GraceString(") ");
                                                                              var call2353 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                              var string2354 = new GraceString("0");
                                                                              var call2355 = callmethodChecked(superDepth, "outer", [0]);
                                                                              onOuter = true;
                                                                              onSelf = true;
                                                                              var call2356 = callmethodChecked(call2355, "padl", [3], call2353, new GraceNum(4), string2354);
                                                                              var string2358 = new GraceString(" (U+");
                                                                              var call2360 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                              var string2362 = new GraceString("");
                                                                              var opresult2364 = callmethodChecked(string2362, "++", [1], call2360);
                                                                              var opresult2366 = callmethodChecked(opresult2364, "++", [1], string2358);
                                                                              var opresult2368 = callmethodChecked(opresult2366, "++", [1], call2356);
                                                                              var opresult2370 = callmethodChecked(opresult2368, "++", [1], string2351);
                                                                              var opresult2372 = callmethodChecked(opresult2370, "++", [1], string2349);
                                                                              setLineNumber(835);    // compilenode call
                                                                              onSelf = true;
                                                                              var call2373 = callmethodChecked(this, "lineNumber", [0]);
                                                                              onSelf = true;
                                                                              var call2374 = callmethodChecked(this, "linePosition", [0]);
                                                                              onSelf = true;
                                                                              var call2375 = callmethodChecked(this, "linePosition", [0]);
                                                                              setLineNumber(833);    // compilenode identifier
                                                                              var call2376 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult2372, call2373, call2374, call2375);
                                                                              if2344 = call2376;
                                                                            }
                                                                            if2340 = if2344;
                                                                          }
                                                                          if2336 = if2340;
                                                                        }
                                                                        if2332 = if2336;
                                                                      }
                                                                      if2329 = if2332;
                                                                    }
                                                                    if2326 = if2329;
                                                                  }
                                                                  if2322 = if2326;
                                                                }
                                                                if2317 = if2322;
                                                              }
                                                              if2124 = if2317;
                                                            }
                                                            if2123 = if2124;
                                                          }
                                                          var if2377 = GraceDone;
                                                          setLineNumber(845);    // compilenode string
                                                          var string2378 = new GraceString("\"");
                                                          var opresult2381 = callmethodChecked(var_mode, "==", [1], string2378);
                                                          if (Grace_isTrue(opresult2381)) {
                                                            var if2382 = GraceDone;
                                                            setLineNumber(846);    // compilenode string
                                                            var string2383 = new GraceString("\"");
                                                            var opresult2386 = callmethodChecked(var_c, "==", [1], string2383);
                                                            if (Grace_isTrue(opresult2386)) {
                                                              var if2387 = GraceDone;
                                                              setLineNumber(847);    // compilenode identifier
                                                              var call2388 = callmethodChecked(var_escaped, "not", [0]);
                                                              if (Grace_isTrue(call2388)) {
                                                                setLineNumber(849);    // compilenode string
                                                                var string2389 = new GraceString("n");
                                                                var_newmode = string2389;
                                                                setLineNumber(850);    // compilenode identifier
                                                                var_inStr = GraceFalse;
                                                                var if2390 = GraceDone;
                                                                setLineNumber(851);    // compilenode identifier
                                                                if (Grace_isTrue(var_interpString)) {
                                                                  setLineNumber(852);    // compilenode identifier
                                                                  onSelf = true;
                                                                  var call2391 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                  setLineNumber(853);    // compilenode string
                                                                  var string2392 = new GraceString(")");
                                                                  var string2393 = new GraceString(")");
                                                                  onSelf = true;
                                                                  var call2394 = callmethodChecked(this, "modechange", [3], var_tokens, string2392, string2393);
                                                                  setLineNumber(854);    // compilenode identifier
                                                                  var_mode = var_newmode;
                                                                  setLineNumber(855);    // compilenode identifier
                                                                  var_interpString = GraceFalse;
                                                                  if2390 = GraceDone;
                                                                }
                                                                if2387 = if2390;
                                                              }
                                                              if2382 = if2387;
                                                            }
                                                            if2377 = if2382;
                                                          } else {
                                                            var if2395 = GraceDone;
                                                            setLineNumber(859);    // compilenode string
                                                            var string2396 = new GraceString("q");
                                                            var opresult2399 = callmethodChecked(var_mode, "==", [1], string2396);
                                                            if (Grace_isTrue(opresult2399)) {
                                                              var if2400 = GraceDone;
                                                              setLineNumber(860);    // compilenode string
                                                              var string2401 = new GraceString("\u203a");
                                                              var opresult2404 = callmethodChecked(var_c, "==", [1], string2401);
                                                              if (Grace_isTrue(opresult2404)) {
                                                                setLineNumber(862);    // compilenode string
                                                                var string2405 = new GraceString("n");
                                                                var_newmode = string2405;
                                                                setLineNumber(863);    // compilenode identifier
                                                                var_inStr = GraceFalse;
                                                                if2400 = GraceDone;
                                                              }
                                                              if2395 = if2400;
                                                            }
                                                            if2377 = if2395;
                                                          }
                                                          var if2406 = GraceDone;
                                                          setLineNumber(866);    // compilenode identifier
                                                          var opresult2409 = callmethodChecked(var_newmode, "\u2260", [1], var_mode);
                                                          if (Grace_isTrue(opresult2409)) {
                                                            setLineNumber(869);    // compilenode identifier
                                                            onSelf = true;
                                                            var call2410 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                            var if2411 = GraceDone;
                                                            setLineNumber(870);    // compilenode identifier
                                                            var opresult2414 = callmethodChecked(var_interpdepth, ">", [1], new GraceNum(0));
                                                            if (Grace_isTrue(opresult2414)) {
                                                              var if2415 = GraceDone;
                                                              setLineNumber(871);    // compilenode string
                                                              var string2416 = new GraceString("}");
                                                              var opresult2419 = callmethodChecked(var_newmode, "==", [1], string2416);
                                                              if (Grace_isTrue(opresult2419)) {
                                                                var if2420 = GraceDone;
                                                                setLineNumber(874);    // compilenode string
                                                                var string2421 = new GraceString("lbrace");
                                                                var call2423 = callmethodChecked(var_tokens, "last", [0]);
                                                                var call2424 = callmethodChecked(call2423, "kind", [0]);
                                                                var opresult2426 = callmethodChecked(call2424, "==", [1], string2421);
                                                                if (Grace_isTrue(opresult2426)) {
                                                                  setLineNumber(875);    // compilenode identifier
                                                                  var call2427 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                  var call2428 = callmethodChecked(call2427, "new", [0]);
                                                                  var var_suggestion = call2428;
                                                                  setLineNumber(876);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2430 = callmethodChecked(this, "linePosition", [0]);
                                                                  var diff2432 = callmethodChecked(call2430, "-", [1], new GraceNum(1));
                                                                  onSelf = true;
                                                                  var call2433 = callmethodChecked(this, "linePosition", [0]);
                                                                  onSelf = true;
                                                                  var call2434 = callmethodChecked(this, "lineNumber", [0]);
                                                                  var call2435 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff2432, call2433, call2434);
                                                                  setLineNumber(877);    // compilenode string
                                                                  var string2436 = new GraceString("a string interpolation cannot be empty.");
                                                                  setLineNumber(878);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2437 = callmethodChecked(this, "lineNumber", [0]);
                                                                  var call2438 = callmethodChecked(var_tokens, "last", [0]);
                                                                  var call2439 = callmethodChecked(call2438, "linePos", [0]);
                                                                  onSelf = true;
                                                                  var call2440 = callmethodChecked(this, "linePosition", [0]);
                                                                  setLineNumber(877);    // compilenode identifier
                                                                  var call2441 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], string2436, call2437, call2439, call2440, var_suggestion);
                                                                  if2420 = call2441;
                                                                }
                                                                setLineNumber(880);    // compilenode string
                                                                var string2442 = new GraceString(")");
                                                                var string2443 = new GraceString(")");
                                                                onSelf = true;
                                                                var call2444 = callmethodChecked(this, "modechange", [3], var_tokens, string2442, string2443);
                                                                setLineNumber(881);    // compilenode string
                                                                var string2445 = new GraceString("o");
                                                                var string2446 = new GraceString("++");
                                                                onSelf = true;
                                                                var call2447 = callmethodChecked(this, "modechange", [3], var_tokens, string2445, string2446);
                                                                setLineNumber(882);    // compilenode string
                                                                var string2448 = new GraceString("\"");
                                                                var_newmode = string2448;
                                                                setLineNumber(883);    // compilenode identifier
                                                                var_inStr = GraceTrue;
                                                                setLineNumber(884);    // compilenode identifier
                                                                var diff2451 = callmethodChecked(var_interpdepth, "-", [1], new GraceNum(1));
                                                                var_interpdepth = diff2451;
                                                                if2415 = GraceDone;
                                                              }
                                                              if2411 = if2415;
                                                            }
                                                            setLineNumber(887);    // compilenode identifier
                                                            var_mode = var_newmode;
                                                            var if2452 = GraceDone;
                                                            setLineNumber(888);    // compilenode identifier
                                                            if (Grace_isTrue(var_inStr)) {
                                                              setLineNumber(892);    // compilenode string
                                                              var string2453 = new GraceString("");
                                                              var_accum = string2453;
                                                              if2452 = GraceDone;
                                                            } else {
                                                              setLineNumber(894);    // compilenode identifier
                                                              var_accum = var_c;
                                                              if2452 = GraceDone;
                                                            }
                                                            var if2454 = GraceDone;
                                                            setLineNumber(896);    // compilenode identifier
                                                            var call2455 = callmethodChecked(var_brackets, "match", [1], var_mode);
                                                            if (Grace_isTrue(call2455)) {
                                                              setLineNumber(897);    // compilenode identifier
                                                              onSelf = true;
                                                              var call2456 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                              setLineNumber(898);    // compilenode string
                                                              var string2457 = new GraceString("e");
                                                              var_mode = string2457;
                                                              setLineNumber(899);    // compilenode identifier
                                                              var_newmode = var_mode;
                                                              setLineNumber(900);    // compilenode string
                                                              var string2458 = new GraceString("");
                                                              var_accum = string2458;
                                                              if2454 = GraceDone;
                                                            }
                                                            if2406 = if2454;
                                                          } else {
                                                            var if2459 = GraceDone;
                                                            setLineNumber(902);    // compilenode string
                                                            var string2460 = new GraceString("\"");
                                                            var opresult2463 = callmethodChecked(var_mode, "==", [1], string2460);
                                                            if (Grace_isTrue(opresult2463)) {
                                                              var if2464 = GraceDone;
                                                              setLineNumber(903);    // compilenode string
                                                              var string2465 = new GraceString("\n");
                                                              var opresult2468 = callmethodChecked(var_c, "==", [1], string2465);
                                                              if (Grace_isTrue(opresult2468)) {
                                                                var if2469 = GraceDone;
                                                                setLineNumber(904);    // compilenode identifier
                                                                var opresult2472 = callmethodChecked(var_interpdepth, ">", [1], new GraceNum(0));
                                                                if (Grace_isTrue(opresult2472)) {
                                                                  setLineNumber(906);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2473 = callmethodChecked(this, "lineNumber", [0]);
                                                                  var var_line = call2473;
                                                                  setLineNumber(907);    // compilenode identifier
                                                                  var call2474 = callmethodChecked(var_util, "lines", [0]);
                                                                  var call2475 = callmethodChecked(call2474, "at", [1], var_line);
                                                                  var call2476 = callmethodChecked(call2475, "size", [0]);
                                                                  var var_i = call2476;
                                                                  setLineNumber(908);    // compilenode block
                                                                  var block2477 = new GraceBlock(this, 908, 0);
                                                                  block2477.real = function() {
                                                                    var string2478 = new GraceString("{");
                                                                    var call2480 = callmethodChecked(var_util, "lines", [0]);
                                                                    var call2481 = callmethodChecked(call2480, "at", [1], var_line);
                                                                    var call2482 = callmethodChecked(call2481, "at", [1], var_i);
                                                                    var opresult2484 = callmethodChecked(call2482, "\u2260", [1], string2478);
                                                                    return opresult2484;
                                                                  };
                                                                  var block2485 = new GraceBlock(this, 908, 0);
                                                                  block2485.real = function() {
                                                                    setLineNumber(909);    // compilenode identifier
                                                                    var diff2488 = callmethodChecked(var_i, "-", [1], new GraceNum(1));
                                                                    var_i = diff2488;
                                                                    var if2489 = GraceDone;
                                                                    setLineNumber(910);    // compilenode identifier
                                                                    var opresult2492 = callmethodChecked(var_i, "==", [1], new GraceNum(0));
                                                                    if (Grace_isTrue(opresult2492)) {
                                                                      setLineNumber(911);    // compilenode identifier
                                                                      var diff2495 = callmethodChecked(var_line, "-", [1], new GraceNum(1));
                                                                      onSelf = true;
                                                                      var call2496 = callmethodChecked(this, "lineNumber:=", [1], diff2495);
                                                                      setLineNumber(912);    // compilenode identifier
                                                                      var call2497 = callmethodChecked(var_util, "lines", [0]);
                                                                      var call2498 = callmethodChecked(call2497, "at", [1], var_line);
                                                                      var call2499 = callmethodChecked(call2498, "size", [0]);
                                                                      var_i = call2499;
                                                                      if2489 = GraceDone;
                                                                    }
                                                                    return if2489;
                                                                  };
                                                                  var call2500 = callmethodChecked(var_prelude, "while()do", [1, 1], block2477, block2485);
                                                                  setLineNumber(915);    // compilenode array
                                                                  var array2501 = new PrimitiveGraceList([]);
                                                                  var var_suggestions = array2501;
                                                                  setLineNumber(916);    // compilenode identifier
                                                                  var call2502 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                  var call2503 = callmethodChecked(call2502, "new", [0]);
                                                                  var var_suggestion = call2503;
                                                                  setLineNumber(917);    // compilenode string
                                                                  var string2504 = new GraceString("\\");
                                                                  var call2505 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string2504, var_i, var_line);
                                                                  setLineNumber(918);    // compilenode identifier
                                                                  var call2506 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                  var if2507 = GraceDone;
                                                                  setLineNumber(919);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2509 = callmethodChecked(this, "linePosition", [0]);
                                                                  var diff2511 = callmethodChecked(call2509, "-", [1], new GraceNum(2));
                                                                  var opresult2514 = callmethodChecked(var_i, "==", [1], diff2511);
                                                                  onSelf = true;
                                                                  var call2516 = callmethodChecked(this, "lineNumber", [0]);
                                                                  var opresult2519 = callmethodChecked(var_line, "==", [1], call2516);
                                                                  var opresult2521 = callmethodChecked(opresult2519, "&&", [1], opresult2514);
                                                                  if (Grace_isTrue(opresult2521)) {
                                                                    setLineNumber(920);    // compilenode string
                                                                    var string2522 = new GraceString("for a '{' character in a string use '\\{'.");
                                                                    var call2523 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestions", [1, 2, 1], string2522, var_line, var_i, var_suggestions);
                                                                    if2507 = call2523;
                                                                  } else {
                                                                    setLineNumber(923);    // compilenode identifier
                                                                    var call2524 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                    var call2525 = callmethodChecked(call2524, "new", [0]);
                                                                    var_suggestion = call2525;
                                                                    setLineNumber(924);    // compilenode string
                                                                    var string2526 = new GraceString("}");
                                                                    var call2528 = callmethodChecked(var_accum, "size", [0]);
                                                                    onSelf = true;
                                                                    var call2530 = callmethodChecked(this, "linePosition", [0]);
                                                                    var diff2532 = callmethodChecked(call2530, "-", [1], call2528);
                                                                    var diff2534 = callmethodChecked(diff2532, "-", [1], new GraceNum(1));
                                                                    onSelf = true;
                                                                    var call2535 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var call2536 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string2526, diff2534, call2535);
                                                                    setLineNumber(925);    // compilenode identifier
                                                                    var call2537 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                    setLineNumber(926);    // compilenode string
                                                                    var string2538 = new GraceString("a string interpolation must end with a '}'. For a '{' character in a string use '\\{'.");
                                                                    setLineNumber(927);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2539 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var call2541 = callmethodChecked(var_accum, "size", [0]);
                                                                    onSelf = true;
                                                                    var call2543 = callmethodChecked(this, "linePosition", [0]);
                                                                    var diff2545 = callmethodChecked(call2543, "-", [1], call2541);
                                                                    var diff2547 = callmethodChecked(diff2545, "-", [1], new GraceNum(1));
                                                                    setLineNumber(926);    // compilenode identifier
                                                                    var call2548 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestions", [1, 2, 1], string2538, call2539, diff2547, var_suggestions);
                                                                    if2507 = call2548;
                                                                  }
                                                                  if2469 = if2507;
                                                                } else {
                                                                  setLineNumber(930);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2549 = callmethodChecked(this, "lineNumber", [0]);
                                                                  var call2550 = callmethodChecked(var_util, "lines", [0]);
                                                                  var call2551 = callmethodChecked(call2550, "at", [1], call2549);
                                                                  var var_errorLine = call2551;
                                                                  var if2552 = GraceDone;
                                                                  setLineNumber(931);    // compilenode call
                                                                  onSelf = true;
                                                                  var call2554 = callmethodChecked(this, "lineNumber", [0]);
                                                                  var opresult2556 = callmethodChecked(call2554, "+", [1], new GraceNum(1));
                                                                  var call2558 = callmethodChecked(var_util, "lines", [0]);
                                                                  var call2559 = callmethodChecked(call2558, "size", [0]);
                                                                  var opresult2561 = callmethodChecked(call2559, "\u2265", [1], opresult2556);
                                                                  if (Grace_isTrue(opresult2561)) {
                                                                    setLineNumber(932);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2563 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var opresult2565 = callmethodChecked(call2563, "+", [1], new GraceNum(1));
                                                                    var call2566 = callmethodChecked(var_util, "lines", [0]);
                                                                    var call2567 = callmethodChecked(call2566, "at", [1], opresult2565);
                                                                    if2552 = call2567;
                                                                  } else {
                                                                    setLineNumber(934);    // compilenode string
                                                                    var string2568 = new GraceString("");
                                                                    if2552 = string2568;
                                                                  }
                                                                  var var_nextLine = if2552;
                                                                  setLineNumber(937);    // compilenode num
                                                                  var var_i = new GraceNum(1);
                                                                  setLineNumber(938);    // compilenode num
                                                                  var var_count = new GraceNum(0);
                                                                  setLineNumber(939);    // compilenode block
                                                                  var block2569 = new GraceBlock(this, 939, 0);
                                                                  block2569.real = function() {
                                                                    var call2570 = callmethodChecked(var_nextLine, "size", [0]);
                                                                    var opresult2573 = callmethodChecked(var_i, "\u2264", [1], call2570);
                                                                    return opresult2573;
                                                                  };
                                                                  var block2574 = new GraceBlock(this, 939, 0);
                                                                  block2574.real = function() {
                                                                    var if2575 = GraceDone;
                                                                    setLineNumber(940);    // compilenode string
                                                                    var string2576 = new GraceString("\"");
                                                                    var call2578 = callmethodChecked(var_nextLine, "at", [1], var_i);
                                                                    var opresult2580 = callmethodChecked(call2578, "==", [1], string2576);
                                                                    if (Grace_isTrue(opresult2580)) {
                                                                      var opresult2583 = callmethodChecked(var_count, "+", [1], new GraceNum(1));
                                                                      var_count = opresult2583;
                                                                      if2575 = GraceDone;
                                                                    } else {
                                                                      var if2584 = GraceDone;
                                                                      setLineNumber(941);    // compilenode string
                                                                      var string2585 = new GraceString("\\");
                                                                      var call2587 = callmethodChecked(var_nextLine, "at", [1], var_i);
                                                                      var opresult2589 = callmethodChecked(call2587, "==", [1], string2585);
                                                                      if (Grace_isTrue(opresult2589)) {
                                                                        var opresult2592 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                                        var_i = opresult2592;
                                                                        if2584 = GraceDone;
                                                                      }
                                                                      if2575 = if2584;
                                                                    }
                                                                    setLineNumber(942);    // compilenode identifier
                                                                    var opresult2595 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                                    var_i = opresult2595;
                                                                    return GraceDone;
                                                                  };
                                                                  var call2596 = callmethodChecked(var_prelude, "while()do", [1, 1], block2569, block2574);
                                                                  var if2597 = GraceDone;
                                                                  setLineNumber(944);    // compilenode identifier
                                                                  var modulus2601 = callmethodChecked(var_count, "%", [1], new GraceNum(2));
                                                                  var opresult2603 = callmethodChecked(modulus2601, "==", [1], new GraceNum(1));
                                                                  if (Grace_isTrue(opresult2603)) {
                                                                    setLineNumber(945);    // compilenode array
                                                                    var array2604 = new PrimitiveGraceList([]);
                                                                    var var_suggestions = array2604;
                                                                    setLineNumber(946);    // compilenode identifier
                                                                    var call2605 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                    var call2606 = callmethodChecked(call2605, "new", [0]);
                                                                    var var_suggestion = call2606;
                                                                    setLineNumber(947);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2607 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var opresult2610 = callmethodChecked(var_errorLine, "++", [1], var_nextLine);
                                                                    var call2611 = callmethodChecked(var_suggestion, "addLine", [2], call2607, opresult2610);
                                                                    setLineNumber(948);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2613 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var opresult2615 = callmethodChecked(call2613, "+", [1], new GraceNum(1));
                                                                    var string2616 = new GraceString("");
                                                                    var call2617 = callmethodChecked(var_suggestion, "addLine", [2], opresult2615, string2616);
                                                                    setLineNumber(949);    // compilenode identifier
                                                                    var call2618 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                    setLineNumber(950);    // compilenode identifier
                                                                    var call2619 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                    var call2620 = callmethodChecked(call2619, "new", [0]);
                                                                    var_suggestion = call2620;
                                                                    setLineNumber(951);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2621 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var string2622 = new GraceString("\"");
                                                                    var opresult2625 = callmethodChecked(var_errorLine, "++", [1], string2622);
                                                                    var call2626 = callmethodChecked(var_suggestion, "addLine", [2], call2621, opresult2625);
                                                                    setLineNumber(952);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2628 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var opresult2630 = callmethodChecked(call2628, "+", [1], new GraceNum(1));
                                                                    var string2632 = new GraceString("    ++ \"");
                                                                    var opresult2634 = callmethodChecked(string2632, "++", [1], var_nextLine);
                                                                    var call2635 = callmethodChecked(var_suggestion, "addLine", [2], opresult2630, opresult2634);
                                                                    setLineNumber(953);    // compilenode identifier
                                                                    var call2636 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                    setLineNumber(954);    // compilenode identifier
                                                                    var call2637 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                    var call2638 = callmethodChecked(call2637, "new", [0]);
                                                                    var_suggestion = call2638;
                                                                    setLineNumber(955);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2639 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var string2641 = new GraceString("\\n");
                                                                    var opresult2644 = callmethodChecked(var_errorLine, "++", [1], string2641);
                                                                    var opresult2646 = callmethodChecked(opresult2644, "++", [1], var_nextLine);
                                                                    var call2647 = callmethodChecked(var_suggestion, "addLine", [2], call2639, opresult2646);
                                                                    setLineNumber(956);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2649 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var opresult2651 = callmethodChecked(call2649, "+", [1], new GraceNum(1));
                                                                    var string2652 = new GraceString("");
                                                                    var call2653 = callmethodChecked(var_suggestion, "addLine", [2], opresult2651, string2652);
                                                                    setLineNumber(957);    // compilenode identifier
                                                                    var call2654 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                    setLineNumber(958);    // compilenode string
                                                                    var string2655 = new GraceString("a string must be terminated by a \" before the end of the line. To insert a newline in a string, use '\\n'. To split a string over multiple lines, use '++' to join strings together.");
                                                                    setLineNumber(959);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2656 = callmethodChecked(this, "lineNumber", [0]);
                                                                    onSelf = true;
                                                                    var call2657 = callmethodChecked(this, "linePosition", [0]);
                                                                    onSelf = true;
                                                                    var call2658 = callmethodChecked(this, "linePosition", [0]);
                                                                    setLineNumber(958);    // compilenode identifier
                                                                    var call2659 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], string2655, call2656, call2657, call2658, var_suggestions);
                                                                    if2597 = call2659;
                                                                  } else {
                                                                    setLineNumber(962);    // compilenode identifier
                                                                    var call2660 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                    var call2661 = callmethodChecked(call2660, "new", [0]);
                                                                    var var_suggestion = call2661;
                                                                    setLineNumber(963);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2662 = callmethodChecked(this, "lineNumber", [0]);
                                                                    var string2663 = new GraceString("\"");
                                                                    var opresult2666 = callmethodChecked(var_errorLine, "++", [1], string2663);
                                                                    var call2667 = callmethodChecked(var_suggestion, "addLine", [2], call2662, opresult2666);
                                                                    setLineNumber(965);    // compilenode string
                                                                    var string2668 = new GraceString("by a \" before the end of the line.");
                                                                    setLineNumber(964);    // compilenode string
                                                                    var string2670 = new GraceString("a string must be terminated ");
                                                                    var opresult2672 = callmethodChecked(string2670, "++", [1], string2668);
                                                                    setLineNumber(966);    // compilenode call
                                                                    onSelf = true;
                                                                    var call2673 = callmethodChecked(this, "lineNumber", [0]);
                                                                    onSelf = true;
                                                                    var call2674 = callmethodChecked(this, "linePosition", [0]);
                                                                    setLineNumber(964);    // compilenode identifier
                                                                    var call2675 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], opresult2672, call2673, call2674, var_suggestion);
                                                                    if2597 = call2675;
                                                                  }
                                                                  if2469 = if2597;
                                                                }
                                                                if2464 = if2469;
                                                              }
                                                              var if2676 = GraceDone;
                                                              setLineNumber(971);    // compilenode identifier
                                                              if (Grace_isTrue(var_escaped)) {
                                                                var if2677 = GraceDone;
                                                                setLineNumber(972);    // compilenode string
                                                                var string2678 = new GraceString("n");
                                                                var opresult2681 = callmethodChecked(var_c, "==", [1], string2678);
                                                                if (Grace_isTrue(opresult2681)) {
                                                                  setLineNumber(974);    // compilenode string
                                                                  var string2682 = new GraceString("\n");
                                                                  var opresult2685 = callmethodChecked(var_accum, "++", [1], string2682);
                                                                  var_accum = opresult2685;
                                                                  if2677 = GraceDone;
                                                                } else {
                                                                  var if2686 = GraceDone;
                                                                  setLineNumber(975);    // compilenode string
                                                                  var string2687 = new GraceString("u");
                                                                  var opresult2690 = callmethodChecked(var_c, "==", [1], string2687);
                                                                  if (Grace_isTrue(opresult2690)) {
                                                                    setLineNumber(978);    // compilenode num
                                                                    var_unichars = new GraceNum(4);
                                                                    setLineNumber(979);    // compilenode num
                                                                    var_codepoint = new GraceNum(0);
                                                                    if2686 = GraceDone;
                                                                  } else {
                                                                    var if2691 = GraceDone;
                                                                    setLineNumber(980);    // compilenode string
                                                                    var string2692 = new GraceString("U");
                                                                    var opresult2695 = callmethodChecked(var_c, "==", [1], string2692);
                                                                    if (Grace_isTrue(opresult2695)) {
                                                                      setLineNumber(983);    // compilenode num
                                                                      var_unichars = new GraceNum(6);
                                                                      setLineNumber(984);    // compilenode num
                                                                      var_codepoint = new GraceNum(0);
                                                                      if2691 = GraceDone;
                                                                    } else {
                                                                      var if2696 = GraceDone;
                                                                      setLineNumber(985);    // compilenode string
                                                                      var string2697 = new GraceString("t");
                                                                      var opresult2700 = callmethodChecked(var_c, "==", [1], string2697);
                                                                      if (Grace_isTrue(opresult2700)) {
                                                                        setLineNumber(987);    // compilenode string
                                                                        var string2701 = new GraceString("\u0009");
                                                                        var opresult2704 = callmethodChecked(var_accum, "++", [1], string2701);
                                                                        var_accum = opresult2704;
                                                                        if2696 = GraceDone;
                                                                      } else {
                                                                        var if2705 = GraceDone;
                                                                        setLineNumber(988);    // compilenode string
                                                                        var string2706 = new GraceString("r");
                                                                        var opresult2709 = callmethodChecked(var_c, "==", [1], string2706);
                                                                        if (Grace_isTrue(opresult2709)) {
                                                                          setLineNumber(990);    // compilenode string
                                                                          var string2710 = new GraceString("\u000d");
                                                                          var opresult2713 = callmethodChecked(var_accum, "++", [1], string2710);
                                                                          var_accum = opresult2713;
                                                                          if2705 = GraceDone;
                                                                        } else {
                                                                          var if2714 = GraceDone;
                                                                          setLineNumber(991);    // compilenode string
                                                                          var string2715 = new GraceString("b");
                                                                          var opresult2718 = callmethodChecked(var_c, "==", [1], string2715);
                                                                          if (Grace_isTrue(opresult2718)) {
                                                                            setLineNumber(993);    // compilenode string
                                                                            var string2719 = new GraceString("\u0008");
                                                                            var opresult2722 = callmethodChecked(var_accum, "++", [1], string2719);
                                                                            var_accum = opresult2722;
                                                                            if2714 = GraceDone;
                                                                          } else {
                                                                            var if2723 = GraceDone;
                                                                            setLineNumber(994);    // compilenode string
                                                                            var string2724 = new GraceString("l");
                                                                            var opresult2727 = callmethodChecked(var_c, "==", [1], string2724);
                                                                            if (Grace_isTrue(opresult2727)) {
                                                                              setLineNumber(996);    // compilenode string
                                                                              var string2728 = new GraceString("\u2028");
                                                                              var opresult2731 = callmethodChecked(var_accum, "++", [1], string2728);
                                                                              var_accum = opresult2731;
                                                                              if2723 = GraceDone;
                                                                            } else {
                                                                              var if2732 = GraceDone;
                                                                              setLineNumber(997);    // compilenode string
                                                                              var string2733 = new GraceString("f");
                                                                              var opresult2736 = callmethodChecked(var_c, "==", [1], string2733);
                                                                              if (Grace_isTrue(opresult2736)) {
                                                                                setLineNumber(999);    // compilenode string
                                                                                var string2737 = new GraceString("\u000c");
                                                                                var opresult2740 = callmethodChecked(var_accum, "++", [1], string2737);
                                                                                var_accum = opresult2740;
                                                                                if2732 = GraceDone;
                                                                              } else {
                                                                                var if2741 = GraceDone;
                                                                                setLineNumber(1000);    // compilenode string
                                                                                var string2742 = new GraceString("e");
                                                                                var opresult2745 = callmethodChecked(var_c, "==", [1], string2742);
                                                                                if (Grace_isTrue(opresult2745)) {
                                                                                  setLineNumber(1002);    // compilenode string
                                                                                  var string2746 = new GraceString("\u001b");
                                                                                  var opresult2749 = callmethodChecked(var_accum, "++", [1], string2746);
                                                                                  var_accum = opresult2749;
                                                                                  if2741 = GraceDone;
                                                                                } else {
                                                                                  var if2750 = GraceDone;
                                                                                  setLineNumber(1003);    // compilenode string
                                                                                  var string2751 = new GraceString("_");
                                                                                  var opresult2754 = callmethodChecked(var_c, "==", [1], string2751);
                                                                                  if (Grace_isTrue(opresult2754)) {
                                                                                    setLineNumber(1005);    // compilenode string
                                                                                    var string2755 = new GraceString("\u00a0");
                                                                                    var opresult2758 = callmethodChecked(var_accum, "++", [1], string2755);
                                                                                    var_accum = opresult2758;
                                                                                    if2750 = GraceDone;
                                                                                  } else {
                                                                                    setLineNumber(1009);    // compilenode identifier
                                                                                    var opresult2761 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                                    var_accum = opresult2761;
                                                                                    if2750 = GraceDone;
                                                                                  }
                                                                                  if2741 = if2750;
                                                                                }
                                                                                if2732 = if2741;
                                                                              }
                                                                              if2723 = if2732;
                                                                            }
                                                                            if2714 = if2723;
                                                                          }
                                                                          if2705 = if2714;
                                                                        }
                                                                        if2696 = if2705;
                                                                      }
                                                                      if2691 = if2696;
                                                                    }
                                                                    if2686 = if2691;
                                                                  }
                                                                  if2677 = if2686;
                                                                }
                                                                setLineNumber(1011);    // compilenode identifier
                                                                var_escaped = GraceFalse;
                                                                if2676 = GraceDone;
                                                              } else {
                                                                var if2762 = GraceDone;
                                                                setLineNumber(1012);    // compilenode string
                                                                var string2763 = new GraceString("\\");
                                                                var opresult2766 = callmethodChecked(var_c, "==", [1], string2763);
                                                                if (Grace_isTrue(opresult2766)) {
                                                                  setLineNumber(1014);    // compilenode identifier
                                                                  var_escaped = GraceTrue;
                                                                  if2762 = GraceDone;
                                                                } else {
                                                                  var if2767 = GraceDone;
                                                                  setLineNumber(1015);    // compilenode identifier
                                                                  var opresult2770 = callmethodChecked(var_unichars, ">", [1], new GraceNum(0));
                                                                  if (Grace_isTrue(opresult2770)) {
                                                                    setLineNumber(1020);    // compilenode identifier
                                                                    var diff2773 = callmethodChecked(var_unichars, "-", [1], new GraceNum(1));
                                                                    var_unichars = diff2773;
                                                                    setLineNumber(1021);    // compilenode identifier
                                                                    var prod2776 = callmethodChecked(var_codepoint, "*", [1], new GraceNum(16));
                                                                    var_codepoint = prod2776;
                                                                    setLineNumber(1022);    // compilenode identifier
                                                                    onSelf = true;
                                                                    var call2777 = callmethodChecked(this, "hexdecchar", [1], var_c);
                                                                    var opresult2780 = callmethodChecked(var_codepoint, "+", [1], call2777);
                                                                    var_codepoint = opresult2780;
                                                                    var if2781 = GraceDone;
                                                                    setLineNumber(1023);    // compilenode identifier
                                                                    var opresult2784 = callmethodChecked(var_unichars, "==", [1], new GraceNum(0));
                                                                    if (Grace_isTrue(opresult2784)) {
                                                                      setLineNumber(1026);    // compilenode identifier
                                                                      var call2785 = callmethodChecked(var_unicode, "create", [1], var_codepoint);
                                                                      var opresult2788 = callmethodChecked(var_accum, "++", [1], call2785);
                                                                      var_accum = opresult2788;
                                                                      if2781 = GraceDone;
                                                                    }
                                                                    if2767 = if2781;
                                                                  } else {
                                                                    var if2789 = GraceDone;
                                                                    setLineNumber(1028);    // compilenode string
                                                                    var string2790 = new GraceString("{");
                                                                    var opresult2793 = callmethodChecked(var_c, "==", [1], string2790);
                                                                    if (Grace_isTrue(opresult2793)) {
                                                                      var if2794 = GraceDone;
                                                                      setLineNumber(1029);    // compilenode identifier
                                                                      var call2795 = callmethodChecked(var_interpString, "not", [0]);
                                                                      if (Grace_isTrue(call2795)) {
                                                                        setLineNumber(1030);    // compilenode string
                                                                        var string2796 = new GraceString("(");
                                                                        var string2797 = new GraceString("(");
                                                                        onSelf = true;
                                                                        var call2798 = callmethodChecked(this, "modechange", [3], var_tokens, string2796, string2797);
                                                                        setLineNumber(1031);    // compilenode identifier
                                                                        var_interpString = GraceTrue;
                                                                        if2794 = GraceDone;
                                                                      }
                                                                      setLineNumber(1033);    // compilenode identifier
                                                                      onSelf = true;
                                                                      var call2799 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                      setLineNumber(1034);    // compilenode string
                                                                      var string2800 = new GraceString("o");
                                                                      var string2801 = new GraceString("++");
                                                                      onSelf = true;
                                                                      var call2802 = callmethodChecked(this, "modechange", [3], var_tokens, string2800, string2801);
                                                                      setLineNumber(1035);    // compilenode string
                                                                      var string2803 = new GraceString("(");
                                                                      var string2804 = new GraceString("(");
                                                                      onSelf = true;
                                                                      var call2805 = callmethodChecked(this, "modechange", [3], var_tokens, string2803, string2804);
                                                                      setLineNumber(1036);    // compilenode string
                                                                      var string2806 = new GraceString("n");
                                                                      var_mode = string2806;
                                                                      setLineNumber(1037);    // compilenode string
                                                                      var string2807 = new GraceString("n");
                                                                      var_newmode = string2807;
                                                                      setLineNumber(1038);    // compilenode string
                                                                      var string2808 = new GraceString("");
                                                                      var_accum = string2808;
                                                                      setLineNumber(1039);    // compilenode identifier
                                                                      var_inStr = GraceFalse;
                                                                      setLineNumber(1040);    // compilenode identifier
                                                                      var opresult2811 = callmethodChecked(var_interpdepth, "+", [1], new GraceNum(1));
                                                                      var_interpdepth = opresult2811;
                                                                      if2789 = GraceDone;
                                                                    } else {
                                                                      setLineNumber(1042);    // compilenode identifier
                                                                      var opresult2814 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                      var_accum = opresult2814;
                                                                      if2789 = GraceDone;
                                                                    }
                                                                    if2767 = if2789;
                                                                  }
                                                                  if2762 = if2767;
                                                                }
                                                                if2676 = if2762;
                                                              }
                                                              if2459 = if2676;
                                                            } else {
                                                              var if2815 = GraceDone;
                                                              setLineNumber(1044);    // compilenode string
                                                              var string2816 = new GraceString("\n");
                                                              var opresult2819 = callmethodChecked(var_c, "==", [1], string2816);
                                                              if (Grace_isTrue(opresult2819)) {
                                                                setLineNumber(1045);    // compilenode identifier
                                                                var_newlineFound = GraceTrue;
                                                                var if2820 = GraceDone;
                                                                setLineNumber(1046);    // compilenode string
                                                                var string2821 = new GraceString("q");
                                                                var opresult2824 = callmethodChecked(var_mode, "==", [1], string2821);
                                                                if (Grace_isTrue(opresult2824)) {
                                                                  setLineNumber(1047);    // compilenode identifier
                                                                  var opresult2827 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                  var_accum = opresult2827;
                                                                  if2820 = GraceDone;
                                                                } else {
                                                                  setLineNumber(1050);    // compilenode identifier
                                                                  onSelf = true;
                                                                  var call2828 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                  setLineNumber(1051);    // compilenode string
                                                                  var string2829 = new GraceString("d");
                                                                  var_mode = string2829;
                                                                  setLineNumber(1052);    // compilenode string
                                                                  var string2830 = new GraceString("d");
                                                                  var_newmode = string2830;
                                                                  setLineNumber(1053);    // compilenode string
                                                                  var string2831 = new GraceString("");
                                                                  var_accum = string2831;
                                                                  if2820 = GraceDone;
                                                                }
                                                                if2815 = if2820;
                                                              } else {
                                                                setLineNumber(1056);    // compilenode identifier
                                                                var opresult2834 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                var_accum = opresult2834;
                                                                if2815 = GraceDone;
                                                              }
                                                              if2459 = if2815;
                                                            }
                                                            if2406 = if2459;
                                                          }
                                                          var if2835 = GraceDone;
                                                          setLineNumber(1058);    // compilenode string
                                                          var string2836 = new GraceString("...");
                                                          var opresult2839 = callmethodChecked(var_accum, "==", [1], string2836);
                                                          if (Grace_isTrue(opresult2839)) {
                                                            var if2840 = GraceDone;
                                                            setLineNumber(1059);    // compilenode string
                                                            var string2841 = new GraceString("o");
                                                            var opresult2844 = callmethodChecked(var_mode, "==", [1], string2841);
                                                            if (Grace_isTrue(opresult2844)) {
                                                              setLineNumber(1060);    // compilenode string
                                                              var string2845 = new GraceString("i");
                                                              var string2846 = new GraceString("...");
                                                              onSelf = true;
                                                              var call2847 = callmethodChecked(this, "modechange", [3], var_tokens, string2845, string2846);
                                                              setLineNumber(1061);    // compilenode string
                                                              var string2848 = new GraceString("n");
                                                              var_newmode = string2848;
                                                              setLineNumber(1062);    // compilenode identifier
                                                              var_mode = var_newmode;
                                                              setLineNumber(1063);    // compilenode string
                                                              var string2849 = new GraceString("");
                                                              var_accum = string2849;
                                                              if2840 = GraceDone;
                                                            }
                                                            if2835 = if2840;
                                                          }
                                                          var if2850 = GraceDone;
                                                          setLineNumber(1066);    // compilenode identifier
                                                          if (Grace_isTrue(var_newlineFound)) {
                                                            setLineNumber(1068);    // compilenode identifier
                                                            var_newlineFound = GraceFalse;
                                                            setLineNumber(1069);    // compilenode call
                                                            onSelf = true;
                                                            var call2852 = callmethodChecked(this, "lineNumber", [0]);
                                                            var opresult2854 = callmethodChecked(call2852, "+", [1], new GraceNum(1));
                                                            onSelf = true;
                                                            var call2855 = callmethodChecked(this, "lineNumber:=", [1], opresult2854);
                                                            setLineNumber(1070);    // compilenode num
                                                            onSelf = true;
                                                            var call2856 = callmethodChecked(this, "linePosition:=", [1], new GraceNum(0));
                                                            setLineNumber(1071);    // compilenode num
                                                            onSelf = true;
                                                            var call2857 = callmethodChecked(this, "startPosition:=", [1], new GraceNum(1));
                                                            if2850 = call2857;
                                                          }
                                                          return if2850;
                                                        };
                                                        var var_mainBlock = block1835;
                                                        setLineNumber(1074);    // compilenode block
                                                        var block2858 = new GraceBlock(this, 1074, 1);
                                                        setLineNumber(1);    // compilenode identifier
                                                        block2858.real = function(var_eachLine) {
                                                          setLineNumber(1075);    // compilenode identifier
                                                          var call2859 = callmethodChecked(var_eachLine, "iterator", [0]);
                                                          var var_charS = call2859;
                                                          setLineNumber(1076);    // compilenode block
                                                          var block2860 = new GraceBlock(this, 1076, 0);
                                                          block2860.real = function() {
                                                            var call2861 = callmethodChecked(var_charS, "hasNext", [0]);
                                                            return call2861;
                                                          };
                                                          var block2862 = new GraceBlock(this, 1076, 0);
                                                          block2862.real = function() {
                                                            setLineNumber(1077);    // compilenode identifier
                                                            var call2863 = callmethodChecked(var_charS, "next", [0]);
                                                            var var_ch = call2863;
                                                            setLineNumber(1078);    // compilenode call
                                                            onSelf = true;
                                                            var call2865 = callmethodChecked(this, "linePosition", [0]);
                                                            var opresult2867 = callmethodChecked(call2865, "+", [1], new GraceNum(1));
                                                            onSelf = true;
                                                            var call2868 = callmethodChecked(this, "linePosition:=", [1], opresult2867);
                                                            var if2869 = GraceDone;
                                                            setLineNumber(1079);    // compilenode identifier
                                                            var call2870 = callmethodChecked(var_charS, "hasNext", [0]);
                                                            var block2872 = new GraceBlock(this, 1079, 0);
                                                            block2872.real = function() {
                                                              var string2873 = new GraceString("><![]-");
                                                              var call2874 = callmethodChecked(string2873, "contains", [1], var_ch);
                                                              return call2874;
                                                            };
                                                            var call2876 = callmethodChecked(var_inStr, "not", [0]);
                                                            var opresult2878 = callmethodChecked(call2876, "&&", [1], block2872);
                                                            var opresult2880 = callmethodChecked(opresult2878, "&&", [1], call2870);
                                                            if (Grace_isTrue(opresult2880)) {
                                                              setLineNumber(1081);    // compilenode identifier
                                                              var call2881 = callmethodChecked(var_charS, "next", [0]);
                                                              var var_nextCh = call2881;
                                                              setLineNumber(1082);    // compilenode call
                                                              onSelf = true;
                                                              var call2883 = callmethodChecked(this, "linePosition", [0]);
                                                              var opresult2885 = callmethodChecked(call2883, "+", [1], new GraceNum(1));
                                                              onSelf = true;
                                                              var call2886 = callmethodChecked(this, "linePosition:=", [1], opresult2885);
                                                              setLineNumber(1083);    // compilenode identifier
                                                              var opresult2889 = callmethodChecked(var_ch, "++", [1], var_nextCh);
                                                              var var_bigraph = opresult2889;
                                                              var if2890 = GraceDone;
                                                              setLineNumber(1084);    // compilenode string
                                                              var string2891 = new GraceString(">=");
                                                              var opresult2894 = callmethodChecked(var_bigraph, "==", [1], string2891);
                                                              if (Grace_isTrue(opresult2894)) {
                                                                var string2895 = new GraceString("\u2265");
                                                                var call2896 = callmethodChecked(var_mainBlock, "apply", [1], string2895);
                                                                if2890 = call2896;
                                                              } else {
                                                                var if2897 = GraceDone;
                                                                setLineNumber(1085);    // compilenode string
                                                                var string2898 = new GraceString("<=");
                                                                var opresult2901 = callmethodChecked(var_bigraph, "==", [1], string2898);
                                                                if (Grace_isTrue(opresult2901)) {
                                                                  var string2902 = new GraceString("\u2264");
                                                                  var call2903 = callmethodChecked(var_mainBlock, "apply", [1], string2902);
                                                                  if2897 = call2903;
                                                                } else {
                                                                  var if2904 = GraceDone;
                                                                  setLineNumber(1086);    // compilenode string
                                                                  var string2905 = new GraceString("!=");
                                                                  var opresult2908 = callmethodChecked(var_bigraph, "==", [1], string2905);
                                                                  if (Grace_isTrue(opresult2908)) {
                                                                    var string2909 = new GraceString("\u2260");
                                                                    var call2910 = callmethodChecked(var_mainBlock, "apply", [1], string2909);
                                                                    if2904 = call2910;
                                                                  } else {
                                                                    var if2911 = GraceDone;
                                                                    setLineNumber(1087);    // compilenode string
                                                                    var string2912 = new GraceString("[[");
                                                                    var opresult2915 = callmethodChecked(var_bigraph, "==", [1], string2912);
                                                                    if (Grace_isTrue(opresult2915)) {
                                                                      var string2916 = new GraceString("\u27e6");
                                                                      var call2917 = callmethodChecked(var_mainBlock, "apply", [1], string2916);
                                                                      if2911 = call2917;
                                                                    } else {
                                                                      var if2918 = GraceDone;
                                                                      setLineNumber(1088);    // compilenode string
                                                                      var string2919 = new GraceString("]]");
                                                                      var opresult2922 = callmethodChecked(var_bigraph, "==", [1], string2919);
                                                                      if (Grace_isTrue(opresult2922)) {
                                                                        var string2923 = new GraceString("\u27e7");
                                                                        var call2924 = callmethodChecked(var_mainBlock, "apply", [1], string2923);
                                                                        if2918 = call2924;
                                                                      } else {
                                                                        var if2925 = GraceDone;
                                                                        setLineNumber(1089);    // compilenode string
                                                                        var string2926 = new GraceString("->");
                                                                        var opresult2929 = callmethodChecked(var_bigraph, "==", [1], string2926);
                                                                        if (Grace_isTrue(opresult2929)) {
                                                                          var string2930 = new GraceString("\u2192");
                                                                          var call2931 = callmethodChecked(var_mainBlock, "apply", [1], string2930);
                                                                          if2925 = call2931;
                                                                        } else {
                                                                          setLineNumber(1091);    // compilenode call
                                                                          onSelf = true;
                                                                          var call2933 = callmethodChecked(this, "linePosition", [0]);
                                                                          var diff2935 = callmethodChecked(call2933, "-", [1], new GraceNum(1));
                                                                          onSelf = true;
                                                                          var call2936 = callmethodChecked(this, "linePosition:=", [1], diff2935);
                                                                          setLineNumber(1092);    // compilenode identifier
                                                                          var call2937 = callmethodChecked(var_mainBlock, "apply", [1], var_ch);
                                                                          setLineNumber(1093);    // compilenode call
                                                                          onSelf = true;
                                                                          var call2939 = callmethodChecked(this, "linePosition", [0]);
                                                                          var opresult2941 = callmethodChecked(call2939, "+", [1], new GraceNum(1));
                                                                          onSelf = true;
                                                                          var call2942 = callmethodChecked(this, "linePosition:=", [1], opresult2941);
                                                                          setLineNumber(1094);    // compilenode identifier
                                                                          var call2943 = callmethodChecked(var_mainBlock, "apply", [1], var_nextCh);
                                                                          if2925 = call2943;
                                                                        }
                                                                        if2918 = if2925;
                                                                      }
                                                                      if2911 = if2918;
                                                                    }
                                                                    if2904 = if2911;
                                                                  }
                                                                  if2897 = if2904;
                                                                }
                                                                if2890 = if2897;
                                                              }
                                                              if2869 = if2890;
                                                            } else {
                                                              var if2944 = GraceDone;
                                                              setLineNumber(1096);    // compilenode block
                                                              var block2945 = new GraceBlock(this, 1096, 0);
                                                              block2945.real = function() {
                                                                var string2946 = new GraceString("dn");
                                                                var call2947 = callmethodChecked(string2946, "contains", [1], var_mode);
                                                                return call2947;
                                                              };
                                                              var string2949 = new GraceString(" ");
                                                              var opresult2952 = callmethodChecked(var_ch, "==", [1], string2949);
                                                              var opresult2954 = callmethodChecked(opresult2952, "&&", [1], block2945);
                                                              var call2955 = callmethodChecked(opresult2954, "not", [0]);
                                                              if (Grace_isTrue(call2955)) {
                                                                setLineNumber(1097);    // compilenode identifier
                                                                var call2956 = callmethodChecked(var_mainBlock, "apply", [1], var_ch);
                                                                if2944 = call2956;
                                                              }
                                                              if2869 = if2944;
                                                            }
                                                            return if2869;
                                                          };
                                                          var call2957 = callmethodChecked(var_prelude, "while()do", [1, 1], block2860, block2862);
                                                          setLineNumber(1100);    // compilenode string
                                                          var string2958 = new GraceString("\n");
                                                          var call2959 = callmethodChecked(var_mainBlock, "apply", [1], string2958);
                                                          return call2959;
                                                        };
                                                        var call2960 = callmethodChecked(var_prelude, "for()do", [1, 1], var_inputLines, block2858);
                                                        setLineNumber(1102);    // compilenode call
                                                        onSelf = true;
                                                        var call2962 = callmethodChecked(this, "linePosition", [0]);
                                                        var opresult2964 = callmethodChecked(call2962, "+", [1], new GraceNum(1));
                                                        onSelf = true;
                                                        var call2965 = callmethodChecked(this, "linePosition:=", [1], opresult2964);
                                                        var if2966 = GraceDone;
                                                        setLineNumber(1103);    // compilenode identifier
                                                        if (Grace_isTrue(var_inStr)) {
                                                          var if2967 = GraceDone;
                                                          setLineNumber(1104);    // compilenode string
                                                          var string2968 = new GraceString("\"");
                                                          var opresult2971 = callmethodChecked(var_mode, "==", [1], string2968);
                                                          if (Grace_isTrue(opresult2971)) {
                                                            setLineNumber(1105);    // compilenode identifier
                                                            var call2972 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                            var call2973 = callmethodChecked(call2972, "new", [0]);
                                                            var var_suggestion = call2973;
                                                            setLineNumber(1106);    // compilenode call
                                                            onSelf = true;
                                                            var call2974 = callmethodChecked(this, "lineNumber", [0]);
                                                            var string2975 = new GraceString("\"");
                                                            onSelf = true;
                                                            var call2977 = callmethodChecked(this, "lineNumber", [0]);
                                                            var call2978 = callmethodChecked(var_util, "lines", [0]);
                                                            var call2979 = callmethodChecked(call2978, "at", [1], call2977);
                                                            var opresult2981 = callmethodChecked(call2979, "++", [1], string2975);
                                                            var call2982 = callmethodChecked(var_suggestion, "addLine", [2], call2974, opresult2981);
                                                            setLineNumber(1107);    // compilenode string
                                                            var string2983 = new GraceString("a string must be terminated with a \" before the end of the line.");
                                                            setLineNumber(1108);    // compilenode call
                                                            onSelf = true;
                                                            var call2984 = callmethodChecked(this, "lineNumber", [0]);
                                                            onSelf = true;
                                                            var call2985 = callmethodChecked(this, "linePosition", [0]);
                                                            setLineNumber(1107);    // compilenode identifier
                                                            var call2986 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], string2983, call2984, call2985, var_suggestion);
                                                            if2967 = call2986;
                                                          } else {
                                                            var if2987 = GraceDone;
                                                            setLineNumber(1109);    // compilenode string
                                                            var string2988 = new GraceString("q");
                                                            var opresult2991 = callmethodChecked(var_mode, "==", [1], string2988);
                                                            if (Grace_isTrue(opresult2991)) {
                                                              setLineNumber(1111);    // compilenode string
                                                              var string2992 = new GraceString(" and unclosed at end of input.");
                                                              onSelf = true;
                                                              var call2994 = callmethodChecked(this, "startLine", [0]);
                                                              var string2996 = new GraceString("String opened on line ");
                                                              var opresult2998 = callmethodChecked(string2996, "++", [1], call2994);
                                                              var opresult3000 = callmethodChecked(opresult2998, "++", [1], string2992);
                                                              setLineNumber(1110);    // compilenode string
                                                              var string3002 = new GraceString("a multi-line string must end with a '\u203a'.\n");
                                                              var opresult3004 = callmethodChecked(string3002, "++", [1], opresult3000);
                                                              setLineNumber(1112);    // compilenode call
                                                              onSelf = true;
                                                              var call3005 = callmethodChecked(this, "startLine", [0]);
                                                              onSelf = true;
                                                              var call3006 = callmethodChecked(this, "stringStart", [0]);
                                                              onSelf = true;
                                                              var call3007 = callmethodChecked(this, "startLine", [0]);
                                                              var call3008 = callmethodChecked(var_util, "lines", [0]);
                                                              var call3009 = callmethodChecked(call3008, "at", [1], call3007);
                                                              var call3010 = callmethodChecked(call3009, "size", [0]);
                                                              setLineNumber(1110);    // compilenode identifier
                                                              var call3011 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult3004, call3005, call3006, call3010);
                                                              if2987 = call3011;
                                                            }
                                                            if2967 = if2987;
                                                          }
                                                          if2966 = if2967;
                                                        }
                                                        setLineNumber(1115);    // compilenode identifier
                                                        onSelf = true;
                                                        var call3012 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                        setLineNumber(1116);    // compilenode call
                                                        onSelf = true;
                                                        var call3013 = callmethodChecked(this, "eofToken", [0]);
                                                        var call3014 = callmethodChecked(var_tokens, "push", [1], call3013);
                                                        setLineNumber(1117);    // compilenode identifier
                                                        return var_tokens;
                                                      };
                                                      func1639.paramCounts = [1];
                                                      obj22.methods["lexinput"] = func1639;
                                                      func1639.definitionLine = 561;
                                                      func1639.definitionModule = "lexer";
                                                      setLineNumber(40);    // compilenode num
                                                      obj22.data["lineNumber"] = new GraceNum(1);
                                                      var reader_lexer_lineNumber3015 = function() {
                                                        return this.data["lineNumber"];
                                                      };
                                                      obj22.methods["lineNumber"] = reader_lexer_lineNumber3015;
                                                      obj22.data["lineNumber"] = new GraceNum(1);
                                                      var writer_lexer_lineNumber3015 = function(argcv, o) {
                                                        this.data["lineNumber"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj22.methods["lineNumber:="] = writer_lexer_lineNumber3015;
                                                      reader_lexer_lineNumber3015.confidential = true;
                                                      writer_lexer_lineNumber3015.confidential = true;
                                                      obj22.mutable = true;
                                                      setLineNumber(41);    // compilenode num
                                                      obj22.data["linePosition"] = new GraceNum(0);
                                                      var reader_lexer_linePosition3016 = function() {
                                                        return this.data["linePosition"];
                                                      };
                                                      obj22.methods["linePosition"] = reader_lexer_linePosition3016;
                                                      obj22.data["linePosition"] = new GraceNum(0);
                                                      var writer_lexer_linePosition3016 = function(argcv, o) {
                                                        this.data["linePosition"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj22.methods["linePosition:="] = writer_lexer_linePosition3016;
                                                      reader_lexer_linePosition3016.confidential = true;
                                                      writer_lexer_linePosition3016.confidential = true;
                                                      obj22.mutable = true;
                                                      setLineNumber(42);    // compilenode num
                                                      obj22.data["startPosition"] = new GraceNum(1);
                                                      var reader_lexer_startPosition3017 = function() {
                                                        return this.data["startPosition"];
                                                      };
                                                      obj22.methods["startPosition"] = reader_lexer_startPosition3017;
                                                      obj22.data["startPosition"] = new GraceNum(1);
                                                      var writer_lexer_startPosition3017 = function(argcv, o) {
                                                        this.data["startPosition"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj22.methods["startPosition:="] = writer_lexer_startPosition3017;
                                                      reader_lexer_startPosition3017.confidential = true;
                                                      writer_lexer_startPosition3017.confidential = true;
                                                      obj22.mutable = true;
                                                      setLineNumber(43);    // compilenode num
                                                      obj22.data["indentLevel"] = new GraceNum(0);
                                                      var reader_lexer_indentLevel3018 = function() {
                                                        return this.data["indentLevel"];
                                                      };
                                                      obj22.methods["indentLevel"] = reader_lexer_indentLevel3018;
                                                      obj22.data["indentLevel"] = new GraceNum(0);
                                                      var writer_lexer_indentLevel3018 = function(argcv, o) {
                                                        this.data["indentLevel"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj22.methods["indentLevel:="] = writer_lexer_indentLevel3018;
                                                      reader_lexer_indentLevel3018.confidential = true;
                                                      writer_lexer_indentLevel3018.confidential = true;
                                                      obj22.mutable = true;
                                                      setLineNumber(44);    // compilenode num
                                                      obj22.data["startLine"] = new GraceNum(1);
                                                      var reader_lexer_startLine3019 = function() {
                                                        return this.data["startLine"];
                                                      };
                                                      obj22.methods["startLine"] = reader_lexer_startLine3019;
                                                      obj22.data["startLine"] = new GraceNum(1);
                                                      var writer_lexer_startLine3019 = function(argcv, o) {
                                                        this.data["startLine"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj22.methods["startLine:="] = writer_lexer_startLine3019;
                                                      reader_lexer_startLine3019.confidential = true;
                                                      writer_lexer_startLine3019.confidential = true;
                                                      obj22.mutable = true;
                                                      obj22.data["stringStart"] = undefined;
                                                      var reader_lexer_stringStart3020 = function() {
                                                        return this.data["stringStart"];
                                                      };
                                                      obj22.methods["stringStart"] = reader_lexer_stringStart3020;
                                                      obj22.data["stringStart"] = undefined;
                                                      var writer_lexer_stringStart3020 = function(argcv, o) {
                                                        this.data["stringStart"] = o;
                                                        return GraceDone;
                                                      };
                                                      obj22.methods["stringStart:="] = writer_lexer_stringStart3020;
                                                      reader_lexer_stringStart3020.confidential = true;
                                                      writer_lexer_stringStart3020.confidential = true;
                                                      obj22.mutable = true;
                                                      superDepth = origSuperDepth;
                                                    };
                                                    obj_init_22.apply(obj22, []);
                                                    return obj22;
                                                  };
                                                  func21.paramCounts = [0];
                                                  this.methods["new"] = func21;
                                                  func21.definitionLine = 39;
                                                  func21.definitionModule = "lexer";
                                                    var func3021 = function(argcv) {    // method new()object
                                                      var curarg = 1;
                                                      var inheritingObject = arguments[curarg++];
                                                      // Start argument processing
                                                      curarg = 1;
                                                      // End argument processing
                                                      setModuleName("lexer");
                                                      var returnTarget = invocationCount;
                                                      invocationCount++;
                                                      var obj3022 = Grace_allocObject(GraceObject, "new");
                                                      obj3022.definitionModule = "lexer";
                                                      obj3022.definitionLine = 39;
                                                      var inho3022 = inheritingObject;
                                                      while (inho3022.superobj) inho3022 = inho3022.superobj;
                                                      inho3022.superobj = obj3022;
                                                      obj3022.data = inheritingObject.data;
                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                        obj3022._value = inheritingObject._value;
                                                      obj3022.outer = this;
                                                      var reader_lexer_outer3023 = function() {
                                                        return this.outer;
                                                      };
                                                      obj3022.methods["outer"] = reader_lexer_outer3023;
                                                      var obj_init_3022 = function() {
                                                        var origSuperDepth = superDepth;
                                                        superDepth = obj3022;
                                                        var func3024 = function(argcv) {    // method token
                                                          var returnTarget = invocationCount;
                                                          invocationCount++;
                                                          var curarg = 1;
                                                          if (argcv[0] !== 0)
                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for token"));
                                                          setModuleName("lexer");
                                                          setLineNumber(47);    // compilenode object
                                                          var obj3025 = Grace_allocObject(GraceObject, "token");
                                                          obj3025.definitionModule = "lexer";
                                                          obj3025.definitionLine = 47;
                                                          obj3025.outer = this;
                                                          var reader_lexer_outer3026 = function() {
                                                            return this.outer;
                                                          };
                                                          obj3025.methods["outer"] = reader_lexer_outer3026;
                                                          var obj_init_3025 = function() {
                                                            var origSuperDepth = superDepth;
                                                            superDepth = obj3025;
                                                            var func3027 = function(argcv) {    // method ==(1)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_other = arguments[curarg];
                                                              curarg++;
                                                              if (argcv[0] !== 1)
                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for ==(1)"));
                                                              setModuleName("lexer");
                                                              var if3028 = GraceDone;
                                                              setLineNumber(56);    // compilenode identifier
                                                              var opresult3031 = callmethodChecked(var_other, "==", [1], GraceFalse);
                                                              if (Grace_isTrue(opresult3031)) {
                                                                setLineNumber(57);    // compilenode identifier
                                                                if3028 = GraceFalse;
                                                              } else {
                                                                setLineNumber(59);    // compilenode call
                                                                onSelf = true;
                                                                var call3032 = callmethodChecked(this, "linePos", [0]);
                                                                var call3034 = callmethodChecked(var_other, "linePos", [0]);
                                                                var opresult3036 = callmethodChecked(call3034, "==", [1], call3032);
                                                                onSelf = true;
                                                                var call3038 = callmethodChecked(this, "line", [0]);
                                                                var call3040 = callmethodChecked(var_other, "line", [0]);
                                                                var opresult3042 = callmethodChecked(call3040, "==", [1], call3038);
                                                                var opresult3044 = callmethodChecked(opresult3042, "&&", [1], opresult3036);
                                                                if3028 = opresult3044;
                                                              }
                                                              return if3028;
                                                            };
                                                            func3027.paramCounts = [1];
                                                            obj3025.methods["=="] = func3027;
                                                            func3027.definitionLine = 55;
                                                            func3027.definitionModule = "lexer";
                                                            var func3045 = function(argcv) {    // method asString
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              if (argcv[0] !== 0)
                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for asString"));
                                                              setModuleName("lexer");
                                                              setLineNumber(62);    // compilenode string
                                                              var string3046 = new GraceString("");
                                                              onSelf = true;
                                                              var call3048 = callmethodChecked(this, "value", [0]);
                                                              var string3050 = new GraceString(" ");
                                                              onSelf = true;
                                                              var call3052 = callmethodChecked(this, "kind", [0]);
                                                              var string3054 = new GraceString(")");
                                                              onSelf = true;
                                                              var call3056 = callmethodChecked(this, "linePos", [0]);
                                                              var string3058 = new GraceString(":");
                                                              onSelf = true;
                                                              var call3060 = callmethodChecked(this, "line", [0]);
                                                              var string3062 = new GraceString("(");
                                                              var opresult3064 = callmethodChecked(string3062, "++", [1], call3060);
                                                              var opresult3066 = callmethodChecked(opresult3064, "++", [1], string3058);
                                                              var opresult3068 = callmethodChecked(opresult3066, "++", [1], call3056);
                                                              var opresult3070 = callmethodChecked(opresult3068, "++", [1], string3054);
                                                              var opresult3072 = callmethodChecked(opresult3070, "++", [1], call3052);
                                                              var opresult3074 = callmethodChecked(opresult3072, "++", [1], string3050);
                                                              var opresult3076 = callmethodChecked(opresult3074, "++", [1], call3048);
                                                              var opresult3078 = callmethodChecked(opresult3076, "++", [1], string3046);
                                                              return opresult3078;
                                                            };
                                                            func3045.paramCounts = [0];
                                                            obj3025.methods["asString"] = func3045;
                                                            func3045.definitionLine = 62;
                                                            func3045.definitionModule = "lexer";
                                                            setLineNumber(48);    // compilenode call
                                                            var call3079 = callmethodChecked(superDepth, "outer", [0]);
                                                            onOuter = true;
                                                            onSelf = true;
                                                            var call3080 = callmethodChecked(call3079, "lineNumber", [0]);
                                                            obj3025.data["line"] = call3080;
                                                            var reader_lexer_line3081 = function() {
                                                              return this.data["line"];
                                                            };
                                                            reader_lexer_line3081.def = true;
                                                            obj3025.methods["line"] = reader_lexer_line3081;
                                                            setLineNumber(49);    // compilenode call
                                                            var call3082 = callmethodChecked(superDepth, "outer", [0]);
                                                            onOuter = true;
                                                            onSelf = true;
                                                            var call3083 = callmethodChecked(call3082, "indentLevel", [0]);
                                                            obj3025.data["indent"] = call3083;
                                                            var reader_lexer_indent3084 = function() {
                                                              return this.data["indent"];
                                                            };
                                                            reader_lexer_indent3084.def = true;
                                                            obj3025.methods["indent"] = reader_lexer_indent3084;
                                                            setLineNumber(50);    // compilenode call
                                                            var call3085 = callmethodChecked(superDepth, "outer", [0]);
                                                            onOuter = true;
                                                            onSelf = true;
                                                            var call3086 = callmethodChecked(call3085, "startPosition", [0]);
                                                            obj3025.data["linePos"] = call3086;
                                                            var reader_lexer_linePos3087 = function() {
                                                              return this.data["linePos"];
                                                            };
                                                            reader_lexer_linePos3087.def = true;
                                                            obj3025.methods["linePos"] = reader_lexer_linePos3087;
                                                            setLineNumber(52);    // compilenode identifier
                                                            obj3025.data["next"] = GraceFalse;
                                                            var reader_lexer_next3088 = function() {
                                                              return this.data["next"];
                                                            };
                                                            obj3025.methods["next"] = reader_lexer_next3088;
                                                            obj3025.data["next"] = GraceFalse;
                                                            var writer_lexer_next3088 = function(argcv, o) {
                                                              this.data["next"] = o;
                                                              return GraceDone;
                                                            };
                                                            obj3025.methods["next:="] = writer_lexer_next3088;
                                                            obj3025.mutable = true;
                                                            setLineNumber(53);    // compilenode identifier
                                                            obj3025.data["prev"] = GraceFalse;
                                                            var reader_lexer_prev3089 = function() {
                                                              return this.data["prev"];
                                                            };
                                                            obj3025.methods["prev"] = reader_lexer_prev3089;
                                                            obj3025.data["prev"] = GraceFalse;
                                                            var writer_lexer_prev3089 = function(argcv, o) {
                                                              this.data["prev"] = o;
                                                              return GraceDone;
                                                            };
                                                            obj3025.methods["prev:="] = writer_lexer_prev3089;
                                                            obj3025.mutable = true;
                                                            superDepth = origSuperDepth;
                                                          };
                                                          obj_init_3025.apply(obj3025, []);
                                                          return obj3025;
                                                        };
                                                        func3024.paramCounts = [0];
                                                        obj3022.methods["token"] = func3024;
                                                        func3024.definitionLine = 47;
                                                        func3024.definitionModule = "lexer";
                                                          var func3090 = function(argcv) {    // method token()object
                                                            var curarg = 1;
                                                            var inheritingObject = arguments[curarg++];
                                                            // Start argument processing
                                                            curarg = 1;
                                                            // End argument processing
                                                            setModuleName("lexer");
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var obj3091 = Grace_allocObject(GraceObject, "token");
                                                            obj3091.definitionModule = "lexer";
                                                            obj3091.definitionLine = 47;
                                                            var inho3091 = inheritingObject;
                                                            while (inho3091.superobj) inho3091 = inho3091.superobj;
                                                            inho3091.superobj = obj3091;
                                                            obj3091.data = inheritingObject.data;
                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                              obj3091._value = inheritingObject._value;
                                                            obj3091.outer = this;
                                                            var reader_lexer_outer3092 = function() {
                                                              return this.outer;
                                                            };
                                                            obj3091.methods["outer"] = reader_lexer_outer3092;
                                                            var obj_init_3091 = function() {
                                                              var origSuperDepth = superDepth;
                                                              superDepth = obj3091;
                                                              var func3093 = function(argcv) {    // method ==(1)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_other = arguments[curarg];
                                                                curarg++;
                                                                if (argcv[0] !== 1)
                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for ==(1)"));
                                                                setModuleName("lexer");
                                                                var if3094 = GraceDone;
                                                                setLineNumber(56);    // compilenode identifier
                                                                var opresult3097 = callmethodChecked(var_other, "==", [1], GraceFalse);
                                                                if (Grace_isTrue(opresult3097)) {
                                                                  setLineNumber(57);    // compilenode identifier
                                                                  if3094 = GraceFalse;
                                                                } else {
                                                                  setLineNumber(59);    // compilenode call
                                                                  onSelf = true;
                                                                  var call3098 = callmethodChecked(this, "linePos", [0]);
                                                                  var call3100 = callmethodChecked(var_other, "linePos", [0]);
                                                                  var opresult3102 = callmethodChecked(call3100, "==", [1], call3098);
                                                                  onSelf = true;
                                                                  var call3104 = callmethodChecked(this, "line", [0]);
                                                                  var call3106 = callmethodChecked(var_other, "line", [0]);
                                                                  var opresult3108 = callmethodChecked(call3106, "==", [1], call3104);
                                                                  var opresult3110 = callmethodChecked(opresult3108, "&&", [1], opresult3102);
                                                                  if3094 = opresult3110;
                                                                }
                                                                return if3094;
                                                              };
                                                              func3093.paramCounts = [1];
                                                              obj3091.methods["=="] = func3093;
                                                              func3093.definitionLine = 55;
                                                              func3093.definitionModule = "lexer";
                                                              var func3111 = function(argcv) {    // method asString
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                if (argcv[0] !== 0)
                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for asString"));
                                                                setModuleName("lexer");
                                                                setLineNumber(62);    // compilenode string
                                                                var string3112 = new GraceString("");
                                                                onSelf = true;
                                                                var call3114 = callmethodChecked(this, "value", [0]);
                                                                var string3116 = new GraceString(" ");
                                                                onSelf = true;
                                                                var call3118 = callmethodChecked(this, "kind", [0]);
                                                                var string3120 = new GraceString(")");
                                                                onSelf = true;
                                                                var call3122 = callmethodChecked(this, "linePos", [0]);
                                                                var string3124 = new GraceString(":");
                                                                onSelf = true;
                                                                var call3126 = callmethodChecked(this, "line", [0]);
                                                                var string3128 = new GraceString("(");
                                                                var opresult3130 = callmethodChecked(string3128, "++", [1], call3126);
                                                                var opresult3132 = callmethodChecked(opresult3130, "++", [1], string3124);
                                                                var opresult3134 = callmethodChecked(opresult3132, "++", [1], call3122);
                                                                var opresult3136 = callmethodChecked(opresult3134, "++", [1], string3120);
                                                                var opresult3138 = callmethodChecked(opresult3136, "++", [1], call3118);
                                                                var opresult3140 = callmethodChecked(opresult3138, "++", [1], string3116);
                                                                var opresult3142 = callmethodChecked(opresult3140, "++", [1], call3114);
                                                                var opresult3144 = callmethodChecked(opresult3142, "++", [1], string3112);
                                                                return opresult3144;
                                                              };
                                                              func3111.paramCounts = [0];
                                                              obj3091.methods["asString"] = func3111;
                                                              func3111.definitionLine = 62;
                                                              func3111.definitionModule = "lexer";
                                                              setLineNumber(48);    // compilenode call
                                                              var call3145 = callmethodChecked(superDepth, "outer", [0]);
                                                              onOuter = true;
                                                              onSelf = true;
                                                              var call3146 = callmethodChecked(call3145, "lineNumber", [0]);
                                                              obj3091.data["line"] = call3146;
                                                              var reader_lexer_line3147 = function() {
                                                                return this.data["line"];
                                                              };
                                                              reader_lexer_line3147.def = true;
                                                              obj3091.methods["line"] = reader_lexer_line3147;
                                                              setLineNumber(49);    // compilenode call
                                                              var call3148 = callmethodChecked(superDepth, "outer", [0]);
                                                              onOuter = true;
                                                              onSelf = true;
                                                              var call3149 = callmethodChecked(call3148, "indentLevel", [0]);
                                                              obj3091.data["indent"] = call3149;
                                                              var reader_lexer_indent3150 = function() {
                                                                return this.data["indent"];
                                                              };
                                                              reader_lexer_indent3150.def = true;
                                                              obj3091.methods["indent"] = reader_lexer_indent3150;
                                                              setLineNumber(50);    // compilenode call
                                                              var call3151 = callmethodChecked(superDepth, "outer", [0]);
                                                              onOuter = true;
                                                              onSelf = true;
                                                              var call3152 = callmethodChecked(call3151, "startPosition", [0]);
                                                              obj3091.data["linePos"] = call3152;
                                                              var reader_lexer_linePos3153 = function() {
                                                                return this.data["linePos"];
                                                              };
                                                              reader_lexer_linePos3153.def = true;
                                                              obj3091.methods["linePos"] = reader_lexer_linePos3153;
                                                              setLineNumber(52);    // compilenode identifier
                                                              obj3091.data["next"] = GraceFalse;
                                                              var reader_lexer_next3154 = function() {
                                                                return this.data["next"];
                                                              };
                                                              obj3091.methods["next"] = reader_lexer_next3154;
                                                              obj3091.data["next"] = GraceFalse;
                                                              var writer_lexer_next3154 = function(argcv, o) {
                                                                this.data["next"] = o;
                                                                return GraceDone;
                                                              };
                                                              obj3091.methods["next:="] = writer_lexer_next3154;
                                                              obj3091.mutable = true;
                                                              setLineNumber(53);    // compilenode identifier
                                                              obj3091.data["prev"] = GraceFalse;
                                                              var reader_lexer_prev3155 = function() {
                                                                return this.data["prev"];
                                                              };
                                                              obj3091.methods["prev"] = reader_lexer_prev3155;
                                                              obj3091.data["prev"] = GraceFalse;
                                                              var writer_lexer_prev3155 = function(argcv, o) {
                                                                this.data["prev"] = o;
                                                                return GraceDone;
                                                              };
                                                              obj3091.methods["prev:="] = writer_lexer_prev3155;
                                                              obj3091.mutable = true;
                                                              superDepth = origSuperDepth;
                                                            };
                                                            obj_init_3091.apply(inheritingObject, []);
                                                            return obj3091;
                                                            };
                                                            obj3022.methods["token()object"] = func3090;
                                                          var func3156 = function(argcv) {    // method identifierToken(1)
                                                            var returnTarget = invocationCount;
                                                            invocationCount++;
                                                            var curarg = 1;
                                                            var var_s = arguments[curarg];
                                                            curarg++;
                                                            if (argcv[0] !== 1)
                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for identifierToken(1)"));
                                                            setModuleName("lexer");
                                                            setLineNumber(66);    // compilenode object
                                                            var obj3157 = Grace_allocObject(null, "identifierToken");
                                                            obj3157.definitionModule = "lexer";
                                                            obj3157.definitionLine = 66;
                                                            obj3157.outer = this;
                                                            var reader_lexer_outer3158 = function() {
                                                              return this.outer;
                                                            };
                                                            obj3157.methods["outer"] = reader_lexer_outer3158;
                                                            var obj_init_3157 = function() {
                                                              var origSuperDepth = superDepth;
                                                              superDepth = obj3157;
                                                              setLineNumber(67);    // compilenode call
                                                              var call3159 = callmethodChecked(superDepth, "outer", [0]);
                                                              onOuter = true;
                                                              onSelf = true;
                                                              var call3160 = callmethodChecked(call3159, "token()object", [0, 1], this);
                                                              obj3157.superobj = call3160;
                                                              if (call3160.data) obj3157.data = call3160.data;
                                                              if (call3160.hasOwnProperty('_value'))
                                                                  obj3157._value = call3160._value;
                                                              setLineNumber(68);    // compilenode string
                                                              var string3161 = new GraceString("identifier");
                                                              obj3157.data["kind"] = string3161;
                                                              var reader_lexer_kind3162 = function() {
                                                                return this.data["kind"];
                                                              };
                                                              reader_lexer_kind3162.def = true;
                                                              obj3157.methods["kind"] = reader_lexer_kind3162;
                                                              setLineNumber(69);    // compilenode identifier
                                                              obj3157.data["value"] = var_s;
                                                              var reader_lexer_value3163 = function() {
                                                                return this.data["value"];
                                                              };
                                                              reader_lexer_value3163.def = true;
                                                              obj3157.methods["value"] = reader_lexer_value3163;
                                                              setLineNumber(70);    // compilenode identifier
                                                              var call3164 = callmethodChecked(var_s, "size", [0]);
                                                              obj3157.data["size"] = call3164;
                                                              var reader_lexer_size3165 = function() {
                                                                return this.data["size"];
                                                              };
                                                              reader_lexer_size3165.def = true;
                                                              obj3157.methods["size"] = reader_lexer_size3165;
                                                              superDepth = origSuperDepth;
                                                            };
                                                            obj_init_3157.apply(obj3157, []);
                                                            return obj3157;
                                                          };
                                                          func3156.paramCounts = [1];
                                                          obj3022.methods["identifierToken"] = func3156;
                                                          func3156.definitionLine = 66;
                                                          func3156.definitionModule = "lexer";
                                                            var func3166 = function(argcv) {    // method identifierToken(1     )()object
                                                              var curarg = 1;
                                                              var var_s = arguments[curarg];
                                                              curarg++;
                                                              var inheritingObject = arguments[curarg++];
                                                              // Start argument processing
                                                              curarg = 1;
                                                              curarg++;
                                                              // End argument processing
                                                              setModuleName("lexer");
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var obj3167 = Grace_allocObject(null, "identifierToken");
                                                              obj3167.definitionModule = "lexer";
                                                              obj3167.definitionLine = 66;
                                                              var inho3167 = inheritingObject;
                                                              while (inho3167.superobj) inho3167 = inho3167.superobj;
                                                              inho3167.superobj = obj3167;
                                                              obj3167.data = inheritingObject.data;
                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                obj3167._value = inheritingObject._value;
                                                              obj3167.outer = this;
                                                              var reader_lexer_outer3168 = function() {
                                                                return this.outer;
                                                              };
                                                              obj3167.methods["outer"] = reader_lexer_outer3168;
                                                              var obj_init_3167 = function() {
                                                                var origSuperDepth = superDepth;
                                                                superDepth = obj3167;
                                                                setLineNumber(67);    // compilenode call
                                                                var call3169 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call3170 = callmethodChecked(call3169, "token()object", [0, 1], this);
                                                                obj3167.superobj = call3170;
                                                                if (call3170.data) obj3167.data = call3170.data;
                                                                if (call3170.hasOwnProperty('_value'))
                                                                    obj3167._value = call3170._value;
                                                                setLineNumber(68);    // compilenode string
                                                                var string3171 = new GraceString("identifier");
                                                                obj3167.data["kind"] = string3171;
                                                                var reader_lexer_kind3172 = function() {
                                                                  return this.data["kind"];
                                                                };
                                                                reader_lexer_kind3172.def = true;
                                                                obj3167.methods["kind"] = reader_lexer_kind3172;
                                                                setLineNumber(69);    // compilenode identifier
                                                                obj3167.data["value"] = var_s;
                                                                var reader_lexer_value3173 = function() {
                                                                  return this.data["value"];
                                                                };
                                                                reader_lexer_value3173.def = true;
                                                                obj3167.methods["value"] = reader_lexer_value3173;
                                                                setLineNumber(70);    // compilenode identifier
                                                                var call3174 = callmethodChecked(var_s, "size", [0]);
                                                                obj3167.data["size"] = call3174;
                                                                var reader_lexer_size3175 = function() {
                                                                  return this.data["size"];
                                                                };
                                                                reader_lexer_size3175.def = true;
                                                                obj3167.methods["size"] = reader_lexer_size3175;
                                                                superDepth = origSuperDepth;
                                                              };
                                                              obj_init_3167.apply(inheritingObject, []);
                                                              return obj3167;
                                                              };
                                                              obj3022.methods["identifierToken()object"] = func3166;
                                                            var func3176 = function(argcv) {    // method stringToken(1)
                                                              var returnTarget = invocationCount;
                                                              invocationCount++;
                                                              var curarg = 1;
                                                              var var_s = arguments[curarg];
                                                              curarg++;
                                                              if (argcv[0] !== 1)
                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for stringToken(1)"));
                                                              setModuleName("lexer");
                                                              setLineNumber(72);    // compilenode object
                                                              var obj3177 = Grace_allocObject(null, "stringToken");
                                                              obj3177.definitionModule = "lexer";
                                                              obj3177.definitionLine = 72;
                                                              obj3177.outer = this;
                                                              var reader_lexer_outer3178 = function() {
                                                                return this.outer;
                                                              };
                                                              obj3177.methods["outer"] = reader_lexer_outer3178;
                                                              var obj_init_3177 = function() {
                                                                var origSuperDepth = superDepth;
                                                                superDepth = obj3177;
                                                                setLineNumber(73);    // compilenode call
                                                                var call3179 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call3180 = callmethodChecked(call3179, "token()object", [0, 1], this);
                                                                obj3177.superobj = call3180;
                                                                if (call3180.data) obj3177.data = call3180.data;
                                                                if (call3180.hasOwnProperty('_value'))
                                                                    obj3177._value = call3180._value;
                                                                setLineNumber(74);    // compilenode string
                                                                var string3181 = new GraceString("string");
                                                                obj3177.data["kind"] = string3181;
                                                                var reader_lexer_kind3182 = function() {
                                                                  return this.data["kind"];
                                                                };
                                                                reader_lexer_kind3182.def = true;
                                                                obj3177.methods["kind"] = reader_lexer_kind3182;
                                                                setLineNumber(75);    // compilenode identifier
                                                                obj3177.data["value"] = var_s;
                                                                var reader_lexer_value3183 = function() {
                                                                  return this.data["value"];
                                                                };
                                                                reader_lexer_value3183.def = true;
                                                                obj3177.methods["value"] = reader_lexer_value3183;
                                                                setLineNumber(76);    // compilenode call
                                                                var call3185 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call3186 = callmethodChecked(call3185, "stringStart", [0]);
                                                                var call3188 = callmethodChecked(superDepth, "outer", [0]);
                                                                onOuter = true;
                                                                onSelf = true;
                                                                var call3189 = callmethodChecked(call3188, "linePosition", [0]);
                                                                var diff3191 = callmethodChecked(call3189, "-", [1], call3186);
                                                                var opresult3193 = callmethodChecked(diff3191, "+", [1], new GraceNum(1));
                                                                obj3177.data["size"] = opresult3193;
                                                                var reader_lexer_size3194 = function() {
                                                                  return this.data["size"];
                                                                };
                                                                reader_lexer_size3194.def = true;
                                                                obj3177.methods["size"] = reader_lexer_size3194;
                                                                superDepth = origSuperDepth;
                                                              };
                                                              obj_init_3177.apply(obj3177, []);
                                                              return obj3177;
                                                            };
                                                            func3176.paramCounts = [1];
                                                            obj3022.methods["stringToken"] = func3176;
                                                            func3176.definitionLine = 72;
                                                            func3176.definitionModule = "lexer";
                                                              var func3195 = function(argcv) {    // method stringToken(1     )()object
                                                                var curarg = 1;
                                                                var var_s = arguments[curarg];
                                                                curarg++;
                                                                var inheritingObject = arguments[curarg++];
                                                                // Start argument processing
                                                                curarg = 1;
                                                                curarg++;
                                                                // End argument processing
                                                                setModuleName("lexer");
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var obj3196 = Grace_allocObject(null, "stringToken");
                                                                obj3196.definitionModule = "lexer";
                                                                obj3196.definitionLine = 72;
                                                                var inho3196 = inheritingObject;
                                                                while (inho3196.superobj) inho3196 = inho3196.superobj;
                                                                inho3196.superobj = obj3196;
                                                                obj3196.data = inheritingObject.data;
                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                  obj3196._value = inheritingObject._value;
                                                                obj3196.outer = this;
                                                                var reader_lexer_outer3197 = function() {
                                                                  return this.outer;
                                                                };
                                                                obj3196.methods["outer"] = reader_lexer_outer3197;
                                                                var obj_init_3196 = function() {
                                                                  var origSuperDepth = superDepth;
                                                                  superDepth = obj3196;
                                                                  setLineNumber(73);    // compilenode call
                                                                  var call3198 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onOuter = true;
                                                                  onSelf = true;
                                                                  var call3199 = callmethodChecked(call3198, "token()object", [0, 1], this);
                                                                  obj3196.superobj = call3199;
                                                                  if (call3199.data) obj3196.data = call3199.data;
                                                                  if (call3199.hasOwnProperty('_value'))
                                                                      obj3196._value = call3199._value;
                                                                  setLineNumber(74);    // compilenode string
                                                                  var string3200 = new GraceString("string");
                                                                  obj3196.data["kind"] = string3200;
                                                                  var reader_lexer_kind3201 = function() {
                                                                    return this.data["kind"];
                                                                  };
                                                                  reader_lexer_kind3201.def = true;
                                                                  obj3196.methods["kind"] = reader_lexer_kind3201;
                                                                  setLineNumber(75);    // compilenode identifier
                                                                  obj3196.data["value"] = var_s;
                                                                  var reader_lexer_value3202 = function() {
                                                                    return this.data["value"];
                                                                  };
                                                                  reader_lexer_value3202.def = true;
                                                                  obj3196.methods["value"] = reader_lexer_value3202;
                                                                  setLineNumber(76);    // compilenode call
                                                                  var call3204 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onOuter = true;
                                                                  onSelf = true;
                                                                  var call3205 = callmethodChecked(call3204, "stringStart", [0]);
                                                                  var call3207 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onOuter = true;
                                                                  onSelf = true;
                                                                  var call3208 = callmethodChecked(call3207, "linePosition", [0]);
                                                                  var diff3210 = callmethodChecked(call3208, "-", [1], call3205);
                                                                  var opresult3212 = callmethodChecked(diff3210, "+", [1], new GraceNum(1));
                                                                  obj3196.data["size"] = opresult3212;
                                                                  var reader_lexer_size3213 = function() {
                                                                    return this.data["size"];
                                                                  };
                                                                  reader_lexer_size3213.def = true;
                                                                  obj3196.methods["size"] = reader_lexer_size3213;
                                                                  superDepth = origSuperDepth;
                                                                };
                                                                obj_init_3196.apply(inheritingObject, []);
                                                                return obj3196;
                                                                };
                                                                obj3022.methods["stringToken()object"] = func3195;
                                                              var func3214 = function(argcv) {    // method multiLineStringToken(1)
                                                                var returnTarget = invocationCount;
                                                                invocationCount++;
                                                                var curarg = 1;
                                                                var var_s = arguments[curarg];
                                                                curarg++;
                                                                if (argcv[0] !== 1)
                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for multiLineStringToken(1)"));
                                                                setModuleName("lexer");
                                                                setLineNumber(78);    // compilenode object
                                                                var obj3215 = Grace_allocObject(null, "multiLineStringToken");
                                                                obj3215.definitionModule = "lexer";
                                                                obj3215.definitionLine = 78;
                                                                obj3215.outer = this;
                                                                var reader_lexer_outer3216 = function() {
                                                                  return this.outer;
                                                                };
                                                                obj3215.methods["outer"] = reader_lexer_outer3216;
                                                                var obj_init_3215 = function() {
                                                                  var origSuperDepth = superDepth;
                                                                  superDepth = obj3215;
                                                                  var func3217 = function(argcv) {    // method line
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    if (argcv[0] !== 0)
                                                                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for line"));
                                                                    setModuleName("lexer");
                                                                    setLineNumber(85);    // compilenode call
                                                                    onSelf = true;
                                                                    var call3218 = callmethodChecked(this, "line'", [0]);
                                                                    return call3218;
                                                                  };
                                                                  func3217.paramCounts = [0];
                                                                  obj3215.methods["line"] = func3217;
                                                                  func3217.definitionLine = 85;
                                                                  func3217.definitionModule = "lexer";
                                                                  var func3219 = function(argcv) {    // method linePos
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    if (argcv[0] !== 0)
                                                                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for linePos"));
                                                                    setModuleName("lexer");
                                                                    setLineNumber(86);    // compilenode call
                                                                    onSelf = true;
                                                                    var call3220 = callmethodChecked(this, "linePos'", [0]);
                                                                    return call3220;
                                                                  };
                                                                  func3219.paramCounts = [0];
                                                                  obj3215.methods["linePos"] = func3219;
                                                                  func3219.definitionLine = 86;
                                                                  func3219.definitionModule = "lexer";
                                                                  setLineNumber(79);    // compilenode call
                                                                  var call3221 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onOuter = true;
                                                                  onSelf = true;
                                                                  var call3222 = callmethodChecked(call3221, "token()object", [0, 1], this);
                                                                  obj3215.superobj = call3222;
                                                                  if (call3222.data) obj3215.data = call3222.data;
                                                                  if (call3222.hasOwnProperty('_value'))
                                                                      obj3215._value = call3222._value;
                                                                  setLineNumber(80);    // compilenode string
                                                                  var string3223 = new GraceString("string");
                                                                  obj3215.data["kind"] = string3223;
                                                                  var reader_lexer_kind3224 = function() {
                                                                    return this.data["kind"];
                                                                  };
                                                                  reader_lexer_kind3224.def = true;
                                                                  obj3215.methods["kind"] = reader_lexer_kind3224;
                                                                  setLineNumber(81);    // compilenode identifier
                                                                  obj3215.data["value"] = var_s;
                                                                  var reader_lexer_value3225 = function() {
                                                                    return this.data["value"];
                                                                  };
                                                                  reader_lexer_value3225.def = true;
                                                                  obj3215.methods["value"] = reader_lexer_value3225;
                                                                  setLineNumber(82);    // compilenode identifier
                                                                  var call3227 = callmethodChecked(var_s, "size", [0]);
                                                                  var opresult3229 = callmethodChecked(call3227, "+", [1], new GraceNum(2));
                                                                  obj3215.data["size"] = opresult3229;
                                                                  var reader_lexer_size3230 = function() {
                                                                    return this.data["size"];
                                                                  };
                                                                  reader_lexer_size3230.def = true;
                                                                  obj3215.methods["size"] = reader_lexer_size3230;
                                                                  setLineNumber(83);    // compilenode call
                                                                  var call3231 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onOuter = true;
                                                                  onSelf = true;
                                                                  var call3232 = callmethodChecked(call3231, "startLine", [0]);
                                                                  obj3215.data["line'"] = call3232;
                                                                  var reader_lexer_line__39__3233 = function() {
                                                                    return this.data["line'"];
                                                                  };
                                                                  reader_lexer_line__39__3233.def = true;
                                                                  reader_lexer_line__39__3233.confidential = true;
                                                                  obj3215.methods["line'"] = reader_lexer_line__39__3233;
                                                                  setLineNumber(84);    // compilenode call
                                                                  var call3234 = callmethodChecked(superDepth, "outer", [0]);
                                                                  onOuter = true;
                                                                  onSelf = true;
                                                                  var call3235 = callmethodChecked(call3234, "stringStart", [0]);
                                                                  obj3215.data["linePos'"] = call3235;
                                                                  var reader_lexer_linePos__39__3236 = function() {
                                                                    return this.data["linePos'"];
                                                                  };
                                                                  reader_lexer_linePos__39__3236.def = true;
                                                                  reader_lexer_linePos__39__3236.confidential = true;
                                                                  obj3215.methods["linePos'"] = reader_lexer_linePos__39__3236;
                                                                  superDepth = origSuperDepth;
                                                                };
                                                                obj_init_3215.apply(obj3215, []);
                                                                return obj3215;
                                                              };
                                                              func3214.paramCounts = [1];
                                                              obj3022.methods["multiLineStringToken"] = func3214;
                                                              func3214.definitionLine = 78;
                                                              func3214.definitionModule = "lexer";
                                                                var func3237 = function(argcv) {    // method multiLineStringToken(1     )()object
                                                                  var curarg = 1;
                                                                  var var_s = arguments[curarg];
                                                                  curarg++;
                                                                  var inheritingObject = arguments[curarg++];
                                                                  // Start argument processing
                                                                  curarg = 1;
                                                                  curarg++;
                                                                  // End argument processing
                                                                  setModuleName("lexer");
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var obj3238 = Grace_allocObject(null, "multiLineStringToken");
                                                                  obj3238.definitionModule = "lexer";
                                                                  obj3238.definitionLine = 78;
                                                                  var inho3238 = inheritingObject;
                                                                  while (inho3238.superobj) inho3238 = inho3238.superobj;
                                                                  inho3238.superobj = obj3238;
                                                                  obj3238.data = inheritingObject.data;
                                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                                    obj3238._value = inheritingObject._value;
                                                                  obj3238.outer = this;
                                                                  var reader_lexer_outer3239 = function() {
                                                                    return this.outer;
                                                                  };
                                                                  obj3238.methods["outer"] = reader_lexer_outer3239;
                                                                  var obj_init_3238 = function() {
                                                                    var origSuperDepth = superDepth;
                                                                    superDepth = obj3238;
                                                                    var func3240 = function(argcv) {    // method line
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      if (argcv[0] !== 0)
                                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for line"));
                                                                      setModuleName("lexer");
                                                                      setLineNumber(85);    // compilenode call
                                                                      onSelf = true;
                                                                      var call3241 = callmethodChecked(this, "line'", [0]);
                                                                      return call3241;
                                                                    };
                                                                    func3240.paramCounts = [0];
                                                                    obj3238.methods["line"] = func3240;
                                                                    func3240.definitionLine = 85;
                                                                    func3240.definitionModule = "lexer";
                                                                    var func3242 = function(argcv) {    // method linePos
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      if (argcv[0] !== 0)
                                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for linePos"));
                                                                      setModuleName("lexer");
                                                                      setLineNumber(86);    // compilenode call
                                                                      onSelf = true;
                                                                      var call3243 = callmethodChecked(this, "linePos'", [0]);
                                                                      return call3243;
                                                                    };
                                                                    func3242.paramCounts = [0];
                                                                    obj3238.methods["linePos"] = func3242;
                                                                    func3242.definitionLine = 86;
                                                                    func3242.definitionModule = "lexer";
                                                                    setLineNumber(79);    // compilenode call
                                                                    var call3244 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onOuter = true;
                                                                    onSelf = true;
                                                                    var call3245 = callmethodChecked(call3244, "token()object", [0, 1], this);
                                                                    obj3238.superobj = call3245;
                                                                    if (call3245.data) obj3238.data = call3245.data;
                                                                    if (call3245.hasOwnProperty('_value'))
                                                                        obj3238._value = call3245._value;
                                                                    setLineNumber(80);    // compilenode string
                                                                    var string3246 = new GraceString("string");
                                                                    obj3238.data["kind"] = string3246;
                                                                    var reader_lexer_kind3247 = function() {
                                                                      return this.data["kind"];
                                                                    };
                                                                    reader_lexer_kind3247.def = true;
                                                                    obj3238.methods["kind"] = reader_lexer_kind3247;
                                                                    setLineNumber(81);    // compilenode identifier
                                                                    obj3238.data["value"] = var_s;
                                                                    var reader_lexer_value3248 = function() {
                                                                      return this.data["value"];
                                                                    };
                                                                    reader_lexer_value3248.def = true;
                                                                    obj3238.methods["value"] = reader_lexer_value3248;
                                                                    setLineNumber(82);    // compilenode identifier
                                                                    var call3250 = callmethodChecked(var_s, "size", [0]);
                                                                    var opresult3252 = callmethodChecked(call3250, "+", [1], new GraceNum(2));
                                                                    obj3238.data["size"] = opresult3252;
                                                                    var reader_lexer_size3253 = function() {
                                                                      return this.data["size"];
                                                                    };
                                                                    reader_lexer_size3253.def = true;
                                                                    obj3238.methods["size"] = reader_lexer_size3253;
                                                                    setLineNumber(83);    // compilenode call
                                                                    var call3254 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onOuter = true;
                                                                    onSelf = true;
                                                                    var call3255 = callmethodChecked(call3254, "startLine", [0]);
                                                                    obj3238.data["line'"] = call3255;
                                                                    var reader_lexer_line__39__3256 = function() {
                                                                      return this.data["line'"];
                                                                    };
                                                                    reader_lexer_line__39__3256.def = true;
                                                                    reader_lexer_line__39__3256.confidential = true;
                                                                    obj3238.methods["line'"] = reader_lexer_line__39__3256;
                                                                    setLineNumber(84);    // compilenode call
                                                                    var call3257 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onOuter = true;
                                                                    onSelf = true;
                                                                    var call3258 = callmethodChecked(call3257, "stringStart", [0]);
                                                                    obj3238.data["linePos'"] = call3258;
                                                                    var reader_lexer_linePos__39__3259 = function() {
                                                                      return this.data["linePos'"];
                                                                    };
                                                                    reader_lexer_linePos__39__3259.def = true;
                                                                    reader_lexer_linePos__39__3259.confidential = true;
                                                                    obj3238.methods["linePos'"] = reader_lexer_linePos__39__3259;
                                                                    superDepth = origSuperDepth;
                                                                  };
                                                                  obj_init_3238.apply(inheritingObject, []);
                                                                  return obj3238;
                                                                  };
                                                                  obj3022.methods["multiLineStringToken()object"] = func3237;
                                                                var func3260 = function(argcv) {    // method commentToken(1)
                                                                  var returnTarget = invocationCount;
                                                                  invocationCount++;
                                                                  var curarg = 1;
                                                                  var var_s = arguments[curarg];
                                                                  curarg++;
                                                                  if (argcv[0] !== 1)
                                                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for commentToken(1)"));
                                                                  setModuleName("lexer");
                                                                  setLineNumber(88);    // compilenode object
                                                                  var obj3261 = Grace_allocObject(null, "commentToken");
                                                                  obj3261.definitionModule = "lexer";
                                                                  obj3261.definitionLine = 88;
                                                                  obj3261.outer = this;
                                                                  var reader_lexer_outer3262 = function() {
                                                                    return this.outer;
                                                                  };
                                                                  obj3261.methods["outer"] = reader_lexer_outer3262;
                                                                  var obj_init_3261 = function() {
                                                                    var origSuperDepth = superDepth;
                                                                    superDepth = obj3261;
                                                                    setLineNumber(89);    // compilenode call
                                                                    var call3263 = callmethodChecked(superDepth, "outer", [0]);
                                                                    onOuter = true;
                                                                    onSelf = true;
                                                                    var call3264 = callmethodChecked(call3263, "token()object", [0, 1], this);
                                                                    obj3261.superobj = call3264;
                                                                    if (call3264.data) obj3261.data = call3264.data;
                                                                    if (call3264.hasOwnProperty('_value'))
                                                                        obj3261._value = call3264._value;
                                                                    setLineNumber(90);    // compilenode string
                                                                    var string3265 = new GraceString("comment");
                                                                    obj3261.data["kind"] = string3265;
                                                                    var reader_lexer_kind3266 = function() {
                                                                      return this.data["kind"];
                                                                    };
                                                                    reader_lexer_kind3266.def = true;
                                                                    obj3261.methods["kind"] = reader_lexer_kind3266;
                                                                    setLineNumber(91);    // compilenode identifier
                                                                    obj3261.data["value"] = var_s;
                                                                    var reader_lexer_value3267 = function() {
                                                                      return this.data["value"];
                                                                    };
                                                                    reader_lexer_value3267.def = true;
                                                                    obj3261.methods["value"] = reader_lexer_value3267;
                                                                    setLineNumber(92);    // compilenode identifier
                                                                    var call3269 = callmethodChecked(var_s, "size", [0]);
                                                                    var opresult3271 = callmethodChecked(call3269, "+", [1], new GraceNum(2));
                                                                    obj3261.data["size"] = opresult3271;
                                                                    var reader_lexer_size3272 = function() {
                                                                      return this.data["size"];
                                                                    };
                                                                    reader_lexer_size3272.def = true;
                                                                    obj3261.methods["size"] = reader_lexer_size3272;
                                                                    superDepth = origSuperDepth;
                                                                  };
                                                                  obj_init_3261.apply(obj3261, []);
                                                                  return obj3261;
                                                                };
                                                                func3260.paramCounts = [1];
                                                                obj3022.methods["commentToken"] = func3260;
                                                                func3260.definitionLine = 88;
                                                                func3260.definitionModule = "lexer";
                                                                  var func3273 = function(argcv) {    // method commentToken(1     )()object
                                                                    var curarg = 1;
                                                                    var var_s = arguments[curarg];
                                                                    curarg++;
                                                                    var inheritingObject = arguments[curarg++];
                                                                    // Start argument processing
                                                                    curarg = 1;
                                                                    curarg++;
                                                                    // End argument processing
                                                                    setModuleName("lexer");
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var obj3274 = Grace_allocObject(null, "commentToken");
                                                                    obj3274.definitionModule = "lexer";
                                                                    obj3274.definitionLine = 88;
                                                                    var inho3274 = inheritingObject;
                                                                    while (inho3274.superobj) inho3274 = inho3274.superobj;
                                                                    inho3274.superobj = obj3274;
                                                                    obj3274.data = inheritingObject.data;
                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                      obj3274._value = inheritingObject._value;
                                                                    obj3274.outer = this;
                                                                    var reader_lexer_outer3275 = function() {
                                                                      return this.outer;
                                                                    };
                                                                    obj3274.methods["outer"] = reader_lexer_outer3275;
                                                                    var obj_init_3274 = function() {
                                                                      var origSuperDepth = superDepth;
                                                                      superDepth = obj3274;
                                                                      setLineNumber(89);    // compilenode call
                                                                      var call3276 = callmethodChecked(superDepth, "outer", [0]);
                                                                      onOuter = true;
                                                                      onSelf = true;
                                                                      var call3277 = callmethodChecked(call3276, "token()object", [0, 1], this);
                                                                      obj3274.superobj = call3277;
                                                                      if (call3277.data) obj3274.data = call3277.data;
                                                                      if (call3277.hasOwnProperty('_value'))
                                                                          obj3274._value = call3277._value;
                                                                      setLineNumber(90);    // compilenode string
                                                                      var string3278 = new GraceString("comment");
                                                                      obj3274.data["kind"] = string3278;
                                                                      var reader_lexer_kind3279 = function() {
                                                                        return this.data["kind"];
                                                                      };
                                                                      reader_lexer_kind3279.def = true;
                                                                      obj3274.methods["kind"] = reader_lexer_kind3279;
                                                                      setLineNumber(91);    // compilenode identifier
                                                                      obj3274.data["value"] = var_s;
                                                                      var reader_lexer_value3280 = function() {
                                                                        return this.data["value"];
                                                                      };
                                                                      reader_lexer_value3280.def = true;
                                                                      obj3274.methods["value"] = reader_lexer_value3280;
                                                                      setLineNumber(92);    // compilenode identifier
                                                                      var call3282 = callmethodChecked(var_s, "size", [0]);
                                                                      var opresult3284 = callmethodChecked(call3282, "+", [1], new GraceNum(2));
                                                                      obj3274.data["size"] = opresult3284;
                                                                      var reader_lexer_size3285 = function() {
                                                                        return this.data["size"];
                                                                      };
                                                                      reader_lexer_size3285.def = true;
                                                                      obj3274.methods["size"] = reader_lexer_size3285;
                                                                      superDepth = origSuperDepth;
                                                                    };
                                                                    obj_init_3274.apply(inheritingObject, []);
                                                                    return obj3274;
                                                                    };
                                                                    obj3022.methods["commentToken()object"] = func3273;
                                                                  var func3286 = function(argcv) {    // method lBraceToken
                                                                    var returnTarget = invocationCount;
                                                                    invocationCount++;
                                                                    var curarg = 1;
                                                                    if (argcv[0] !== 0)
                                                                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lBraceToken"));
                                                                    setModuleName("lexer");
                                                                    setLineNumber(94);    // compilenode object
                                                                    var obj3287 = Grace_allocObject(null, "lBraceToken");
                                                                    obj3287.definitionModule = "lexer";
                                                                    obj3287.definitionLine = 94;
                                                                    obj3287.outer = this;
                                                                    var reader_lexer_outer3288 = function() {
                                                                      return this.outer;
                                                                    };
                                                                    obj3287.methods["outer"] = reader_lexer_outer3288;
                                                                    var obj_init_3287 = function() {
                                                                      var origSuperDepth = superDepth;
                                                                      superDepth = obj3287;
                                                                      setLineNumber(95);    // compilenode call
                                                                      var call3289 = callmethodChecked(superDepth, "outer", [0]);
                                                                      onOuter = true;
                                                                      onSelf = true;
                                                                      var call3290 = callmethodChecked(call3289, "token()object", [0, 1], this);
                                                                      obj3287.superobj = call3290;
                                                                      if (call3290.data) obj3287.data = call3290.data;
                                                                      if (call3290.hasOwnProperty('_value'))
                                                                          obj3287._value = call3290._value;
                                                                      setLineNumber(96);    // compilenode string
                                                                      var string3291 = new GraceString("lbrace");
                                                                      obj3287.data["kind"] = string3291;
                                                                      var reader_lexer_kind3292 = function() {
                                                                        return this.data["kind"];
                                                                      };
                                                                      reader_lexer_kind3292.def = true;
                                                                      obj3287.methods["kind"] = reader_lexer_kind3292;
                                                                      setLineNumber(97);    // compilenode string
                                                                      var string3293 = new GraceString("{");
                                                                      obj3287.data["value"] = string3293;
                                                                      var reader_lexer_value3294 = function() {
                                                                        return this.data["value"];
                                                                      };
                                                                      reader_lexer_value3294.def = true;
                                                                      obj3287.methods["value"] = reader_lexer_value3294;
                                                                      setLineNumber(98);    // compilenode num
                                                                      obj3287.data["size"] = new GraceNum(1);
                                                                      var reader_lexer_size3295 = function() {
                                                                        return this.data["size"];
                                                                      };
                                                                      reader_lexer_size3295.def = true;
                                                                      obj3287.methods["size"] = reader_lexer_size3295;
                                                                      superDepth = origSuperDepth;
                                                                    };
                                                                    obj_init_3287.apply(obj3287, []);
                                                                    return obj3287;
                                                                  };
                                                                  func3286.paramCounts = [0];
                                                                  obj3022.methods["lBraceToken"] = func3286;
                                                                  func3286.definitionLine = 94;
                                                                  func3286.definitionModule = "lexer";
                                                                    var func3296 = function(argcv) {    // method lBraceToken()object
                                                                      var curarg = 1;
                                                                      var inheritingObject = arguments[curarg++];
                                                                      // Start argument processing
                                                                      curarg = 1;
                                                                      // End argument processing
                                                                      setModuleName("lexer");
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var obj3297 = Grace_allocObject(null, "lBraceToken");
                                                                      obj3297.definitionModule = "lexer";
                                                                      obj3297.definitionLine = 94;
                                                                      var inho3297 = inheritingObject;
                                                                      while (inho3297.superobj) inho3297 = inho3297.superobj;
                                                                      inho3297.superobj = obj3297;
                                                                      obj3297.data = inheritingObject.data;
                                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                                        obj3297._value = inheritingObject._value;
                                                                      obj3297.outer = this;
                                                                      var reader_lexer_outer3298 = function() {
                                                                        return this.outer;
                                                                      };
                                                                      obj3297.methods["outer"] = reader_lexer_outer3298;
                                                                      var obj_init_3297 = function() {
                                                                        var origSuperDepth = superDepth;
                                                                        superDepth = obj3297;
                                                                        setLineNumber(95);    // compilenode call
                                                                        var call3299 = callmethodChecked(superDepth, "outer", [0]);
                                                                        onOuter = true;
                                                                        onSelf = true;
                                                                        var call3300 = callmethodChecked(call3299, "token()object", [0, 1], this);
                                                                        obj3297.superobj = call3300;
                                                                        if (call3300.data) obj3297.data = call3300.data;
                                                                        if (call3300.hasOwnProperty('_value'))
                                                                            obj3297._value = call3300._value;
                                                                        setLineNumber(96);    // compilenode string
                                                                        var string3301 = new GraceString("lbrace");
                                                                        obj3297.data["kind"] = string3301;
                                                                        var reader_lexer_kind3302 = function() {
                                                                          return this.data["kind"];
                                                                        };
                                                                        reader_lexer_kind3302.def = true;
                                                                        obj3297.methods["kind"] = reader_lexer_kind3302;
                                                                        setLineNumber(97);    // compilenode string
                                                                        var string3303 = new GraceString("{");
                                                                        obj3297.data["value"] = string3303;
                                                                        var reader_lexer_value3304 = function() {
                                                                          return this.data["value"];
                                                                        };
                                                                        reader_lexer_value3304.def = true;
                                                                        obj3297.methods["value"] = reader_lexer_value3304;
                                                                        setLineNumber(98);    // compilenode num
                                                                        obj3297.data["size"] = new GraceNum(1);
                                                                        var reader_lexer_size3305 = function() {
                                                                          return this.data["size"];
                                                                        };
                                                                        reader_lexer_size3305.def = true;
                                                                        obj3297.methods["size"] = reader_lexer_size3305;
                                                                        superDepth = origSuperDepth;
                                                                      };
                                                                      obj_init_3297.apply(inheritingObject, []);
                                                                      return obj3297;
                                                                      };
                                                                      obj3022.methods["lBraceToken()object"] = func3296;
                                                                    var func3306 = function(argcv) {    // method rBraceToken
                                                                      var returnTarget = invocationCount;
                                                                      invocationCount++;
                                                                      var curarg = 1;
                                                                      if (argcv[0] !== 0)
                                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rBraceToken"));
                                                                      setModuleName("lexer");
                                                                      setLineNumber(100);    // compilenode object
                                                                      var obj3307 = Grace_allocObject(null, "rBraceToken");
                                                                      obj3307.definitionModule = "lexer";
                                                                      obj3307.definitionLine = 100;
                                                                      obj3307.outer = this;
                                                                      var reader_lexer_outer3308 = function() {
                                                                        return this.outer;
                                                                      };
                                                                      obj3307.methods["outer"] = reader_lexer_outer3308;
                                                                      var obj_init_3307 = function() {
                                                                        var origSuperDepth = superDepth;
                                                                        superDepth = obj3307;
                                                                        setLineNumber(101);    // compilenode call
                                                                        var call3309 = callmethodChecked(superDepth, "outer", [0]);
                                                                        onOuter = true;
                                                                        onSelf = true;
                                                                        var call3310 = callmethodChecked(call3309, "token()object", [0, 1], this);
                                                                        obj3307.superobj = call3310;
                                                                        if (call3310.data) obj3307.data = call3310.data;
                                                                        if (call3310.hasOwnProperty('_value'))
                                                                            obj3307._value = call3310._value;
                                                                        setLineNumber(102);    // compilenode string
                                                                        var string3311 = new GraceString("rbrace");
                                                                        obj3307.data["kind"] = string3311;
                                                                        var reader_lexer_kind3312 = function() {
                                                                          return this.data["kind"];
                                                                        };
                                                                        reader_lexer_kind3312.def = true;
                                                                        obj3307.methods["kind"] = reader_lexer_kind3312;
                                                                        setLineNumber(103);    // compilenode string
                                                                        var string3313 = new GraceString("}");
                                                                        obj3307.data["value"] = string3313;
                                                                        var reader_lexer_value3314 = function() {
                                                                          return this.data["value"];
                                                                        };
                                                                        reader_lexer_value3314.def = true;
                                                                        obj3307.methods["value"] = reader_lexer_value3314;
                                                                        setLineNumber(104);    // compilenode num
                                                                        obj3307.data["size"] = new GraceNum(1);
                                                                        var reader_lexer_size3315 = function() {
                                                                          return this.data["size"];
                                                                        };
                                                                        reader_lexer_size3315.def = true;
                                                                        obj3307.methods["size"] = reader_lexer_size3315;
                                                                        superDepth = origSuperDepth;
                                                                      };
                                                                      obj_init_3307.apply(obj3307, []);
                                                                      return obj3307;
                                                                    };
                                                                    func3306.paramCounts = [0];
                                                                    obj3022.methods["rBraceToken"] = func3306;
                                                                    func3306.definitionLine = 100;
                                                                    func3306.definitionModule = "lexer";
                                                                      var func3316 = function(argcv) {    // method rBraceToken()object
                                                                        var curarg = 1;
                                                                        var inheritingObject = arguments[curarg++];
                                                                        // Start argument processing
                                                                        curarg = 1;
                                                                        // End argument processing
                                                                        setModuleName("lexer");
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var obj3317 = Grace_allocObject(null, "rBraceToken");
                                                                        obj3317.definitionModule = "lexer";
                                                                        obj3317.definitionLine = 100;
                                                                        var inho3317 = inheritingObject;
                                                                        while (inho3317.superobj) inho3317 = inho3317.superobj;
                                                                        inho3317.superobj = obj3317;
                                                                        obj3317.data = inheritingObject.data;
                                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                                          obj3317._value = inheritingObject._value;
                                                                        obj3317.outer = this;
                                                                        var reader_lexer_outer3318 = function() {
                                                                          return this.outer;
                                                                        };
                                                                        obj3317.methods["outer"] = reader_lexer_outer3318;
                                                                        var obj_init_3317 = function() {
                                                                          var origSuperDepth = superDepth;
                                                                          superDepth = obj3317;
                                                                          setLineNumber(101);    // compilenode call
                                                                          var call3319 = callmethodChecked(superDepth, "outer", [0]);
                                                                          onOuter = true;
                                                                          onSelf = true;
                                                                          var call3320 = callmethodChecked(call3319, "token()object", [0, 1], this);
                                                                          obj3317.superobj = call3320;
                                                                          if (call3320.data) obj3317.data = call3320.data;
                                                                          if (call3320.hasOwnProperty('_value'))
                                                                              obj3317._value = call3320._value;
                                                                          setLineNumber(102);    // compilenode string
                                                                          var string3321 = new GraceString("rbrace");
                                                                          obj3317.data["kind"] = string3321;
                                                                          var reader_lexer_kind3322 = function() {
                                                                            return this.data["kind"];
                                                                          };
                                                                          reader_lexer_kind3322.def = true;
                                                                          obj3317.methods["kind"] = reader_lexer_kind3322;
                                                                          setLineNumber(103);    // compilenode string
                                                                          var string3323 = new GraceString("}");
                                                                          obj3317.data["value"] = string3323;
                                                                          var reader_lexer_value3324 = function() {
                                                                            return this.data["value"];
                                                                          };
                                                                          reader_lexer_value3324.def = true;
                                                                          obj3317.methods["value"] = reader_lexer_value3324;
                                                                          setLineNumber(104);    // compilenode num
                                                                          obj3317.data["size"] = new GraceNum(1);
                                                                          var reader_lexer_size3325 = function() {
                                                                            return this.data["size"];
                                                                          };
                                                                          reader_lexer_size3325.def = true;
                                                                          obj3317.methods["size"] = reader_lexer_size3325;
                                                                          superDepth = origSuperDepth;
                                                                        };
                                                                        obj_init_3317.apply(inheritingObject, []);
                                                                        return obj3317;
                                                                        };
                                                                        obj3022.methods["rBraceToken()object"] = func3316;
                                                                      var func3326 = function(argcv) {    // method lParenToken
                                                                        var returnTarget = invocationCount;
                                                                        invocationCount++;
                                                                        var curarg = 1;
                                                                        if (argcv[0] !== 0)
                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lParenToken"));
                                                                        setModuleName("lexer");
                                                                        setLineNumber(106);    // compilenode object
                                                                        var obj3327 = Grace_allocObject(null, "lParenToken");
                                                                        obj3327.definitionModule = "lexer";
                                                                        obj3327.definitionLine = 106;
                                                                        obj3327.outer = this;
                                                                        var reader_lexer_outer3328 = function() {
                                                                          return this.outer;
                                                                        };
                                                                        obj3327.methods["outer"] = reader_lexer_outer3328;
                                                                        var obj_init_3327 = function() {
                                                                          var origSuperDepth = superDepth;
                                                                          superDepth = obj3327;
                                                                          setLineNumber(107);    // compilenode call
                                                                          var call3329 = callmethodChecked(superDepth, "outer", [0]);
                                                                          onOuter = true;
                                                                          onSelf = true;
                                                                          var call3330 = callmethodChecked(call3329, "token()object", [0, 1], this);
                                                                          obj3327.superobj = call3330;
                                                                          if (call3330.data) obj3327.data = call3330.data;
                                                                          if (call3330.hasOwnProperty('_value'))
                                                                              obj3327._value = call3330._value;
                                                                          setLineNumber(108);    // compilenode string
                                                                          var string3331 = new GraceString("lparen");
                                                                          obj3327.data["kind"] = string3331;
                                                                          var reader_lexer_kind3332 = function() {
                                                                            return this.data["kind"];
                                                                          };
                                                                          reader_lexer_kind3332.def = true;
                                                                          obj3327.methods["kind"] = reader_lexer_kind3332;
                                                                          setLineNumber(109);    // compilenode string
                                                                          var string3333 = new GraceString("(");
                                                                          obj3327.data["value"] = string3333;
                                                                          var reader_lexer_value3334 = function() {
                                                                            return this.data["value"];
                                                                          };
                                                                          reader_lexer_value3334.def = true;
                                                                          obj3327.methods["value"] = reader_lexer_value3334;
                                                                          setLineNumber(110);    // compilenode num
                                                                          obj3327.data["size"] = new GraceNum(1);
                                                                          var reader_lexer_size3335 = function() {
                                                                            return this.data["size"];
                                                                          };
                                                                          reader_lexer_size3335.def = true;
                                                                          obj3327.methods["size"] = reader_lexer_size3335;
                                                                          superDepth = origSuperDepth;
                                                                        };
                                                                        obj_init_3327.apply(obj3327, []);
                                                                        return obj3327;
                                                                      };
                                                                      func3326.paramCounts = [0];
                                                                      obj3022.methods["lParenToken"] = func3326;
                                                                      func3326.definitionLine = 106;
                                                                      func3326.definitionModule = "lexer";
                                                                        var func3336 = function(argcv) {    // method lParenToken()object
                                                                          var curarg = 1;
                                                                          var inheritingObject = arguments[curarg++];
                                                                          // Start argument processing
                                                                          curarg = 1;
                                                                          // End argument processing
                                                                          setModuleName("lexer");
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var obj3337 = Grace_allocObject(null, "lParenToken");
                                                                          obj3337.definitionModule = "lexer";
                                                                          obj3337.definitionLine = 106;
                                                                          var inho3337 = inheritingObject;
                                                                          while (inho3337.superobj) inho3337 = inho3337.superobj;
                                                                          inho3337.superobj = obj3337;
                                                                          obj3337.data = inheritingObject.data;
                                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                                            obj3337._value = inheritingObject._value;
                                                                          obj3337.outer = this;
                                                                          var reader_lexer_outer3338 = function() {
                                                                            return this.outer;
                                                                          };
                                                                          obj3337.methods["outer"] = reader_lexer_outer3338;
                                                                          var obj_init_3337 = function() {
                                                                            var origSuperDepth = superDepth;
                                                                            superDepth = obj3337;
                                                                            setLineNumber(107);    // compilenode call
                                                                            var call3339 = callmethodChecked(superDepth, "outer", [0]);
                                                                            onOuter = true;
                                                                            onSelf = true;
                                                                            var call3340 = callmethodChecked(call3339, "token()object", [0, 1], this);
                                                                            obj3337.superobj = call3340;
                                                                            if (call3340.data) obj3337.data = call3340.data;
                                                                            if (call3340.hasOwnProperty('_value'))
                                                                                obj3337._value = call3340._value;
                                                                            setLineNumber(108);    // compilenode string
                                                                            var string3341 = new GraceString("lparen");
                                                                            obj3337.data["kind"] = string3341;
                                                                            var reader_lexer_kind3342 = function() {
                                                                              return this.data["kind"];
                                                                            };
                                                                            reader_lexer_kind3342.def = true;
                                                                            obj3337.methods["kind"] = reader_lexer_kind3342;
                                                                            setLineNumber(109);    // compilenode string
                                                                            var string3343 = new GraceString("(");
                                                                            obj3337.data["value"] = string3343;
                                                                            var reader_lexer_value3344 = function() {
                                                                              return this.data["value"];
                                                                            };
                                                                            reader_lexer_value3344.def = true;
                                                                            obj3337.methods["value"] = reader_lexer_value3344;
                                                                            setLineNumber(110);    // compilenode num
                                                                            obj3337.data["size"] = new GraceNum(1);
                                                                            var reader_lexer_size3345 = function() {
                                                                              return this.data["size"];
                                                                            };
                                                                            reader_lexer_size3345.def = true;
                                                                            obj3337.methods["size"] = reader_lexer_size3345;
                                                                            superDepth = origSuperDepth;
                                                                          };
                                                                          obj_init_3337.apply(inheritingObject, []);
                                                                          return obj3337;
                                                                          };
                                                                          obj3022.methods["lParenToken()object"] = func3336;
                                                                        var func3346 = function(argcv) {    // method rParenToken
                                                                          var returnTarget = invocationCount;
                                                                          invocationCount++;
                                                                          var curarg = 1;
                                                                          if (argcv[0] !== 0)
                                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rParenToken"));
                                                                          setModuleName("lexer");
                                                                          setLineNumber(112);    // compilenode object
                                                                          var obj3347 = Grace_allocObject(null, "rParenToken");
                                                                          obj3347.definitionModule = "lexer";
                                                                          obj3347.definitionLine = 112;
                                                                          obj3347.outer = this;
                                                                          var reader_lexer_outer3348 = function() {
                                                                            return this.outer;
                                                                          };
                                                                          obj3347.methods["outer"] = reader_lexer_outer3348;
                                                                          var obj_init_3347 = function() {
                                                                            var origSuperDepth = superDepth;
                                                                            superDepth = obj3347;
                                                                            setLineNumber(113);    // compilenode call
                                                                            var call3349 = callmethodChecked(superDepth, "outer", [0]);
                                                                            onOuter = true;
                                                                            onSelf = true;
                                                                            var call3350 = callmethodChecked(call3349, "token()object", [0, 1], this);
                                                                            obj3347.superobj = call3350;
                                                                            if (call3350.data) obj3347.data = call3350.data;
                                                                            if (call3350.hasOwnProperty('_value'))
                                                                                obj3347._value = call3350._value;
                                                                            setLineNumber(114);    // compilenode string
                                                                            var string3351 = new GraceString("rparen");
                                                                            obj3347.data["kind"] = string3351;
                                                                            var reader_lexer_kind3352 = function() {
                                                                              return this.data["kind"];
                                                                            };
                                                                            reader_lexer_kind3352.def = true;
                                                                            obj3347.methods["kind"] = reader_lexer_kind3352;
                                                                            setLineNumber(115);    // compilenode string
                                                                            var string3353 = new GraceString(")");
                                                                            obj3347.data["value"] = string3353;
                                                                            var reader_lexer_value3354 = function() {
                                                                              return this.data["value"];
                                                                            };
                                                                            reader_lexer_value3354.def = true;
                                                                            obj3347.methods["value"] = reader_lexer_value3354;
                                                                            setLineNumber(116);    // compilenode num
                                                                            obj3347.data["size"] = new GraceNum(1);
                                                                            var reader_lexer_size3355 = function() {
                                                                              return this.data["size"];
                                                                            };
                                                                            reader_lexer_size3355.def = true;
                                                                            obj3347.methods["size"] = reader_lexer_size3355;
                                                                            superDepth = origSuperDepth;
                                                                          };
                                                                          obj_init_3347.apply(obj3347, []);
                                                                          return obj3347;
                                                                        };
                                                                        func3346.paramCounts = [0];
                                                                        obj3022.methods["rParenToken"] = func3346;
                                                                        func3346.definitionLine = 112;
                                                                        func3346.definitionModule = "lexer";
                                                                          var func3356 = function(argcv) {    // method rParenToken()object
                                                                            var curarg = 1;
                                                                            var inheritingObject = arguments[curarg++];
                                                                            // Start argument processing
                                                                            curarg = 1;
                                                                            // End argument processing
                                                                            setModuleName("lexer");
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var obj3357 = Grace_allocObject(null, "rParenToken");
                                                                            obj3357.definitionModule = "lexer";
                                                                            obj3357.definitionLine = 112;
                                                                            var inho3357 = inheritingObject;
                                                                            while (inho3357.superobj) inho3357 = inho3357.superobj;
                                                                            inho3357.superobj = obj3357;
                                                                            obj3357.data = inheritingObject.data;
                                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                                              obj3357._value = inheritingObject._value;
                                                                            obj3357.outer = this;
                                                                            var reader_lexer_outer3358 = function() {
                                                                              return this.outer;
                                                                            };
                                                                            obj3357.methods["outer"] = reader_lexer_outer3358;
                                                                            var obj_init_3357 = function() {
                                                                              var origSuperDepth = superDepth;
                                                                              superDepth = obj3357;
                                                                              setLineNumber(113);    // compilenode call
                                                                              var call3359 = callmethodChecked(superDepth, "outer", [0]);
                                                                              onOuter = true;
                                                                              onSelf = true;
                                                                              var call3360 = callmethodChecked(call3359, "token()object", [0, 1], this);
                                                                              obj3357.superobj = call3360;
                                                                              if (call3360.data) obj3357.data = call3360.data;
                                                                              if (call3360.hasOwnProperty('_value'))
                                                                                  obj3357._value = call3360._value;
                                                                              setLineNumber(114);    // compilenode string
                                                                              var string3361 = new GraceString("rparen");
                                                                              obj3357.data["kind"] = string3361;
                                                                              var reader_lexer_kind3362 = function() {
                                                                                return this.data["kind"];
                                                                              };
                                                                              reader_lexer_kind3362.def = true;
                                                                              obj3357.methods["kind"] = reader_lexer_kind3362;
                                                                              setLineNumber(115);    // compilenode string
                                                                              var string3363 = new GraceString(")");
                                                                              obj3357.data["value"] = string3363;
                                                                              var reader_lexer_value3364 = function() {
                                                                                return this.data["value"];
                                                                              };
                                                                              reader_lexer_value3364.def = true;
                                                                              obj3357.methods["value"] = reader_lexer_value3364;
                                                                              setLineNumber(116);    // compilenode num
                                                                              obj3357.data["size"] = new GraceNum(1);
                                                                              var reader_lexer_size3365 = function() {
                                                                                return this.data["size"];
                                                                              };
                                                                              reader_lexer_size3365.def = true;
                                                                              obj3357.methods["size"] = reader_lexer_size3365;
                                                                              superDepth = origSuperDepth;
                                                                            };
                                                                            obj_init_3357.apply(inheritingObject, []);
                                                                            return obj3357;
                                                                            };
                                                                            obj3022.methods["rParenToken()object"] = func3356;
                                                                          var func3366 = function(argcv) {    // method lSquareToken
                                                                            var returnTarget = invocationCount;
                                                                            invocationCount++;
                                                                            var curarg = 1;
                                                                            if (argcv[0] !== 0)
                                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lSquareToken"));
                                                                            setModuleName("lexer");
                                                                            setLineNumber(118);    // compilenode object
                                                                            var obj3367 = Grace_allocObject(null, "lSquareToken");
                                                                            obj3367.definitionModule = "lexer";
                                                                            obj3367.definitionLine = 118;
                                                                            obj3367.outer = this;
                                                                            var reader_lexer_outer3368 = function() {
                                                                              return this.outer;
                                                                            };
                                                                            obj3367.methods["outer"] = reader_lexer_outer3368;
                                                                            var obj_init_3367 = function() {
                                                                              var origSuperDepth = superDepth;
                                                                              superDepth = obj3367;
                                                                              setLineNumber(119);    // compilenode call
                                                                              var call3369 = callmethodChecked(superDepth, "outer", [0]);
                                                                              onOuter = true;
                                                                              onSelf = true;
                                                                              var call3370 = callmethodChecked(call3369, "token()object", [0, 1], this);
                                                                              obj3367.superobj = call3370;
                                                                              if (call3370.data) obj3367.data = call3370.data;
                                                                              if (call3370.hasOwnProperty('_value'))
                                                                                  obj3367._value = call3370._value;
                                                                              setLineNumber(120);    // compilenode string
                                                                              var string3371 = new GraceString("lsquare");
                                                                              obj3367.data["kind"] = string3371;
                                                                              var reader_lexer_kind3372 = function() {
                                                                                return this.data["kind"];
                                                                              };
                                                                              reader_lexer_kind3372.def = true;
                                                                              obj3367.methods["kind"] = reader_lexer_kind3372;
                                                                              setLineNumber(121);    // compilenode string
                                                                              var string3373 = new GraceString("[");
                                                                              obj3367.data["value"] = string3373;
                                                                              var reader_lexer_value3374 = function() {
                                                                                return this.data["value"];
                                                                              };
                                                                              reader_lexer_value3374.def = true;
                                                                              obj3367.methods["value"] = reader_lexer_value3374;
                                                                              setLineNumber(122);    // compilenode num
                                                                              obj3367.data["size"] = new GraceNum(1);
                                                                              var reader_lexer_size3375 = function() {
                                                                                return this.data["size"];
                                                                              };
                                                                              reader_lexer_size3375.def = true;
                                                                              obj3367.methods["size"] = reader_lexer_size3375;
                                                                              superDepth = origSuperDepth;
                                                                            };
                                                                            obj_init_3367.apply(obj3367, []);
                                                                            return obj3367;
                                                                          };
                                                                          func3366.paramCounts = [0];
                                                                          obj3022.methods["lSquareToken"] = func3366;
                                                                          func3366.definitionLine = 118;
                                                                          func3366.definitionModule = "lexer";
                                                                            var func3376 = function(argcv) {    // method lSquareToken()object
                                                                              var curarg = 1;
                                                                              var inheritingObject = arguments[curarg++];
                                                                              // Start argument processing
                                                                              curarg = 1;
                                                                              // End argument processing
                                                                              setModuleName("lexer");
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var obj3377 = Grace_allocObject(null, "lSquareToken");
                                                                              obj3377.definitionModule = "lexer";
                                                                              obj3377.definitionLine = 118;
                                                                              var inho3377 = inheritingObject;
                                                                              while (inho3377.superobj) inho3377 = inho3377.superobj;
                                                                              inho3377.superobj = obj3377;
                                                                              obj3377.data = inheritingObject.data;
                                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                                obj3377._value = inheritingObject._value;
                                                                              obj3377.outer = this;
                                                                              var reader_lexer_outer3378 = function() {
                                                                                return this.outer;
                                                                              };
                                                                              obj3377.methods["outer"] = reader_lexer_outer3378;
                                                                              var obj_init_3377 = function() {
                                                                                var origSuperDepth = superDepth;
                                                                                superDepth = obj3377;
                                                                                setLineNumber(119);    // compilenode call
                                                                                var call3379 = callmethodChecked(superDepth, "outer", [0]);
                                                                                onOuter = true;
                                                                                onSelf = true;
                                                                                var call3380 = callmethodChecked(call3379, "token()object", [0, 1], this);
                                                                                obj3377.superobj = call3380;
                                                                                if (call3380.data) obj3377.data = call3380.data;
                                                                                if (call3380.hasOwnProperty('_value'))
                                                                                    obj3377._value = call3380._value;
                                                                                setLineNumber(120);    // compilenode string
                                                                                var string3381 = new GraceString("lsquare");
                                                                                obj3377.data["kind"] = string3381;
                                                                                var reader_lexer_kind3382 = function() {
                                                                                  return this.data["kind"];
                                                                                };
                                                                                reader_lexer_kind3382.def = true;
                                                                                obj3377.methods["kind"] = reader_lexer_kind3382;
                                                                                setLineNumber(121);    // compilenode string
                                                                                var string3383 = new GraceString("[");
                                                                                obj3377.data["value"] = string3383;
                                                                                var reader_lexer_value3384 = function() {
                                                                                  return this.data["value"];
                                                                                };
                                                                                reader_lexer_value3384.def = true;
                                                                                obj3377.methods["value"] = reader_lexer_value3384;
                                                                                setLineNumber(122);    // compilenode num
                                                                                obj3377.data["size"] = new GraceNum(1);
                                                                                var reader_lexer_size3385 = function() {
                                                                                  return this.data["size"];
                                                                                };
                                                                                reader_lexer_size3385.def = true;
                                                                                obj3377.methods["size"] = reader_lexer_size3385;
                                                                                superDepth = origSuperDepth;
                                                                              };
                                                                              obj_init_3377.apply(inheritingObject, []);
                                                                              return obj3377;
                                                                              };
                                                                              obj3022.methods["lSquareToken()object"] = func3376;
                                                                            var func3386 = function(argcv) {    // method rSquareToken
                                                                              var returnTarget = invocationCount;
                                                                              invocationCount++;
                                                                              var curarg = 1;
                                                                              if (argcv[0] !== 0)
                                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rSquareToken"));
                                                                              setModuleName("lexer");
                                                                              setLineNumber(124);    // compilenode object
                                                                              var obj3387 = Grace_allocObject(null, "rSquareToken");
                                                                              obj3387.definitionModule = "lexer";
                                                                              obj3387.definitionLine = 124;
                                                                              obj3387.outer = this;
                                                                              var reader_lexer_outer3388 = function() {
                                                                                return this.outer;
                                                                              };
                                                                              obj3387.methods["outer"] = reader_lexer_outer3388;
                                                                              var obj_init_3387 = function() {
                                                                                var origSuperDepth = superDepth;
                                                                                superDepth = obj3387;
                                                                                setLineNumber(125);    // compilenode call
                                                                                var call3389 = callmethodChecked(superDepth, "outer", [0]);
                                                                                onOuter = true;
                                                                                onSelf = true;
                                                                                var call3390 = callmethodChecked(call3389, "token()object", [0, 1], this);
                                                                                obj3387.superobj = call3390;
                                                                                if (call3390.data) obj3387.data = call3390.data;
                                                                                if (call3390.hasOwnProperty('_value'))
                                                                                    obj3387._value = call3390._value;
                                                                                setLineNumber(126);    // compilenode string
                                                                                var string3391 = new GraceString("rsquare");
                                                                                obj3387.data["kind"] = string3391;
                                                                                var reader_lexer_kind3392 = function() {
                                                                                  return this.data["kind"];
                                                                                };
                                                                                reader_lexer_kind3392.def = true;
                                                                                obj3387.methods["kind"] = reader_lexer_kind3392;
                                                                                setLineNumber(127);    // compilenode string
                                                                                var string3393 = new GraceString("]");
                                                                                obj3387.data["value"] = string3393;
                                                                                var reader_lexer_value3394 = function() {
                                                                                  return this.data["value"];
                                                                                };
                                                                                reader_lexer_value3394.def = true;
                                                                                obj3387.methods["value"] = reader_lexer_value3394;
                                                                                setLineNumber(128);    // compilenode num
                                                                                obj3387.data["size"] = new GraceNum(1);
                                                                                var reader_lexer_size3395 = function() {
                                                                                  return this.data["size"];
                                                                                };
                                                                                reader_lexer_size3395.def = true;
                                                                                obj3387.methods["size"] = reader_lexer_size3395;
                                                                                superDepth = origSuperDepth;
                                                                              };
                                                                              obj_init_3387.apply(obj3387, []);
                                                                              return obj3387;
                                                                            };
                                                                            func3386.paramCounts = [0];
                                                                            obj3022.methods["rSquareToken"] = func3386;
                                                                            func3386.definitionLine = 124;
                                                                            func3386.definitionModule = "lexer";
                                                                              var func3396 = function(argcv) {    // method rSquareToken()object
                                                                                var curarg = 1;
                                                                                var inheritingObject = arguments[curarg++];
                                                                                // Start argument processing
                                                                                curarg = 1;
                                                                                // End argument processing
                                                                                setModuleName("lexer");
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var obj3397 = Grace_allocObject(null, "rSquareToken");
                                                                                obj3397.definitionModule = "lexer";
                                                                                obj3397.definitionLine = 124;
                                                                                var inho3397 = inheritingObject;
                                                                                while (inho3397.superobj) inho3397 = inho3397.superobj;
                                                                                inho3397.superobj = obj3397;
                                                                                obj3397.data = inheritingObject.data;
                                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                                  obj3397._value = inheritingObject._value;
                                                                                obj3397.outer = this;
                                                                                var reader_lexer_outer3398 = function() {
                                                                                  return this.outer;
                                                                                };
                                                                                obj3397.methods["outer"] = reader_lexer_outer3398;
                                                                                var obj_init_3397 = function() {
                                                                                  var origSuperDepth = superDepth;
                                                                                  superDepth = obj3397;
                                                                                  setLineNumber(125);    // compilenode call
                                                                                  var call3399 = callmethodChecked(superDepth, "outer", [0]);
                                                                                  onOuter = true;
                                                                                  onSelf = true;
                                                                                  var call3400 = callmethodChecked(call3399, "token()object", [0, 1], this);
                                                                                  obj3397.superobj = call3400;
                                                                                  if (call3400.data) obj3397.data = call3400.data;
                                                                                  if (call3400.hasOwnProperty('_value'))
                                                                                      obj3397._value = call3400._value;
                                                                                  setLineNumber(126);    // compilenode string
                                                                                  var string3401 = new GraceString("rsquare");
                                                                                  obj3397.data["kind"] = string3401;
                                                                                  var reader_lexer_kind3402 = function() {
                                                                                    return this.data["kind"];
                                                                                  };
                                                                                  reader_lexer_kind3402.def = true;
                                                                                  obj3397.methods["kind"] = reader_lexer_kind3402;
                                                                                  setLineNumber(127);    // compilenode string
                                                                                  var string3403 = new GraceString("]");
                                                                                  obj3397.data["value"] = string3403;
                                                                                  var reader_lexer_value3404 = function() {
                                                                                    return this.data["value"];
                                                                                  };
                                                                                  reader_lexer_value3404.def = true;
                                                                                  obj3397.methods["value"] = reader_lexer_value3404;
                                                                                  setLineNumber(128);    // compilenode num
                                                                                  obj3397.data["size"] = new GraceNum(1);
                                                                                  var reader_lexer_size3405 = function() {
                                                                                    return this.data["size"];
                                                                                  };
                                                                                  reader_lexer_size3405.def = true;
                                                                                  obj3397.methods["size"] = reader_lexer_size3405;
                                                                                  superDepth = origSuperDepth;
                                                                                };
                                                                                obj_init_3397.apply(inheritingObject, []);
                                                                                return obj3397;
                                                                                };
                                                                                obj3022.methods["rSquareToken()object"] = func3396;
                                                                              var func3406 = function(argcv) {    // method commaToken
                                                                                var returnTarget = invocationCount;
                                                                                invocationCount++;
                                                                                var curarg = 1;
                                                                                if (argcv[0] !== 0)
                                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for commaToken"));
                                                                                setModuleName("lexer");
                                                                                setLineNumber(130);    // compilenode object
                                                                                var obj3407 = Grace_allocObject(null, "commaToken");
                                                                                obj3407.definitionModule = "lexer";
                                                                                obj3407.definitionLine = 130;
                                                                                obj3407.outer = this;
                                                                                var reader_lexer_outer3408 = function() {
                                                                                  return this.outer;
                                                                                };
                                                                                obj3407.methods["outer"] = reader_lexer_outer3408;
                                                                                var obj_init_3407 = function() {
                                                                                  var origSuperDepth = superDepth;
                                                                                  superDepth = obj3407;
                                                                                  setLineNumber(131);    // compilenode call
                                                                                  var call3409 = callmethodChecked(superDepth, "outer", [0]);
                                                                                  onOuter = true;
                                                                                  onSelf = true;
                                                                                  var call3410 = callmethodChecked(call3409, "token()object", [0, 1], this);
                                                                                  obj3407.superobj = call3410;
                                                                                  if (call3410.data) obj3407.data = call3410.data;
                                                                                  if (call3410.hasOwnProperty('_value'))
                                                                                      obj3407._value = call3410._value;
                                                                                  setLineNumber(132);    // compilenode string
                                                                                  var string3411 = new GraceString("comma");
                                                                                  obj3407.data["kind"] = string3411;
                                                                                  var reader_lexer_kind3412 = function() {
                                                                                    return this.data["kind"];
                                                                                  };
                                                                                  reader_lexer_kind3412.def = true;
                                                                                  obj3407.methods["kind"] = reader_lexer_kind3412;
                                                                                  setLineNumber(133);    // compilenode string
                                                                                  var string3413 = new GraceString(",");
                                                                                  obj3407.data["value"] = string3413;
                                                                                  var reader_lexer_value3414 = function() {
                                                                                    return this.data["value"];
                                                                                  };
                                                                                  reader_lexer_value3414.def = true;
                                                                                  obj3407.methods["value"] = reader_lexer_value3414;
                                                                                  setLineNumber(134);    // compilenode num
                                                                                  obj3407.data["size"] = new GraceNum(1);
                                                                                  var reader_lexer_size3415 = function() {
                                                                                    return this.data["size"];
                                                                                  };
                                                                                  reader_lexer_size3415.def = true;
                                                                                  obj3407.methods["size"] = reader_lexer_size3415;
                                                                                  superDepth = origSuperDepth;
                                                                                };
                                                                                obj_init_3407.apply(obj3407, []);
                                                                                return obj3407;
                                                                              };
                                                                              func3406.paramCounts = [0];
                                                                              obj3022.methods["commaToken"] = func3406;
                                                                              func3406.definitionLine = 130;
                                                                              func3406.definitionModule = "lexer";
                                                                                var func3416 = function(argcv) {    // method commaToken()object
                                                                                  var curarg = 1;
                                                                                  var inheritingObject = arguments[curarg++];
                                                                                  // Start argument processing
                                                                                  curarg = 1;
                                                                                  // End argument processing
                                                                                  setModuleName("lexer");
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var obj3417 = Grace_allocObject(null, "commaToken");
                                                                                  obj3417.definitionModule = "lexer";
                                                                                  obj3417.definitionLine = 130;
                                                                                  var inho3417 = inheritingObject;
                                                                                  while (inho3417.superobj) inho3417 = inho3417.superobj;
                                                                                  inho3417.superobj = obj3417;
                                                                                  obj3417.data = inheritingObject.data;
                                                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                                                    obj3417._value = inheritingObject._value;
                                                                                  obj3417.outer = this;
                                                                                  var reader_lexer_outer3418 = function() {
                                                                                    return this.outer;
                                                                                  };
                                                                                  obj3417.methods["outer"] = reader_lexer_outer3418;
                                                                                  var obj_init_3417 = function() {
                                                                                    var origSuperDepth = superDepth;
                                                                                    superDepth = obj3417;
                                                                                    setLineNumber(131);    // compilenode call
                                                                                    var call3419 = callmethodChecked(superDepth, "outer", [0]);
                                                                                    onOuter = true;
                                                                                    onSelf = true;
                                                                                    var call3420 = callmethodChecked(call3419, "token()object", [0, 1], this);
                                                                                    obj3417.superobj = call3420;
                                                                                    if (call3420.data) obj3417.data = call3420.data;
                                                                                    if (call3420.hasOwnProperty('_value'))
                                                                                        obj3417._value = call3420._value;
                                                                                    setLineNumber(132);    // compilenode string
                                                                                    var string3421 = new GraceString("comma");
                                                                                    obj3417.data["kind"] = string3421;
                                                                                    var reader_lexer_kind3422 = function() {
                                                                                      return this.data["kind"];
                                                                                    };
                                                                                    reader_lexer_kind3422.def = true;
                                                                                    obj3417.methods["kind"] = reader_lexer_kind3422;
                                                                                    setLineNumber(133);    // compilenode string
                                                                                    var string3423 = new GraceString(",");
                                                                                    obj3417.data["value"] = string3423;
                                                                                    var reader_lexer_value3424 = function() {
                                                                                      return this.data["value"];
                                                                                    };
                                                                                    reader_lexer_value3424.def = true;
                                                                                    obj3417.methods["value"] = reader_lexer_value3424;
                                                                                    setLineNumber(134);    // compilenode num
                                                                                    obj3417.data["size"] = new GraceNum(1);
                                                                                    var reader_lexer_size3425 = function() {
                                                                                      return this.data["size"];
                                                                                    };
                                                                                    reader_lexer_size3425.def = true;
                                                                                    obj3417.methods["size"] = reader_lexer_size3425;
                                                                                    superDepth = origSuperDepth;
                                                                                  };
                                                                                  obj_init_3417.apply(inheritingObject, []);
                                                                                  return obj3417;
                                                                                  };
                                                                                  obj3022.methods["commaToken()object"] = func3416;
                                                                                var func3426 = function(argcv) {    // method colonToken
                                                                                  var returnTarget = invocationCount;
                                                                                  invocationCount++;
                                                                                  var curarg = 1;
                                                                                  if (argcv[0] !== 0)
                                                                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for colonToken"));
                                                                                  setModuleName("lexer");
                                                                                  setLineNumber(136);    // compilenode object
                                                                                  var obj3427 = Grace_allocObject(null, "colonToken");
                                                                                  obj3427.definitionModule = "lexer";
                                                                                  obj3427.definitionLine = 136;
                                                                                  obj3427.outer = this;
                                                                                  var reader_lexer_outer3428 = function() {
                                                                                    return this.outer;
                                                                                  };
                                                                                  obj3427.methods["outer"] = reader_lexer_outer3428;
                                                                                  var obj_init_3427 = function() {
                                                                                    var origSuperDepth = superDepth;
                                                                                    superDepth = obj3427;
                                                                                    setLineNumber(137);    // compilenode call
                                                                                    var call3429 = callmethodChecked(superDepth, "outer", [0]);
                                                                                    onOuter = true;
                                                                                    onSelf = true;
                                                                                    var call3430 = callmethodChecked(call3429, "token()object", [0, 1], this);
                                                                                    obj3427.superobj = call3430;
                                                                                    if (call3430.data) obj3427.data = call3430.data;
                                                                                    if (call3430.hasOwnProperty('_value'))
                                                                                        obj3427._value = call3430._value;
                                                                                    setLineNumber(138);    // compilenode string
                                                                                    var string3431 = new GraceString("colon");
                                                                                    obj3427.data["kind"] = string3431;
                                                                                    var reader_lexer_kind3432 = function() {
                                                                                      return this.data["kind"];
                                                                                    };
                                                                                    reader_lexer_kind3432.def = true;
                                                                                    obj3427.methods["kind"] = reader_lexer_kind3432;
                                                                                    setLineNumber(139);    // compilenode string
                                                                                    var string3433 = new GraceString(":");
                                                                                    obj3427.data["value"] = string3433;
                                                                                    var reader_lexer_value3434 = function() {
                                                                                      return this.data["value"];
                                                                                    };
                                                                                    reader_lexer_value3434.def = true;
                                                                                    obj3427.methods["value"] = reader_lexer_value3434;
                                                                                    setLineNumber(140);    // compilenode num
                                                                                    obj3427.data["size"] = new GraceNum(1);
                                                                                    var reader_lexer_size3435 = function() {
                                                                                      return this.data["size"];
                                                                                    };
                                                                                    reader_lexer_size3435.def = true;
                                                                                    obj3427.methods["size"] = reader_lexer_size3435;
                                                                                    superDepth = origSuperDepth;
                                                                                  };
                                                                                  obj_init_3427.apply(obj3427, []);
                                                                                  return obj3427;
                                                                                };
                                                                                func3426.paramCounts = [0];
                                                                                obj3022.methods["colonToken"] = func3426;
                                                                                func3426.definitionLine = 136;
                                                                                func3426.definitionModule = "lexer";
                                                                                  var func3436 = function(argcv) {    // method colonToken()object
                                                                                    var curarg = 1;
                                                                                    var inheritingObject = arguments[curarg++];
                                                                                    // Start argument processing
                                                                                    curarg = 1;
                                                                                    // End argument processing
                                                                                    setModuleName("lexer");
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var obj3437 = Grace_allocObject(null, "colonToken");
                                                                                    obj3437.definitionModule = "lexer";
                                                                                    obj3437.definitionLine = 136;
                                                                                    var inho3437 = inheritingObject;
                                                                                    while (inho3437.superobj) inho3437 = inho3437.superobj;
                                                                                    inho3437.superobj = obj3437;
                                                                                    obj3437.data = inheritingObject.data;
                                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                                      obj3437._value = inheritingObject._value;
                                                                                    obj3437.outer = this;
                                                                                    var reader_lexer_outer3438 = function() {
                                                                                      return this.outer;
                                                                                    };
                                                                                    obj3437.methods["outer"] = reader_lexer_outer3438;
                                                                                    var obj_init_3437 = function() {
                                                                                      var origSuperDepth = superDepth;
                                                                                      superDepth = obj3437;
                                                                                      setLineNumber(137);    // compilenode call
                                                                                      var call3439 = callmethodChecked(superDepth, "outer", [0]);
                                                                                      onOuter = true;
                                                                                      onSelf = true;
                                                                                      var call3440 = callmethodChecked(call3439, "token()object", [0, 1], this);
                                                                                      obj3437.superobj = call3440;
                                                                                      if (call3440.data) obj3437.data = call3440.data;
                                                                                      if (call3440.hasOwnProperty('_value'))
                                                                                          obj3437._value = call3440._value;
                                                                                      setLineNumber(138);    // compilenode string
                                                                                      var string3441 = new GraceString("colon");
                                                                                      obj3437.data["kind"] = string3441;
                                                                                      var reader_lexer_kind3442 = function() {
                                                                                        return this.data["kind"];
                                                                                      };
                                                                                      reader_lexer_kind3442.def = true;
                                                                                      obj3437.methods["kind"] = reader_lexer_kind3442;
                                                                                      setLineNumber(139);    // compilenode string
                                                                                      var string3443 = new GraceString(":");
                                                                                      obj3437.data["value"] = string3443;
                                                                                      var reader_lexer_value3444 = function() {
                                                                                        return this.data["value"];
                                                                                      };
                                                                                      reader_lexer_value3444.def = true;
                                                                                      obj3437.methods["value"] = reader_lexer_value3444;
                                                                                      setLineNumber(140);    // compilenode num
                                                                                      obj3437.data["size"] = new GraceNum(1);
                                                                                      var reader_lexer_size3445 = function() {
                                                                                        return this.data["size"];
                                                                                      };
                                                                                      reader_lexer_size3445.def = true;
                                                                                      obj3437.methods["size"] = reader_lexer_size3445;
                                                                                      superDepth = origSuperDepth;
                                                                                    };
                                                                                    obj_init_3437.apply(inheritingObject, []);
                                                                                    return obj3437;
                                                                                    };
                                                                                    obj3022.methods["colonToken()object"] = func3436;
                                                                                  var func3446 = function(argcv) {    // method dotToken
                                                                                    var returnTarget = invocationCount;
                                                                                    invocationCount++;
                                                                                    var curarg = 1;
                                                                                    if (argcv[0] !== 0)
                                                                                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for dotToken"));
                                                                                    setModuleName("lexer");
                                                                                    setLineNumber(142);    // compilenode object
                                                                                    var obj3447 = Grace_allocObject(null, "dotToken");
                                                                                    obj3447.definitionModule = "lexer";
                                                                                    obj3447.definitionLine = 142;
                                                                                    obj3447.outer = this;
                                                                                    var reader_lexer_outer3448 = function() {
                                                                                      return this.outer;
                                                                                    };
                                                                                    obj3447.methods["outer"] = reader_lexer_outer3448;
                                                                                    var obj_init_3447 = function() {
                                                                                      var origSuperDepth = superDepth;
                                                                                      superDepth = obj3447;
                                                                                      setLineNumber(143);    // compilenode call
                                                                                      var call3449 = callmethodChecked(superDepth, "outer", [0]);
                                                                                      onOuter = true;
                                                                                      onSelf = true;
                                                                                      var call3450 = callmethodChecked(call3449, "token()object", [0, 1], this);
                                                                                      obj3447.superobj = call3450;
                                                                                      if (call3450.data) obj3447.data = call3450.data;
                                                                                      if (call3450.hasOwnProperty('_value'))
                                                                                          obj3447._value = call3450._value;
                                                                                      setLineNumber(144);    // compilenode string
                                                                                      var string3451 = new GraceString("dot");
                                                                                      obj3447.data["kind"] = string3451;
                                                                                      var reader_lexer_kind3452 = function() {
                                                                                        return this.data["kind"];
                                                                                      };
                                                                                      reader_lexer_kind3452.def = true;
                                                                                      obj3447.methods["kind"] = reader_lexer_kind3452;
                                                                                      setLineNumber(145);    // compilenode string
                                                                                      var string3453 = new GraceString(".");
                                                                                      obj3447.data["value"] = string3453;
                                                                                      var reader_lexer_value3454 = function() {
                                                                                        return this.data["value"];
                                                                                      };
                                                                                      reader_lexer_value3454.def = true;
                                                                                      obj3447.methods["value"] = reader_lexer_value3454;
                                                                                      setLineNumber(146);    // compilenode num
                                                                                      obj3447.data["size"] = new GraceNum(1);
                                                                                      var reader_lexer_size3455 = function() {
                                                                                        return this.data["size"];
                                                                                      };
                                                                                      reader_lexer_size3455.def = true;
                                                                                      obj3447.methods["size"] = reader_lexer_size3455;
                                                                                      superDepth = origSuperDepth;
                                                                                    };
                                                                                    obj_init_3447.apply(obj3447, []);
                                                                                    return obj3447;
                                                                                  };
                                                                                  func3446.paramCounts = [0];
                                                                                  obj3022.methods["dotToken"] = func3446;
                                                                                  func3446.definitionLine = 142;
                                                                                  func3446.definitionModule = "lexer";
                                                                                    var func3456 = function(argcv) {    // method dotToken()object
                                                                                      var curarg = 1;
                                                                                      var inheritingObject = arguments[curarg++];
                                                                                      // Start argument processing
                                                                                      curarg = 1;
                                                                                      // End argument processing
                                                                                      setModuleName("lexer");
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var obj3457 = Grace_allocObject(null, "dotToken");
                                                                                      obj3457.definitionModule = "lexer";
                                                                                      obj3457.definitionLine = 142;
                                                                                      var inho3457 = inheritingObject;
                                                                                      while (inho3457.superobj) inho3457 = inho3457.superobj;
                                                                                      inho3457.superobj = obj3457;
                                                                                      obj3457.data = inheritingObject.data;
                                                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                                                        obj3457._value = inheritingObject._value;
                                                                                      obj3457.outer = this;
                                                                                      var reader_lexer_outer3458 = function() {
                                                                                        return this.outer;
                                                                                      };
                                                                                      obj3457.methods["outer"] = reader_lexer_outer3458;
                                                                                      var obj_init_3457 = function() {
                                                                                        var origSuperDepth = superDepth;
                                                                                        superDepth = obj3457;
                                                                                        setLineNumber(143);    // compilenode call
                                                                                        var call3459 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onOuter = true;
                                                                                        onSelf = true;
                                                                                        var call3460 = callmethodChecked(call3459, "token()object", [0, 1], this);
                                                                                        obj3457.superobj = call3460;
                                                                                        if (call3460.data) obj3457.data = call3460.data;
                                                                                        if (call3460.hasOwnProperty('_value'))
                                                                                            obj3457._value = call3460._value;
                                                                                        setLineNumber(144);    // compilenode string
                                                                                        var string3461 = new GraceString("dot");
                                                                                        obj3457.data["kind"] = string3461;
                                                                                        var reader_lexer_kind3462 = function() {
                                                                                          return this.data["kind"];
                                                                                        };
                                                                                        reader_lexer_kind3462.def = true;
                                                                                        obj3457.methods["kind"] = reader_lexer_kind3462;
                                                                                        setLineNumber(145);    // compilenode string
                                                                                        var string3463 = new GraceString(".");
                                                                                        obj3457.data["value"] = string3463;
                                                                                        var reader_lexer_value3464 = function() {
                                                                                          return this.data["value"];
                                                                                        };
                                                                                        reader_lexer_value3464.def = true;
                                                                                        obj3457.methods["value"] = reader_lexer_value3464;
                                                                                        setLineNumber(146);    // compilenode num
                                                                                        obj3457.data["size"] = new GraceNum(1);
                                                                                        var reader_lexer_size3465 = function() {
                                                                                          return this.data["size"];
                                                                                        };
                                                                                        reader_lexer_size3465.def = true;
                                                                                        obj3457.methods["size"] = reader_lexer_size3465;
                                                                                        superDepth = origSuperDepth;
                                                                                      };
                                                                                      obj_init_3457.apply(inheritingObject, []);
                                                                                      return obj3457;
                                                                                      };
                                                                                      obj3022.methods["dotToken()object"] = func3456;
                                                                                    var func3466 = function(argcv) {    // method numToken(2)
                                                                                      var returnTarget = invocationCount;
                                                                                      invocationCount++;
                                                                                      var curarg = 1;
                                                                                      var var_v = arguments[curarg];
                                                                                      curarg++;
                                                                                      var var_b = arguments[curarg];
                                                                                      curarg++;
                                                                                      if (argcv[0] !== 2)
                                                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for numToken(2)"));
                                                                                      setModuleName("lexer");
                                                                                      setLineNumber(148);    // compilenode object
                                                                                      var obj3467 = Grace_allocObject(null, "numToken");
                                                                                      obj3467.definitionModule = "lexer";
                                                                                      obj3467.definitionLine = 148;
                                                                                      obj3467.outer = this;
                                                                                      var reader_lexer_outer3468 = function() {
                                                                                        return this.outer;
                                                                                      };
                                                                                      obj3467.methods["outer"] = reader_lexer_outer3468;
                                                                                      var obj_init_3467 = function() {
                                                                                        var origSuperDepth = superDepth;
                                                                                        superDepth = obj3467;
                                                                                        setLineNumber(149);    // compilenode call
                                                                                        var call3469 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onOuter = true;
                                                                                        onSelf = true;
                                                                                        var call3470 = callmethodChecked(call3469, "token()object", [0, 1], this);
                                                                                        obj3467.superobj = call3470;
                                                                                        if (call3470.data) obj3467.data = call3470.data;
                                                                                        if (call3470.hasOwnProperty('_value'))
                                                                                            obj3467._value = call3470._value;
                                                                                        setLineNumber(150);    // compilenode string
                                                                                        var string3471 = new GraceString("num");
                                                                                        obj3467.data["kind"] = string3471;
                                                                                        var reader_lexer_kind3472 = function() {
                                                                                          return this.data["kind"];
                                                                                        };
                                                                                        reader_lexer_kind3472.def = true;
                                                                                        obj3467.methods["kind"] = reader_lexer_kind3472;
                                                                                        setLineNumber(151);    // compilenode identifier
                                                                                        obj3467.data["value"] = var_v;
                                                                                        var reader_lexer_value3473 = function() {
                                                                                          return this.data["value"];
                                                                                        };
                                                                                        reader_lexer_value3473.def = true;
                                                                                        obj3467.methods["value"] = reader_lexer_value3473;
                                                                                        setLineNumber(152);    // compilenode identifier
                                                                                        obj3467.data["base"] = var_b;
                                                                                        var reader_lexer_base3474 = function() {
                                                                                          return this.data["base"];
                                                                                        };
                                                                                        reader_lexer_base3474.def = true;
                                                                                        obj3467.methods["base"] = reader_lexer_base3474;
                                                                                        setLineNumber(153);    // compilenode call
                                                                                        var call3475 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onOuter = true;
                                                                                        onSelf = true;
                                                                                        var call3476 = callmethodChecked(call3475, "startPosition", [0]);
                                                                                        var call3478 = callmethodChecked(superDepth, "outer", [0]);
                                                                                        onOuter = true;
                                                                                        onSelf = true;
                                                                                        var call3479 = callmethodChecked(call3478, "linePosition", [0]);
                                                                                        var diff3481 = callmethodChecked(call3479, "-", [1], call3476);
                                                                                        obj3467.data["size"] = diff3481;
                                                                                        var reader_lexer_size3482 = function() {
                                                                                          return this.data["size"];
                                                                                        };
                                                                                        reader_lexer_size3482.def = true;
                                                                                        obj3467.methods["size"] = reader_lexer_size3482;
                                                                                        superDepth = origSuperDepth;
                                                                                      };
                                                                                      obj_init_3467.apply(obj3467, []);
                                                                                      return obj3467;
                                                                                    };
                                                                                    func3466.paramCounts = [2];
                                                                                    obj3022.methods["numToken"] = func3466;
                                                                                    func3466.definitionLine = 148;
                                                                                    func3466.definitionModule = "lexer";
                                                                                      var func3483 = function(argcv) {    // method numToken(2     )()object
                                                                                        var curarg = 1;
                                                                                        var var_v = arguments[curarg];
                                                                                        curarg++;
                                                                                        var var_b = arguments[curarg];
                                                                                        curarg++;
                                                                                        var inheritingObject = arguments[curarg++];
                                                                                        // Start argument processing
                                                                                        curarg = 1;
                                                                                        curarg++;
                                                                                        curarg++;
                                                                                        // End argument processing
                                                                                        setModuleName("lexer");
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var obj3484 = Grace_allocObject(null, "numToken");
                                                                                        obj3484.definitionModule = "lexer";
                                                                                        obj3484.definitionLine = 148;
                                                                                        var inho3484 = inheritingObject;
                                                                                        while (inho3484.superobj) inho3484 = inho3484.superobj;
                                                                                        inho3484.superobj = obj3484;
                                                                                        obj3484.data = inheritingObject.data;
                                                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                                                          obj3484._value = inheritingObject._value;
                                                                                        obj3484.outer = this;
                                                                                        var reader_lexer_outer3485 = function() {
                                                                                          return this.outer;
                                                                                        };
                                                                                        obj3484.methods["outer"] = reader_lexer_outer3485;
                                                                                        var obj_init_3484 = function() {
                                                                                          var origSuperDepth = superDepth;
                                                                                          superDepth = obj3484;
                                                                                          setLineNumber(149);    // compilenode call
                                                                                          var call3486 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onOuter = true;
                                                                                          onSelf = true;
                                                                                          var call3487 = callmethodChecked(call3486, "token()object", [0, 1], this);
                                                                                          obj3484.superobj = call3487;
                                                                                          if (call3487.data) obj3484.data = call3487.data;
                                                                                          if (call3487.hasOwnProperty('_value'))
                                                                                              obj3484._value = call3487._value;
                                                                                          setLineNumber(150);    // compilenode string
                                                                                          var string3488 = new GraceString("num");
                                                                                          obj3484.data["kind"] = string3488;
                                                                                          var reader_lexer_kind3489 = function() {
                                                                                            return this.data["kind"];
                                                                                          };
                                                                                          reader_lexer_kind3489.def = true;
                                                                                          obj3484.methods["kind"] = reader_lexer_kind3489;
                                                                                          setLineNumber(151);    // compilenode identifier
                                                                                          obj3484.data["value"] = var_v;
                                                                                          var reader_lexer_value3490 = function() {
                                                                                            return this.data["value"];
                                                                                          };
                                                                                          reader_lexer_value3490.def = true;
                                                                                          obj3484.methods["value"] = reader_lexer_value3490;
                                                                                          setLineNumber(152);    // compilenode identifier
                                                                                          obj3484.data["base"] = var_b;
                                                                                          var reader_lexer_base3491 = function() {
                                                                                            return this.data["base"];
                                                                                          };
                                                                                          reader_lexer_base3491.def = true;
                                                                                          obj3484.methods["base"] = reader_lexer_base3491;
                                                                                          setLineNumber(153);    // compilenode call
                                                                                          var call3492 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onOuter = true;
                                                                                          onSelf = true;
                                                                                          var call3493 = callmethodChecked(call3492, "startPosition", [0]);
                                                                                          var call3495 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onOuter = true;
                                                                                          onSelf = true;
                                                                                          var call3496 = callmethodChecked(call3495, "linePosition", [0]);
                                                                                          var diff3498 = callmethodChecked(call3496, "-", [1], call3493);
                                                                                          obj3484.data["size"] = diff3498;
                                                                                          var reader_lexer_size3499 = function() {
                                                                                            return this.data["size"];
                                                                                          };
                                                                                          reader_lexer_size3499.def = true;
                                                                                          obj3484.methods["size"] = reader_lexer_size3499;
                                                                                          superDepth = origSuperDepth;
                                                                                        };
                                                                                        obj_init_3484.apply(inheritingObject, []);
                                                                                        return obj3484;
                                                                                        };
                                                                                        obj3022.methods["numToken()object"] = func3483;
                                                                                      var func3500 = function(argcv) {    // method keywordToken(1)
                                                                                        var returnTarget = invocationCount;
                                                                                        invocationCount++;
                                                                                        var curarg = 1;
                                                                                        var var_v = arguments[curarg];
                                                                                        curarg++;
                                                                                        if (argcv[0] !== 1)
                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for keywordToken(1)"));
                                                                                        setModuleName("lexer");
                                                                                        setLineNumber(155);    // compilenode object
                                                                                        var obj3501 = Grace_allocObject(null, "keywordToken");
                                                                                        obj3501.definitionModule = "lexer";
                                                                                        obj3501.definitionLine = 155;
                                                                                        obj3501.outer = this;
                                                                                        var reader_lexer_outer3502 = function() {
                                                                                          return this.outer;
                                                                                        };
                                                                                        obj3501.methods["outer"] = reader_lexer_outer3502;
                                                                                        var obj_init_3501 = function() {
                                                                                          var origSuperDepth = superDepth;
                                                                                          superDepth = obj3501;
                                                                                          setLineNumber(156);    // compilenode call
                                                                                          var call3503 = callmethodChecked(superDepth, "outer", [0]);
                                                                                          onOuter = true;
                                                                                          onSelf = true;
                                                                                          var call3504 = callmethodChecked(call3503, "token()object", [0, 1], this);
                                                                                          obj3501.superobj = call3504;
                                                                                          if (call3504.data) obj3501.data = call3504.data;
                                                                                          if (call3504.hasOwnProperty('_value'))
                                                                                              obj3501._value = call3504._value;
                                                                                          setLineNumber(157);    // compilenode string
                                                                                          var string3505 = new GraceString("keyword");
                                                                                          obj3501.data["kind"] = string3505;
                                                                                          var reader_lexer_kind3506 = function() {
                                                                                            return this.data["kind"];
                                                                                          };
                                                                                          reader_lexer_kind3506.def = true;
                                                                                          obj3501.methods["kind"] = reader_lexer_kind3506;
                                                                                          setLineNumber(158);    // compilenode identifier
                                                                                          obj3501.data["value"] = var_v;
                                                                                          var reader_lexer_value3507 = function() {
                                                                                            return this.data["value"];
                                                                                          };
                                                                                          reader_lexer_value3507.def = true;
                                                                                          obj3501.methods["value"] = reader_lexer_value3507;
                                                                                          setLineNumber(159);    // compilenode identifier
                                                                                          var call3508 = callmethodChecked(var_v, "size", [0]);
                                                                                          obj3501.data["size"] = call3508;
                                                                                          var reader_lexer_size3509 = function() {
                                                                                            return this.data["size"];
                                                                                          };
                                                                                          reader_lexer_size3509.def = true;
                                                                                          obj3501.methods["size"] = reader_lexer_size3509;
                                                                                          superDepth = origSuperDepth;
                                                                                        };
                                                                                        obj_init_3501.apply(obj3501, []);
                                                                                        return obj3501;
                                                                                      };
                                                                                      func3500.paramCounts = [1];
                                                                                      obj3022.methods["keywordToken"] = func3500;
                                                                                      func3500.definitionLine = 155;
                                                                                      func3500.definitionModule = "lexer";
                                                                                        var func3510 = function(argcv) {    // method keywordToken(1     )()object
                                                                                          var curarg = 1;
                                                                                          var var_v = arguments[curarg];
                                                                                          curarg++;
                                                                                          var inheritingObject = arguments[curarg++];
                                                                                          // Start argument processing
                                                                                          curarg = 1;
                                                                                          curarg++;
                                                                                          // End argument processing
                                                                                          setModuleName("lexer");
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var obj3511 = Grace_allocObject(null, "keywordToken");
                                                                                          obj3511.definitionModule = "lexer";
                                                                                          obj3511.definitionLine = 155;
                                                                                          var inho3511 = inheritingObject;
                                                                                          while (inho3511.superobj) inho3511 = inho3511.superobj;
                                                                                          inho3511.superobj = obj3511;
                                                                                          obj3511.data = inheritingObject.data;
                                                                                          if (inheritingObject.hasOwnProperty('_value'))
                                                                                            obj3511._value = inheritingObject._value;
                                                                                          obj3511.outer = this;
                                                                                          var reader_lexer_outer3512 = function() {
                                                                                            return this.outer;
                                                                                          };
                                                                                          obj3511.methods["outer"] = reader_lexer_outer3512;
                                                                                          var obj_init_3511 = function() {
                                                                                            var origSuperDepth = superDepth;
                                                                                            superDepth = obj3511;
                                                                                            setLineNumber(156);    // compilenode call
                                                                                            var call3513 = callmethodChecked(superDepth, "outer", [0]);
                                                                                            onOuter = true;
                                                                                            onSelf = true;
                                                                                            var call3514 = callmethodChecked(call3513, "token()object", [0, 1], this);
                                                                                            obj3511.superobj = call3514;
                                                                                            if (call3514.data) obj3511.data = call3514.data;
                                                                                            if (call3514.hasOwnProperty('_value'))
                                                                                                obj3511._value = call3514._value;
                                                                                            setLineNumber(157);    // compilenode string
                                                                                            var string3515 = new GraceString("keyword");
                                                                                            obj3511.data["kind"] = string3515;
                                                                                            var reader_lexer_kind3516 = function() {
                                                                                              return this.data["kind"];
                                                                                            };
                                                                                            reader_lexer_kind3516.def = true;
                                                                                            obj3511.methods["kind"] = reader_lexer_kind3516;
                                                                                            setLineNumber(158);    // compilenode identifier
                                                                                            obj3511.data["value"] = var_v;
                                                                                            var reader_lexer_value3517 = function() {
                                                                                              return this.data["value"];
                                                                                            };
                                                                                            reader_lexer_value3517.def = true;
                                                                                            obj3511.methods["value"] = reader_lexer_value3517;
                                                                                            setLineNumber(159);    // compilenode identifier
                                                                                            var call3518 = callmethodChecked(var_v, "size", [0]);
                                                                                            obj3511.data["size"] = call3518;
                                                                                            var reader_lexer_size3519 = function() {
                                                                                              return this.data["size"];
                                                                                            };
                                                                                            reader_lexer_size3519.def = true;
                                                                                            obj3511.methods["size"] = reader_lexer_size3519;
                                                                                            superDepth = origSuperDepth;
                                                                                          };
                                                                                          obj_init_3511.apply(inheritingObject, []);
                                                                                          return obj3511;
                                                                                          };
                                                                                          obj3022.methods["keywordToken()object"] = func3510;
                                                                                        var func3520 = function(argcv) {    // method opToken(1)
                                                                                          var returnTarget = invocationCount;
                                                                                          invocationCount++;
                                                                                          var curarg = 1;
                                                                                          var var_v = arguments[curarg];
                                                                                          curarg++;
                                                                                          if (argcv[0] !== 1)
                                                                                            throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for opToken(1)"));
                                                                                          setModuleName("lexer");
                                                                                          setLineNumber(161);    // compilenode object
                                                                                          var obj3521 = Grace_allocObject(null, "opToken");
                                                                                          obj3521.definitionModule = "lexer";
                                                                                          obj3521.definitionLine = 161;
                                                                                          obj3521.outer = this;
                                                                                          var reader_lexer_outer3522 = function() {
                                                                                            return this.outer;
                                                                                          };
                                                                                          obj3521.methods["outer"] = reader_lexer_outer3522;
                                                                                          var obj_init_3521 = function() {
                                                                                            var origSuperDepth = superDepth;
                                                                                            superDepth = obj3521;
                                                                                            setLineNumber(162);    // compilenode call
                                                                                            var call3523 = callmethodChecked(superDepth, "outer", [0]);
                                                                                            onOuter = true;
                                                                                            onSelf = true;
                                                                                            var call3524 = callmethodChecked(call3523, "token()object", [0, 1], this);
                                                                                            obj3521.superobj = call3524;
                                                                                            if (call3524.data) obj3521.data = call3524.data;
                                                                                            if (call3524.hasOwnProperty('_value'))
                                                                                                obj3521._value = call3524._value;
                                                                                            setLineNumber(163);    // compilenode string
                                                                                            var string3525 = new GraceString("op");
                                                                                            obj3521.data["kind"] = string3525;
                                                                                            var reader_lexer_kind3526 = function() {
                                                                                              return this.data["kind"];
                                                                                            };
                                                                                            reader_lexer_kind3526.def = true;
                                                                                            obj3521.methods["kind"] = reader_lexer_kind3526;
                                                                                            setLineNumber(164);    // compilenode identifier
                                                                                            obj3521.data["value"] = var_v;
                                                                                            var reader_lexer_value3527 = function() {
                                                                                              return this.data["value"];
                                                                                            };
                                                                                            reader_lexer_value3527.def = true;
                                                                                            obj3521.methods["value"] = reader_lexer_value3527;
                                                                                            setLineNumber(165);    // compilenode identifier
                                                                                            var call3528 = callmethodChecked(var_v, "size", [0]);
                                                                                            obj3521.data["size"] = call3528;
                                                                                            var reader_lexer_size3529 = function() {
                                                                                              return this.data["size"];
                                                                                            };
                                                                                            reader_lexer_size3529.def = true;
                                                                                            obj3521.methods["size"] = reader_lexer_size3529;
                                                                                            superDepth = origSuperDepth;
                                                                                          };
                                                                                          obj_init_3521.apply(obj3521, []);
                                                                                          return obj3521;
                                                                                        };
                                                                                        func3520.paramCounts = [1];
                                                                                        obj3022.methods["opToken"] = func3520;
                                                                                        func3520.definitionLine = 161;
                                                                                        func3520.definitionModule = "lexer";
                                                                                          var func3530 = function(argcv) {    // method opToken(1     )()object
                                                                                            var curarg = 1;
                                                                                            var var_v = arguments[curarg];
                                                                                            curarg++;
                                                                                            var inheritingObject = arguments[curarg++];
                                                                                            // Start argument processing
                                                                                            curarg = 1;
                                                                                            curarg++;
                                                                                            // End argument processing
                                                                                            setModuleName("lexer");
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var obj3531 = Grace_allocObject(null, "opToken");
                                                                                            obj3531.definitionModule = "lexer";
                                                                                            obj3531.definitionLine = 161;
                                                                                            var inho3531 = inheritingObject;
                                                                                            while (inho3531.superobj) inho3531 = inho3531.superobj;
                                                                                            inho3531.superobj = obj3531;
                                                                                            obj3531.data = inheritingObject.data;
                                                                                            if (inheritingObject.hasOwnProperty('_value'))
                                                                                              obj3531._value = inheritingObject._value;
                                                                                            obj3531.outer = this;
                                                                                            var reader_lexer_outer3532 = function() {
                                                                                              return this.outer;
                                                                                            };
                                                                                            obj3531.methods["outer"] = reader_lexer_outer3532;
                                                                                            var obj_init_3531 = function() {
                                                                                              var origSuperDepth = superDepth;
                                                                                              superDepth = obj3531;
                                                                                              setLineNumber(162);    // compilenode call
                                                                                              var call3533 = callmethodChecked(superDepth, "outer", [0]);
                                                                                              onOuter = true;
                                                                                              onSelf = true;
                                                                                              var call3534 = callmethodChecked(call3533, "token()object", [0, 1], this);
                                                                                              obj3531.superobj = call3534;
                                                                                              if (call3534.data) obj3531.data = call3534.data;
                                                                                              if (call3534.hasOwnProperty('_value'))
                                                                                                  obj3531._value = call3534._value;
                                                                                              setLineNumber(163);    // compilenode string
                                                                                              var string3535 = new GraceString("op");
                                                                                              obj3531.data["kind"] = string3535;
                                                                                              var reader_lexer_kind3536 = function() {
                                                                                                return this.data["kind"];
                                                                                              };
                                                                                              reader_lexer_kind3536.def = true;
                                                                                              obj3531.methods["kind"] = reader_lexer_kind3536;
                                                                                              setLineNumber(164);    // compilenode identifier
                                                                                              obj3531.data["value"] = var_v;
                                                                                              var reader_lexer_value3537 = function() {
                                                                                                return this.data["value"];
                                                                                              };
                                                                                              reader_lexer_value3537.def = true;
                                                                                              obj3531.methods["value"] = reader_lexer_value3537;
                                                                                              setLineNumber(165);    // compilenode identifier
                                                                                              var call3538 = callmethodChecked(var_v, "size", [0]);
                                                                                              obj3531.data["size"] = call3538;
                                                                                              var reader_lexer_size3539 = function() {
                                                                                                return this.data["size"];
                                                                                              };
                                                                                              reader_lexer_size3539.def = true;
                                                                                              obj3531.methods["size"] = reader_lexer_size3539;
                                                                                              superDepth = origSuperDepth;
                                                                                            };
                                                                                            obj_init_3531.apply(inheritingObject, []);
                                                                                            return obj3531;
                                                                                            };
                                                                                            obj3022.methods["opToken()object"] = func3530;
                                                                                          var func3540 = function(argcv) {    // method arrowToken
                                                                                            var returnTarget = invocationCount;
                                                                                            invocationCount++;
                                                                                            var curarg = 1;
                                                                                            if (argcv[0] !== 0)
                                                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for arrowToken"));
                                                                                            setModuleName("lexer");
                                                                                            setLineNumber(167);    // compilenode object
                                                                                            var obj3541 = Grace_allocObject(null, "arrowToken");
                                                                                            obj3541.definitionModule = "lexer";
                                                                                            obj3541.definitionLine = 167;
                                                                                            obj3541.outer = this;
                                                                                            var reader_lexer_outer3542 = function() {
                                                                                              return this.outer;
                                                                                            };
                                                                                            obj3541.methods["outer"] = reader_lexer_outer3542;
                                                                                            var obj_init_3541 = function() {
                                                                                              var origSuperDepth = superDepth;
                                                                                              superDepth = obj3541;
                                                                                              setLineNumber(168);    // compilenode call
                                                                                              var call3543 = callmethodChecked(superDepth, "outer", [0]);
                                                                                              onOuter = true;
                                                                                              onSelf = true;
                                                                                              var call3544 = callmethodChecked(call3543, "token()object", [0, 1], this);
                                                                                              obj3541.superobj = call3544;
                                                                                              if (call3544.data) obj3541.data = call3544.data;
                                                                                              if (call3544.hasOwnProperty('_value'))
                                                                                                  obj3541._value = call3544._value;
                                                                                              setLineNumber(169);    // compilenode string
                                                                                              var string3545 = new GraceString("arrow");
                                                                                              obj3541.data["kind"] = string3545;
                                                                                              var reader_lexer_kind3546 = function() {
                                                                                                return this.data["kind"];
                                                                                              };
                                                                                              reader_lexer_kind3546.def = true;
                                                                                              obj3541.methods["kind"] = reader_lexer_kind3546;
                                                                                              setLineNumber(170);    // compilenode string
                                                                                              var string3547 = new GraceString("\u2192");
                                                                                              obj3541.data["value"] = string3547;
                                                                                              var reader_lexer_value3548 = function() {
                                                                                                return this.data["value"];
                                                                                              };
                                                                                              reader_lexer_value3548.def = true;
                                                                                              obj3541.methods["value"] = reader_lexer_value3548;
                                                                                              setLineNumber(171);    // compilenode num
                                                                                              obj3541.data["size"] = new GraceNum(1);
                                                                                              var reader_lexer_size3549 = function() {
                                                                                                return this.data["size"];
                                                                                              };
                                                                                              reader_lexer_size3549.def = true;
                                                                                              obj3541.methods["size"] = reader_lexer_size3549;
                                                                                              superDepth = origSuperDepth;
                                                                                            };
                                                                                            obj_init_3541.apply(obj3541, []);
                                                                                            return obj3541;
                                                                                          };
                                                                                          func3540.paramCounts = [0];
                                                                                          obj3022.methods["arrowToken"] = func3540;
                                                                                          func3540.definitionLine = 167;
                                                                                          func3540.definitionModule = "lexer";
                                                                                            var func3550 = function(argcv) {    // method arrowToken()object
                                                                                              var curarg = 1;
                                                                                              var inheritingObject = arguments[curarg++];
                                                                                              // Start argument processing
                                                                                              curarg = 1;
                                                                                              // End argument processing
                                                                                              setModuleName("lexer");
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var obj3551 = Grace_allocObject(null, "arrowToken");
                                                                                              obj3551.definitionModule = "lexer";
                                                                                              obj3551.definitionLine = 167;
                                                                                              var inho3551 = inheritingObject;
                                                                                              while (inho3551.superobj) inho3551 = inho3551.superobj;
                                                                                              inho3551.superobj = obj3551;
                                                                                              obj3551.data = inheritingObject.data;
                                                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                                                obj3551._value = inheritingObject._value;
                                                                                              obj3551.outer = this;
                                                                                              var reader_lexer_outer3552 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj3551.methods["outer"] = reader_lexer_outer3552;
                                                                                              var obj_init_3551 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj3551;
                                                                                                setLineNumber(168);    // compilenode call
                                                                                                var call3553 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                onOuter = true;
                                                                                                onSelf = true;
                                                                                                var call3554 = callmethodChecked(call3553, "token()object", [0, 1], this);
                                                                                                obj3551.superobj = call3554;
                                                                                                if (call3554.data) obj3551.data = call3554.data;
                                                                                                if (call3554.hasOwnProperty('_value'))
                                                                                                    obj3551._value = call3554._value;
                                                                                                setLineNumber(169);    // compilenode string
                                                                                                var string3555 = new GraceString("arrow");
                                                                                                obj3551.data["kind"] = string3555;
                                                                                                var reader_lexer_kind3556 = function() {
                                                                                                  return this.data["kind"];
                                                                                                };
                                                                                                reader_lexer_kind3556.def = true;
                                                                                                obj3551.methods["kind"] = reader_lexer_kind3556;
                                                                                                setLineNumber(170);    // compilenode string
                                                                                                var string3557 = new GraceString("\u2192");
                                                                                                obj3551.data["value"] = string3557;
                                                                                                var reader_lexer_value3558 = function() {
                                                                                                  return this.data["value"];
                                                                                                };
                                                                                                reader_lexer_value3558.def = true;
                                                                                                obj3551.methods["value"] = reader_lexer_value3558;
                                                                                                setLineNumber(171);    // compilenode num
                                                                                                obj3551.data["size"] = new GraceNum(1);
                                                                                                var reader_lexer_size3559 = function() {
                                                                                                  return this.data["size"];
                                                                                                };
                                                                                                reader_lexer_size3559.def = true;
                                                                                                obj3551.methods["size"] = reader_lexer_size3559;
                                                                                                superDepth = origSuperDepth;
                                                                                              };
                                                                                              obj_init_3551.apply(inheritingObject, []);
                                                                                              return obj3551;
                                                                                              };
                                                                                              obj3022.methods["arrowToken()object"] = func3550;
                                                                                            var func3560 = function(argcv) {    // method bindToken
                                                                                              var returnTarget = invocationCount;
                                                                                              invocationCount++;
                                                                                              var curarg = 1;
                                                                                              if (argcv[0] !== 0)
                                                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for bindToken"));
                                                                                              setModuleName("lexer");
                                                                                              setLineNumber(173);    // compilenode object
                                                                                              var obj3561 = Grace_allocObject(null, "bindToken");
                                                                                              obj3561.definitionModule = "lexer";
                                                                                              obj3561.definitionLine = 173;
                                                                                              obj3561.outer = this;
                                                                                              var reader_lexer_outer3562 = function() {
                                                                                                return this.outer;
                                                                                              };
                                                                                              obj3561.methods["outer"] = reader_lexer_outer3562;
                                                                                              var obj_init_3561 = function() {
                                                                                                var origSuperDepth = superDepth;
                                                                                                superDepth = obj3561;
                                                                                                setLineNumber(174);    // compilenode call
                                                                                                var call3563 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                onOuter = true;
                                                                                                onSelf = true;
                                                                                                var call3564 = callmethodChecked(call3563, "token()object", [0, 1], this);
                                                                                                obj3561.superobj = call3564;
                                                                                                if (call3564.data) obj3561.data = call3564.data;
                                                                                                if (call3564.hasOwnProperty('_value'))
                                                                                                    obj3561._value = call3564._value;
                                                                                                setLineNumber(175);    // compilenode string
                                                                                                var string3565 = new GraceString("bind");
                                                                                                obj3561.data["kind"] = string3565;
                                                                                                var reader_lexer_kind3566 = function() {
                                                                                                  return this.data["kind"];
                                                                                                };
                                                                                                reader_lexer_kind3566.def = true;
                                                                                                obj3561.methods["kind"] = reader_lexer_kind3566;
                                                                                                setLineNumber(176);    // compilenode string
                                                                                                var string3567 = new GraceString(":=");
                                                                                                obj3561.data["value"] = string3567;
                                                                                                var reader_lexer_value3568 = function() {
                                                                                                  return this.data["value"];
                                                                                                };
                                                                                                reader_lexer_value3568.def = true;
                                                                                                obj3561.methods["value"] = reader_lexer_value3568;
                                                                                                setLineNumber(177);    // compilenode num
                                                                                                obj3561.data["size"] = new GraceNum(2);
                                                                                                var reader_lexer_size3569 = function() {
                                                                                                  return this.data["size"];
                                                                                                };
                                                                                                reader_lexer_size3569.def = true;
                                                                                                obj3561.methods["size"] = reader_lexer_size3569;
                                                                                                superDepth = origSuperDepth;
                                                                                              };
                                                                                              obj_init_3561.apply(obj3561, []);
                                                                                              return obj3561;
                                                                                            };
                                                                                            func3560.paramCounts = [0];
                                                                                            obj3022.methods["bindToken"] = func3560;
                                                                                            func3560.definitionLine = 173;
                                                                                            func3560.definitionModule = "lexer";
                                                                                              var func3570 = function(argcv) {    // method bindToken()object
                                                                                                var curarg = 1;
                                                                                                var inheritingObject = arguments[curarg++];
                                                                                                // Start argument processing
                                                                                                curarg = 1;
                                                                                                // End argument processing
                                                                                                setModuleName("lexer");
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var obj3571 = Grace_allocObject(null, "bindToken");
                                                                                                obj3571.definitionModule = "lexer";
                                                                                                obj3571.definitionLine = 173;
                                                                                                var inho3571 = inheritingObject;
                                                                                                while (inho3571.superobj) inho3571 = inho3571.superobj;
                                                                                                inho3571.superobj = obj3571;
                                                                                                obj3571.data = inheritingObject.data;
                                                                                                if (inheritingObject.hasOwnProperty('_value'))
                                                                                                  obj3571._value = inheritingObject._value;
                                                                                                obj3571.outer = this;
                                                                                                var reader_lexer_outer3572 = function() {
                                                                                                  return this.outer;
                                                                                                };
                                                                                                obj3571.methods["outer"] = reader_lexer_outer3572;
                                                                                                var obj_init_3571 = function() {
                                                                                                  var origSuperDepth = superDepth;
                                                                                                  superDepth = obj3571;
                                                                                                  setLineNumber(174);    // compilenode call
                                                                                                  var call3573 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                  onOuter = true;
                                                                                                  onSelf = true;
                                                                                                  var call3574 = callmethodChecked(call3573, "token()object", [0, 1], this);
                                                                                                  obj3571.superobj = call3574;
                                                                                                  if (call3574.data) obj3571.data = call3574.data;
                                                                                                  if (call3574.hasOwnProperty('_value'))
                                                                                                      obj3571._value = call3574._value;
                                                                                                  setLineNumber(175);    // compilenode string
                                                                                                  var string3575 = new GraceString("bind");
                                                                                                  obj3571.data["kind"] = string3575;
                                                                                                  var reader_lexer_kind3576 = function() {
                                                                                                    return this.data["kind"];
                                                                                                  };
                                                                                                  reader_lexer_kind3576.def = true;
                                                                                                  obj3571.methods["kind"] = reader_lexer_kind3576;
                                                                                                  setLineNumber(176);    // compilenode string
                                                                                                  var string3577 = new GraceString(":=");
                                                                                                  obj3571.data["value"] = string3577;
                                                                                                  var reader_lexer_value3578 = function() {
                                                                                                    return this.data["value"];
                                                                                                  };
                                                                                                  reader_lexer_value3578.def = true;
                                                                                                  obj3571.methods["value"] = reader_lexer_value3578;
                                                                                                  setLineNumber(177);    // compilenode num
                                                                                                  obj3571.data["size"] = new GraceNum(2);
                                                                                                  var reader_lexer_size3579 = function() {
                                                                                                    return this.data["size"];
                                                                                                  };
                                                                                                  reader_lexer_size3579.def = true;
                                                                                                  obj3571.methods["size"] = reader_lexer_size3579;
                                                                                                  superDepth = origSuperDepth;
                                                                                                };
                                                                                                obj_init_3571.apply(inheritingObject, []);
                                                                                                return obj3571;
                                                                                                };
                                                                                                obj3022.methods["bindToken()object"] = func3570;
                                                                                              var func3580 = function(argcv) {    // method semicolonToken
                                                                                                var returnTarget = invocationCount;
                                                                                                invocationCount++;
                                                                                                var curarg = 1;
                                                                                                if (argcv[0] !== 0)
                                                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for semicolonToken"));
                                                                                                setModuleName("lexer");
                                                                                                setLineNumber(179);    // compilenode object
                                                                                                var obj3581 = Grace_allocObject(null, "semicolonToken");
                                                                                                obj3581.definitionModule = "lexer";
                                                                                                obj3581.definitionLine = 179;
                                                                                                obj3581.outer = this;
                                                                                                var reader_lexer_outer3582 = function() {
                                                                                                  return this.outer;
                                                                                                };
                                                                                                obj3581.methods["outer"] = reader_lexer_outer3582;
                                                                                                var obj_init_3581 = function() {
                                                                                                  var origSuperDepth = superDepth;
                                                                                                  superDepth = obj3581;
                                                                                                  setLineNumber(180);    // compilenode call
                                                                                                  var call3583 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                  onOuter = true;
                                                                                                  onSelf = true;
                                                                                                  var call3584 = callmethodChecked(call3583, "token()object", [0, 1], this);
                                                                                                  obj3581.superobj = call3584;
                                                                                                  if (call3584.data) obj3581.data = call3584.data;
                                                                                                  if (call3584.hasOwnProperty('_value'))
                                                                                                      obj3581._value = call3584._value;
                                                                                                  setLineNumber(181);    // compilenode string
                                                                                                  var string3585 = new GraceString("semicolon");
                                                                                                  obj3581.data["kind"] = string3585;
                                                                                                  var reader_lexer_kind3586 = function() {
                                                                                                    return this.data["kind"];
                                                                                                  };
                                                                                                  reader_lexer_kind3586.def = true;
                                                                                                  obj3581.methods["kind"] = reader_lexer_kind3586;
                                                                                                  setLineNumber(182);    // compilenode string
                                                                                                  var string3587 = new GraceString(";");
                                                                                                  obj3581.data["value"] = string3587;
                                                                                                  var reader_lexer_value3588 = function() {
                                                                                                    return this.data["value"];
                                                                                                  };
                                                                                                  reader_lexer_value3588.def = true;
                                                                                                  obj3581.methods["value"] = reader_lexer_value3588;
                                                                                                  setLineNumber(183);    // compilenode num
                                                                                                  obj3581.data["size"] = new GraceNum(1);
                                                                                                  var reader_lexer_size3589 = function() {
                                                                                                    return this.data["size"];
                                                                                                  };
                                                                                                  reader_lexer_size3589.def = true;
                                                                                                  obj3581.methods["size"] = reader_lexer_size3589;
                                                                                                  superDepth = origSuperDepth;
                                                                                                };
                                                                                                obj_init_3581.apply(obj3581, []);
                                                                                                return obj3581;
                                                                                              };
                                                                                              func3580.paramCounts = [0];
                                                                                              obj3022.methods["semicolonToken"] = func3580;
                                                                                              func3580.definitionLine = 179;
                                                                                              func3580.definitionModule = "lexer";
                                                                                                var func3590 = function(argcv) {    // method semicolonToken()object
                                                                                                  var curarg = 1;
                                                                                                  var inheritingObject = arguments[curarg++];
                                                                                                  // Start argument processing
                                                                                                  curarg = 1;
                                                                                                  // End argument processing
                                                                                                  setModuleName("lexer");
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var obj3591 = Grace_allocObject(null, "semicolonToken");
                                                                                                  obj3591.definitionModule = "lexer";
                                                                                                  obj3591.definitionLine = 179;
                                                                                                  var inho3591 = inheritingObject;
                                                                                                  while (inho3591.superobj) inho3591 = inho3591.superobj;
                                                                                                  inho3591.superobj = obj3591;
                                                                                                  obj3591.data = inheritingObject.data;
                                                                                                  if (inheritingObject.hasOwnProperty('_value'))
                                                                                                    obj3591._value = inheritingObject._value;
                                                                                                  obj3591.outer = this;
                                                                                                  var reader_lexer_outer3592 = function() {
                                                                                                    return this.outer;
                                                                                                  };
                                                                                                  obj3591.methods["outer"] = reader_lexer_outer3592;
                                                                                                  var obj_init_3591 = function() {
                                                                                                    var origSuperDepth = superDepth;
                                                                                                    superDepth = obj3591;
                                                                                                    setLineNumber(180);    // compilenode call
                                                                                                    var call3593 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onOuter = true;
                                                                                                    onSelf = true;
                                                                                                    var call3594 = callmethodChecked(call3593, "token()object", [0, 1], this);
                                                                                                    obj3591.superobj = call3594;
                                                                                                    if (call3594.data) obj3591.data = call3594.data;
                                                                                                    if (call3594.hasOwnProperty('_value'))
                                                                                                        obj3591._value = call3594._value;
                                                                                                    setLineNumber(181);    // compilenode string
                                                                                                    var string3595 = new GraceString("semicolon");
                                                                                                    obj3591.data["kind"] = string3595;
                                                                                                    var reader_lexer_kind3596 = function() {
                                                                                                      return this.data["kind"];
                                                                                                    };
                                                                                                    reader_lexer_kind3596.def = true;
                                                                                                    obj3591.methods["kind"] = reader_lexer_kind3596;
                                                                                                    setLineNumber(182);    // compilenode string
                                                                                                    var string3597 = new GraceString(";");
                                                                                                    obj3591.data["value"] = string3597;
                                                                                                    var reader_lexer_value3598 = function() {
                                                                                                      return this.data["value"];
                                                                                                    };
                                                                                                    reader_lexer_value3598.def = true;
                                                                                                    obj3591.methods["value"] = reader_lexer_value3598;
                                                                                                    setLineNumber(183);    // compilenode num
                                                                                                    obj3591.data["size"] = new GraceNum(1);
                                                                                                    var reader_lexer_size3599 = function() {
                                                                                                      return this.data["size"];
                                                                                                    };
                                                                                                    reader_lexer_size3599.def = true;
                                                                                                    obj3591.methods["size"] = reader_lexer_size3599;
                                                                                                    superDepth = origSuperDepth;
                                                                                                  };
                                                                                                  obj_init_3591.apply(inheritingObject, []);
                                                                                                  return obj3591;
                                                                                                  };
                                                                                                  obj3022.methods["semicolonToken()object"] = func3590;
                                                                                                var func3600 = function(argcv) {    // method lGenericToken
                                                                                                  var returnTarget = invocationCount;
                                                                                                  invocationCount++;
                                                                                                  var curarg = 1;
                                                                                                  if (argcv[0] !== 0)
                                                                                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lGenericToken"));
                                                                                                  setModuleName("lexer");
                                                                                                  setLineNumber(185);    // compilenode object
                                                                                                  var obj3601 = Grace_allocObject(null, "lGenericToken");
                                                                                                  obj3601.definitionModule = "lexer";
                                                                                                  obj3601.definitionLine = 185;
                                                                                                  obj3601.outer = this;
                                                                                                  var reader_lexer_outer3602 = function() {
                                                                                                    return this.outer;
                                                                                                  };
                                                                                                  obj3601.methods["outer"] = reader_lexer_outer3602;
                                                                                                  var obj_init_3601 = function() {
                                                                                                    var origSuperDepth = superDepth;
                                                                                                    superDepth = obj3601;
                                                                                                    setLineNumber(186);    // compilenode call
                                                                                                    var call3603 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                    onOuter = true;
                                                                                                    onSelf = true;
                                                                                                    var call3604 = callmethodChecked(call3603, "token()object", [0, 1], this);
                                                                                                    obj3601.superobj = call3604;
                                                                                                    if (call3604.data) obj3601.data = call3604.data;
                                                                                                    if (call3604.hasOwnProperty('_value'))
                                                                                                        obj3601._value = call3604._value;
                                                                                                    setLineNumber(187);    // compilenode string
                                                                                                    var string3605 = new GraceString("lgeneric");
                                                                                                    obj3601.data["kind"] = string3605;
                                                                                                    var reader_lexer_kind3606 = function() {
                                                                                                      return this.data["kind"];
                                                                                                    };
                                                                                                    reader_lexer_kind3606.def = true;
                                                                                                    obj3601.methods["kind"] = reader_lexer_kind3606;
                                                                                                    setLineNumber(188);    // compilenode string
                                                                                                    var string3607 = new GraceString("\u27e6");
                                                                                                    obj3601.data["value"] = string3607;
                                                                                                    var reader_lexer_value3608 = function() {
                                                                                                      return this.data["value"];
                                                                                                    };
                                                                                                    reader_lexer_value3608.def = true;
                                                                                                    obj3601.methods["value"] = reader_lexer_value3608;
                                                                                                    setLineNumber(189);    // compilenode num
                                                                                                    obj3601.data["size"] = new GraceNum(1);
                                                                                                    var reader_lexer_size3609 = function() {
                                                                                                      return this.data["size"];
                                                                                                    };
                                                                                                    reader_lexer_size3609.def = true;
                                                                                                    obj3601.methods["size"] = reader_lexer_size3609;
                                                                                                    superDepth = origSuperDepth;
                                                                                                  };
                                                                                                  obj_init_3601.apply(obj3601, []);
                                                                                                  return obj3601;
                                                                                                };
                                                                                                func3600.paramCounts = [0];
                                                                                                obj3022.methods["lGenericToken"] = func3600;
                                                                                                func3600.definitionLine = 185;
                                                                                                func3600.definitionModule = "lexer";
                                                                                                  var func3610 = function(argcv) {    // method lGenericToken()object
                                                                                                    var curarg = 1;
                                                                                                    var inheritingObject = arguments[curarg++];
                                                                                                    // Start argument processing
                                                                                                    curarg = 1;
                                                                                                    // End argument processing
                                                                                                    setModuleName("lexer");
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var obj3611 = Grace_allocObject(null, "lGenericToken");
                                                                                                    obj3611.definitionModule = "lexer";
                                                                                                    obj3611.definitionLine = 185;
                                                                                                    var inho3611 = inheritingObject;
                                                                                                    while (inho3611.superobj) inho3611 = inho3611.superobj;
                                                                                                    inho3611.superobj = obj3611;
                                                                                                    obj3611.data = inheritingObject.data;
                                                                                                    if (inheritingObject.hasOwnProperty('_value'))
                                                                                                      obj3611._value = inheritingObject._value;
                                                                                                    obj3611.outer = this;
                                                                                                    var reader_lexer_outer3612 = function() {
                                                                                                      return this.outer;
                                                                                                    };
                                                                                                    obj3611.methods["outer"] = reader_lexer_outer3612;
                                                                                                    var obj_init_3611 = function() {
                                                                                                      var origSuperDepth = superDepth;
                                                                                                      superDepth = obj3611;
                                                                                                      setLineNumber(186);    // compilenode call
                                                                                                      var call3613 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                      onOuter = true;
                                                                                                      onSelf = true;
                                                                                                      var call3614 = callmethodChecked(call3613, "token()object", [0, 1], this);
                                                                                                      obj3611.superobj = call3614;
                                                                                                      if (call3614.data) obj3611.data = call3614.data;
                                                                                                      if (call3614.hasOwnProperty('_value'))
                                                                                                          obj3611._value = call3614._value;
                                                                                                      setLineNumber(187);    // compilenode string
                                                                                                      var string3615 = new GraceString("lgeneric");
                                                                                                      obj3611.data["kind"] = string3615;
                                                                                                      var reader_lexer_kind3616 = function() {
                                                                                                        return this.data["kind"];
                                                                                                      };
                                                                                                      reader_lexer_kind3616.def = true;
                                                                                                      obj3611.methods["kind"] = reader_lexer_kind3616;
                                                                                                      setLineNumber(188);    // compilenode string
                                                                                                      var string3617 = new GraceString("\u27e6");
                                                                                                      obj3611.data["value"] = string3617;
                                                                                                      var reader_lexer_value3618 = function() {
                                                                                                        return this.data["value"];
                                                                                                      };
                                                                                                      reader_lexer_value3618.def = true;
                                                                                                      obj3611.methods["value"] = reader_lexer_value3618;
                                                                                                      setLineNumber(189);    // compilenode num
                                                                                                      obj3611.data["size"] = new GraceNum(1);
                                                                                                      var reader_lexer_size3619 = function() {
                                                                                                        return this.data["size"];
                                                                                                      };
                                                                                                      reader_lexer_size3619.def = true;
                                                                                                      obj3611.methods["size"] = reader_lexer_size3619;
                                                                                                      superDepth = origSuperDepth;
                                                                                                    };
                                                                                                    obj_init_3611.apply(inheritingObject, []);
                                                                                                    return obj3611;
                                                                                                    };
                                                                                                    obj3022.methods["lGenericToken()object"] = func3610;
                                                                                                  var func3620 = function(argcv) {    // method rGenericToken
                                                                                                    var returnTarget = invocationCount;
                                                                                                    invocationCount++;
                                                                                                    var curarg = 1;
                                                                                                    if (argcv[0] !== 0)
                                                                                                      throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for rGenericToken"));
                                                                                                    setModuleName("lexer");
                                                                                                    setLineNumber(191);    // compilenode object
                                                                                                    var obj3621 = Grace_allocObject(null, "rGenericToken");
                                                                                                    obj3621.definitionModule = "lexer";
                                                                                                    obj3621.definitionLine = 191;
                                                                                                    obj3621.outer = this;
                                                                                                    var reader_lexer_outer3622 = function() {
                                                                                                      return this.outer;
                                                                                                    };
                                                                                                    obj3621.methods["outer"] = reader_lexer_outer3622;
                                                                                                    var obj_init_3621 = function() {
                                                                                                      var origSuperDepth = superDepth;
                                                                                                      superDepth = obj3621;
                                                                                                      setLineNumber(192);    // compilenode call
                                                                                                      var call3623 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                      onOuter = true;
                                                                                                      onSelf = true;
                                                                                                      var call3624 = callmethodChecked(call3623, "token()object", [0, 1], this);
                                                                                                      obj3621.superobj = call3624;
                                                                                                      if (call3624.data) obj3621.data = call3624.data;
                                                                                                      if (call3624.hasOwnProperty('_value'))
                                                                                                          obj3621._value = call3624._value;
                                                                                                      setLineNumber(193);    // compilenode string
                                                                                                      var string3625 = new GraceString("rgeneric");
                                                                                                      obj3621.data["kind"] = string3625;
                                                                                                      var reader_lexer_kind3626 = function() {
                                                                                                        return this.data["kind"];
                                                                                                      };
                                                                                                      reader_lexer_kind3626.def = true;
                                                                                                      obj3621.methods["kind"] = reader_lexer_kind3626;
                                                                                                      setLineNumber(194);    // compilenode string
                                                                                                      var string3627 = new GraceString("\u27e7");
                                                                                                      obj3621.data["value"] = string3627;
                                                                                                      var reader_lexer_value3628 = function() {
                                                                                                        return this.data["value"];
                                                                                                      };
                                                                                                      reader_lexer_value3628.def = true;
                                                                                                      obj3621.methods["value"] = reader_lexer_value3628;
                                                                                                      setLineNumber(195);    // compilenode num
                                                                                                      obj3621.data["size"] = new GraceNum(1);
                                                                                                      var reader_lexer_size3629 = function() {
                                                                                                        return this.data["size"];
                                                                                                      };
                                                                                                      reader_lexer_size3629.def = true;
                                                                                                      obj3621.methods["size"] = reader_lexer_size3629;
                                                                                                      superDepth = origSuperDepth;
                                                                                                    };
                                                                                                    obj_init_3621.apply(obj3621, []);
                                                                                                    return obj3621;
                                                                                                  };
                                                                                                  func3620.paramCounts = [0];
                                                                                                  obj3022.methods["rGenericToken"] = func3620;
                                                                                                  func3620.definitionLine = 191;
                                                                                                  func3620.definitionModule = "lexer";
                                                                                                    var func3630 = function(argcv) {    // method rGenericToken()object
                                                                                                      var curarg = 1;
                                                                                                      var inheritingObject = arguments[curarg++];
                                                                                                      // Start argument processing
                                                                                                      curarg = 1;
                                                                                                      // End argument processing
                                                                                                      setModuleName("lexer");
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var obj3631 = Grace_allocObject(null, "rGenericToken");
                                                                                                      obj3631.definitionModule = "lexer";
                                                                                                      obj3631.definitionLine = 191;
                                                                                                      var inho3631 = inheritingObject;
                                                                                                      while (inho3631.superobj) inho3631 = inho3631.superobj;
                                                                                                      inho3631.superobj = obj3631;
                                                                                                      obj3631.data = inheritingObject.data;
                                                                                                      if (inheritingObject.hasOwnProperty('_value'))
                                                                                                        obj3631._value = inheritingObject._value;
                                                                                                      obj3631.outer = this;
                                                                                                      var reader_lexer_outer3632 = function() {
                                                                                                        return this.outer;
                                                                                                      };
                                                                                                      obj3631.methods["outer"] = reader_lexer_outer3632;
                                                                                                      var obj_init_3631 = function() {
                                                                                                        var origSuperDepth = superDepth;
                                                                                                        superDepth = obj3631;
                                                                                                        setLineNumber(192);    // compilenode call
                                                                                                        var call3633 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                        onOuter = true;
                                                                                                        onSelf = true;
                                                                                                        var call3634 = callmethodChecked(call3633, "token()object", [0, 1], this);
                                                                                                        obj3631.superobj = call3634;
                                                                                                        if (call3634.data) obj3631.data = call3634.data;
                                                                                                        if (call3634.hasOwnProperty('_value'))
                                                                                                            obj3631._value = call3634._value;
                                                                                                        setLineNumber(193);    // compilenode string
                                                                                                        var string3635 = new GraceString("rgeneric");
                                                                                                        obj3631.data["kind"] = string3635;
                                                                                                        var reader_lexer_kind3636 = function() {
                                                                                                          return this.data["kind"];
                                                                                                        };
                                                                                                        reader_lexer_kind3636.def = true;
                                                                                                        obj3631.methods["kind"] = reader_lexer_kind3636;
                                                                                                        setLineNumber(194);    // compilenode string
                                                                                                        var string3637 = new GraceString("\u27e7");
                                                                                                        obj3631.data["value"] = string3637;
                                                                                                        var reader_lexer_value3638 = function() {
                                                                                                          return this.data["value"];
                                                                                                        };
                                                                                                        reader_lexer_value3638.def = true;
                                                                                                        obj3631.methods["value"] = reader_lexer_value3638;
                                                                                                        setLineNumber(195);    // compilenode num
                                                                                                        obj3631.data["size"] = new GraceNum(1);
                                                                                                        var reader_lexer_size3639 = function() {
                                                                                                          return this.data["size"];
                                                                                                        };
                                                                                                        reader_lexer_size3639.def = true;
                                                                                                        obj3631.methods["size"] = reader_lexer_size3639;
                                                                                                        superDepth = origSuperDepth;
                                                                                                      };
                                                                                                      obj_init_3631.apply(inheritingObject, []);
                                                                                                      return obj3631;
                                                                                                      };
                                                                                                      obj3022.methods["rGenericToken()object"] = func3630;
                                                                                                    var func3640 = function(argcv) {    // method eofToken
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var curarg = 1;
                                                                                                      if (argcv[0] !== 0)
                                                                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for eofToken"));
                                                                                                      setModuleName("lexer");
                                                                                                      setLineNumber(197);    // compilenode object
                                                                                                      var obj3641 = Grace_allocObject(null, "eofToken");
                                                                                                      obj3641.definitionModule = "lexer";
                                                                                                      obj3641.definitionLine = 197;
                                                                                                      obj3641.outer = this;
                                                                                                      var reader_lexer_outer3642 = function() {
                                                                                                        return this.outer;
                                                                                                      };
                                                                                                      obj3641.methods["outer"] = reader_lexer_outer3642;
                                                                                                      var obj_init_3641 = function() {
                                                                                                        var origSuperDepth = superDepth;
                                                                                                        superDepth = obj3641;
                                                                                                        setLineNumber(198);    // compilenode call
                                                                                                        var call3643 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                        onOuter = true;
                                                                                                        onSelf = true;
                                                                                                        var call3644 = callmethodChecked(call3643, "token()object", [0, 1], this);
                                                                                                        obj3641.superobj = call3644;
                                                                                                        if (call3644.data) obj3641.data = call3644.data;
                                                                                                        if (call3644.hasOwnProperty('_value'))
                                                                                                            obj3641._value = call3644._value;
                                                                                                        setLineNumber(199);    // compilenode string
                                                                                                        var string3645 = new GraceString("eof");
                                                                                                        obj3641.data["kind"] = string3645;
                                                                                                        var reader_lexer_kind3646 = function() {
                                                                                                          return this.data["kind"];
                                                                                                        };
                                                                                                        reader_lexer_kind3646.def = true;
                                                                                                        obj3641.methods["kind"] = reader_lexer_kind3646;
                                                                                                        setLineNumber(200);    // compilenode string
                                                                                                        var string3647 = new GraceString("");
                                                                                                        obj3641.data["value"] = string3647;
                                                                                                        var reader_lexer_value3648 = function() {
                                                                                                          return this.data["value"];
                                                                                                        };
                                                                                                        reader_lexer_value3648.def = true;
                                                                                                        obj3641.methods["value"] = reader_lexer_value3648;
                                                                                                        setLineNumber(201);    // compilenode num
                                                                                                        obj3641.data["size"] = new GraceNum(0);
                                                                                                        var reader_lexer_size3649 = function() {
                                                                                                          return this.data["size"];
                                                                                                        };
                                                                                                        reader_lexer_size3649.def = true;
                                                                                                        obj3641.methods["size"] = reader_lexer_size3649;
                                                                                                        superDepth = origSuperDepth;
                                                                                                      };
                                                                                                      obj_init_3641.apply(obj3641, []);
                                                                                                      return obj3641;
                                                                                                    };
                                                                                                    func3640.paramCounts = [0];
                                                                                                    obj3022.methods["eofToken"] = func3640;
                                                                                                    func3640.definitionLine = 197;
                                                                                                    func3640.definitionModule = "lexer";
                                                                                                      var func3650 = function(argcv) {    // method eofToken()object
                                                                                                        var curarg = 1;
                                                                                                        var inheritingObject = arguments[curarg++];
                                                                                                        // Start argument processing
                                                                                                        curarg = 1;
                                                                                                        // End argument processing
                                                                                                        setModuleName("lexer");
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var obj3651 = Grace_allocObject(null, "eofToken");
                                                                                                        obj3651.definitionModule = "lexer";
                                                                                                        obj3651.definitionLine = 197;
                                                                                                        var inho3651 = inheritingObject;
                                                                                                        while (inho3651.superobj) inho3651 = inho3651.superobj;
                                                                                                        inho3651.superobj = obj3651;
                                                                                                        obj3651.data = inheritingObject.data;
                                                                                                        if (inheritingObject.hasOwnProperty('_value'))
                                                                                                          obj3651._value = inheritingObject._value;
                                                                                                        obj3651.outer = this;
                                                                                                        var reader_lexer_outer3652 = function() {
                                                                                                          return this.outer;
                                                                                                        };
                                                                                                        obj3651.methods["outer"] = reader_lexer_outer3652;
                                                                                                        var obj_init_3651 = function() {
                                                                                                          var origSuperDepth = superDepth;
                                                                                                          superDepth = obj3651;
                                                                                                          setLineNumber(198);    // compilenode call
                                                                                                          var call3653 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                          onOuter = true;
                                                                                                          onSelf = true;
                                                                                                          var call3654 = callmethodChecked(call3653, "token()object", [0, 1], this);
                                                                                                          obj3651.superobj = call3654;
                                                                                                          if (call3654.data) obj3651.data = call3654.data;
                                                                                                          if (call3654.hasOwnProperty('_value'))
                                                                                                              obj3651._value = call3654._value;
                                                                                                          setLineNumber(199);    // compilenode string
                                                                                                          var string3655 = new GraceString("eof");
                                                                                                          obj3651.data["kind"] = string3655;
                                                                                                          var reader_lexer_kind3656 = function() {
                                                                                                            return this.data["kind"];
                                                                                                          };
                                                                                                          reader_lexer_kind3656.def = true;
                                                                                                          obj3651.methods["kind"] = reader_lexer_kind3656;
                                                                                                          setLineNumber(200);    // compilenode string
                                                                                                          var string3657 = new GraceString("");
                                                                                                          obj3651.data["value"] = string3657;
                                                                                                          var reader_lexer_value3658 = function() {
                                                                                                            return this.data["value"];
                                                                                                          };
                                                                                                          reader_lexer_value3658.def = true;
                                                                                                          obj3651.methods["value"] = reader_lexer_value3658;
                                                                                                          setLineNumber(201);    // compilenode num
                                                                                                          obj3651.data["size"] = new GraceNum(0);
                                                                                                          var reader_lexer_size3659 = function() {
                                                                                                            return this.data["size"];
                                                                                                          };
                                                                                                          reader_lexer_size3659.def = true;
                                                                                                          obj3651.methods["size"] = reader_lexer_size3659;
                                                                                                          superDepth = origSuperDepth;
                                                                                                        };
                                                                                                        obj_init_3651.apply(inheritingObject, []);
                                                                                                        return obj3651;
                                                                                                        };
                                                                                                        obj3022.methods["eofToken()object"] = func3650;
                                                                                                      var func3660 = function(argcv) {    // method modechange(3)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_tokens = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        var var_mode = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        var var_accum = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 3)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for modechange(3)"));
                                                                                                        setModuleName("lexer");
                                                                                                        setLineNumber(222);    // compilenode num
                                                                                                        var var_tok = new GraceNum(0);
                                                                                                        var if3661 = GraceDone;
                                                                                                        setLineNumber(223);    // compilenode identifier
                                                                                                        var call3663 = callmethodChecked(var_accum, "size", [0]);
                                                                                                        var opresult3665 = callmethodChecked(call3663, ">", [1], new GraceNum(0));
                                                                                                        var string3667 = new GraceString("n");
                                                                                                        var opresult3670 = callmethodChecked(var_mode, "\u2260", [1], string3667);
                                                                                                        var opresult3672 = callmethodChecked(opresult3670, "||", [1], opresult3665);
                                                                                                        if (Grace_isTrue(opresult3672)) {
                                                                                                          var if3673 = GraceDone;
                                                                                                          setLineNumber(224);    // compilenode string
                                                                                                          var string3674 = new GraceString("i");
                                                                                                          var opresult3677 = callmethodChecked(var_mode, "==", [1], string3674);
                                                                                                          if (Grace_isTrue(opresult3677)) {
                                                                                                            var if3678 = GraceDone;
                                                                                                            setLineNumber(225);    // compilenode identifier
                                                                                                            var call3679 = callmethodChecked(var_keywords, "contains", [1], var_accum);
                                                                                                            if (Grace_isTrue(call3679)) {
                                                                                                              setLineNumber(226);    // compilenode identifier
                                                                                                              onSelf = true;
                                                                                                              var call3680 = callmethodChecked(this, "keywordToken", [1], var_accum);
                                                                                                              if3678 = call3680;
                                                                                                            } else {
                                                                                                              setLineNumber(228);    // compilenode identifier
                                                                                                              onSelf = true;
                                                                                                              var call3681 = callmethodChecked(this, "identifierToken", [1], var_accum);
                                                                                                              if3678 = call3681;
                                                                                                            }
                                                                                                            var_tok = if3678;
                                                                                                            setLineNumber(230);    // compilenode identifier
                                                                                                            var call3682 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                            if3673 = call3682;
                                                                                                          } else {
                                                                                                            var if3683 = GraceDone;
                                                                                                            setLineNumber(231);    // compilenode string
                                                                                                            var string3684 = new GraceString("\"");
                                                                                                            var opresult3687 = callmethodChecked(var_mode, "==", [1], string3684);
                                                                                                            if (Grace_isTrue(opresult3687)) {
                                                                                                              setLineNumber(232);    // compilenode identifier
                                                                                                              onSelf = true;
                                                                                                              var call3688 = callmethodChecked(this, "stringToken", [1], var_accum);
                                                                                                              var_tok = call3688;
                                                                                                              setLineNumber(233);    // compilenode identifier
                                                                                                              var call3689 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                              if3683 = call3689;
                                                                                                            } else {
                                                                                                              var if3690 = GraceDone;
                                                                                                              setLineNumber(234);    // compilenode string
                                                                                                              var string3691 = new GraceString("q");
                                                                                                              var opresult3694 = callmethodChecked(var_mode, "==", [1], string3691);
                                                                                                              if (Grace_isTrue(opresult3694)) {
                                                                                                                setLineNumber(235);    // compilenode identifier
                                                                                                                onSelf = true;
                                                                                                                var call3695 = callmethodChecked(this, "multiLineStringToken", [1], var_accum);
                                                                                                                var_tok = call3695;
                                                                                                                setLineNumber(236);    // compilenode identifier
                                                                                                                var call3696 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                if3690 = call3696;
                                                                                                              } else {
                                                                                                                var if3697 = GraceDone;
                                                                                                                setLineNumber(237);    // compilenode string
                                                                                                                var string3698 = new GraceString(",");
                                                                                                                var opresult3701 = callmethodChecked(var_mode, "==", [1], string3698);
                                                                                                                if (Grace_isTrue(opresult3701)) {
                                                                                                                  setLineNumber(238);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call3702 = callmethodChecked(this, "commaToken", [0]);
                                                                                                                  var_tok = call3702;
                                                                                                                  setLineNumber(239);    // compilenode identifier
                                                                                                                  var call3703 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                  if3697 = call3703;
                                                                                                                } else {
                                                                                                                  var if3704 = GraceDone;
                                                                                                                  setLineNumber(240);    // compilenode string
                                                                                                                  var string3705 = new GraceString(".");
                                                                                                                  var opresult3708 = callmethodChecked(var_mode, "==", [1], string3705);
                                                                                                                  if (Grace_isTrue(opresult3708)) {
                                                                                                                    setLineNumber(241);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call3709 = callmethodChecked(this, "dotToken", [0]);
                                                                                                                    var_tok = call3709;
                                                                                                                    setLineNumber(242);    // compilenode identifier
                                                                                                                    var call3710 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                    if3704 = call3710;
                                                                                                                  } else {
                                                                                                                    var if3711 = GraceDone;
                                                                                                                    setLineNumber(243);    // compilenode string
                                                                                                                    var string3712 = new GraceString("{");
                                                                                                                    var opresult3715 = callmethodChecked(var_mode, "==", [1], string3712);
                                                                                                                    if (Grace_isTrue(opresult3715)) {
                                                                                                                      setLineNumber(244);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call3716 = callmethodChecked(this, "lBraceToken", [0]);
                                                                                                                      var_tok = call3716;
                                                                                                                      setLineNumber(245);    // compilenode identifier
                                                                                                                      var call3717 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                      if3711 = call3717;
                                                                                                                    } else {
                                                                                                                      var if3718 = GraceDone;
                                                                                                                      setLineNumber(246);    // compilenode string
                                                                                                                      var string3719 = new GraceString("}");
                                                                                                                      var opresult3722 = callmethodChecked(var_mode, "==", [1], string3719);
                                                                                                                      if (Grace_isTrue(opresult3722)) {
                                                                                                                        setLineNumber(247);    // compilenode call
                                                                                                                        onSelf = true;
                                                                                                                        var call3723 = callmethodChecked(this, "rBraceToken", [0]);
                                                                                                                        var_tok = call3723;
                                                                                                                        setLineNumber(248);    // compilenode identifier
                                                                                                                        var call3724 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                        if3718 = call3724;
                                                                                                                      } else {
                                                                                                                        var if3725 = GraceDone;
                                                                                                                        setLineNumber(249);    // compilenode string
                                                                                                                        var string3726 = new GraceString("(");
                                                                                                                        var opresult3729 = callmethodChecked(var_mode, "==", [1], string3726);
                                                                                                                        if (Grace_isTrue(opresult3729)) {
                                                                                                                          setLineNumber(250);    // compilenode call
                                                                                                                          onSelf = true;
                                                                                                                          var call3730 = callmethodChecked(this, "lParenToken", [0]);
                                                                                                                          var_tok = call3730;
                                                                                                                          setLineNumber(251);    // compilenode identifier
                                                                                                                          var call3731 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                          if3725 = call3731;
                                                                                                                        } else {
                                                                                                                          var if3732 = GraceDone;
                                                                                                                          setLineNumber(252);    // compilenode string
                                                                                                                          var string3733 = new GraceString(")");
                                                                                                                          var opresult3736 = callmethodChecked(var_mode, "==", [1], string3733);
                                                                                                                          if (Grace_isTrue(opresult3736)) {
                                                                                                                            setLineNumber(253);    // compilenode call
                                                                                                                            onSelf = true;
                                                                                                                            var call3737 = callmethodChecked(this, "rParenToken", [0]);
                                                                                                                            var_tok = call3737;
                                                                                                                            var if3738 = GraceDone;
                                                                                                                            setLineNumber(254);    // compilenode string
                                                                                                                            var string3739 = new GraceString("lparen");
                                                                                                                            var call3741 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                            var call3742 = callmethodChecked(call3741, "kind", [0]);
                                                                                                                            var opresult3744 = callmethodChecked(call3742, "==", [1], string3739);
                                                                                                                            if (Grace_isTrue(opresult3744)) {
                                                                                                                              setLineNumber(256);    // compilenode string
                                                                                                                              var string3745 = new GraceString("Remove them, or put something between them.");
                                                                                                                              setLineNumber(255);    // compilenode string
                                                                                                                              var string3747 = new GraceString("empty parenthesis are not allowed. ");
                                                                                                                              var opresult3749 = callmethodChecked(string3747, "++", [1], string3745);
                                                                                                                              setLineNumber(257);    // compilenode identifier
                                                                                                                              var call3750 = callmethodChecked(var_tok, "line", [0]);
                                                                                                                              var call3751 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                              var call3752 = callmethodChecked(call3751, "linePos", [0]);
                                                                                                                              var call3753 = callmethodChecked(var_tok, "linePos", [0]);
                                                                                                                              setLineNumber(255);    // compilenode identifier
                                                                                                                              var call3754 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult3749, call3750, call3752, call3753);
                                                                                                                              if3738 = call3754;
                                                                                                                            }
                                                                                                                            setLineNumber(259);    // compilenode identifier
                                                                                                                            var call3755 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                            if3732 = call3755;
                                                                                                                          } else {
                                                                                                                            var if3756 = GraceDone;
                                                                                                                            setLineNumber(260);    // compilenode string
                                                                                                                            var string3757 = new GraceString("[");
                                                                                                                            var opresult3760 = callmethodChecked(var_mode, "==", [1], string3757);
                                                                                                                            if (Grace_isTrue(opresult3760)) {
                                                                                                                              setLineNumber(261);    // compilenode call
                                                                                                                              onSelf = true;
                                                                                                                              var call3761 = callmethodChecked(this, "lSquareToken", [0]);
                                                                                                                              var_tok = call3761;
                                                                                                                              setLineNumber(262);    // compilenode identifier
                                                                                                                              var call3762 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                              if3756 = call3762;
                                                                                                                            } else {
                                                                                                                              var if3763 = GraceDone;
                                                                                                                              setLineNumber(263);    // compilenode string
                                                                                                                              var string3764 = new GraceString("]");
                                                                                                                              var opresult3767 = callmethodChecked(var_mode, "==", [1], string3764);
                                                                                                                              if (Grace_isTrue(opresult3767)) {
                                                                                                                                setLineNumber(264);    // compilenode call
                                                                                                                                onSelf = true;
                                                                                                                                var call3768 = callmethodChecked(this, "rSquareToken", [0]);
                                                                                                                                var_tok = call3768;
                                                                                                                                setLineNumber(265);    // compilenode identifier
                                                                                                                                var call3769 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                                if3763 = call3769;
                                                                                                                              } else {
                                                                                                                                var if3770 = GraceDone;
                                                                                                                                setLineNumber(266);    // compilenode string
                                                                                                                                var string3771 = new GraceString("\u27e6");
                                                                                                                                var opresult3774 = callmethodChecked(var_mode, "==", [1], string3771);
                                                                                                                                if (Grace_isTrue(opresult3774)) {
                                                                                                                                  setLineNumber(267);    // compilenode call
                                                                                                                                  onSelf = true;
                                                                                                                                  var call3775 = callmethodChecked(this, "lGenericToken", [0]);
                                                                                                                                  var_tok = call3775;
                                                                                                                                  setLineNumber(268);    // compilenode identifier
                                                                                                                                  var call3776 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                                  if3770 = call3776;
                                                                                                                                } else {
                                                                                                                                  var if3777 = GraceDone;
                                                                                                                                  setLineNumber(269);    // compilenode string
                                                                                                                                  var string3778 = new GraceString("\u27e7");
                                                                                                                                  var opresult3781 = callmethodChecked(var_mode, "==", [1], string3778);
                                                                                                                                  if (Grace_isTrue(opresult3781)) {
                                                                                                                                    setLineNumber(270);    // compilenode call
                                                                                                                                    onSelf = true;
                                                                                                                                    var call3782 = callmethodChecked(this, "rGenericToken", [0]);
                                                                                                                                    var_tok = call3782;
                                                                                                                                    setLineNumber(271);    // compilenode identifier
                                                                                                                                    var call3783 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                                    if3777 = call3783;
                                                                                                                                  } else {
                                                                                                                                    var if3784 = GraceDone;
                                                                                                                                    setLineNumber(272);    // compilenode string
                                                                                                                                    var string3785 = new GraceString(";");
                                                                                                                                    var opresult3788 = callmethodChecked(var_mode, "==", [1], string3785);
                                                                                                                                    if (Grace_isTrue(opresult3788)) {
                                                                                                                                      setLineNumber(273);    // compilenode call
                                                                                                                                      onSelf = true;
                                                                                                                                      var call3789 = callmethodChecked(this, "semicolonToken", [0]);
                                                                                                                                      var_tok = call3789;
                                                                                                                                      setLineNumber(274);    // compilenode identifier
                                                                                                                                      var call3790 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                                      if3784 = call3790;
                                                                                                                                    } else {
                                                                                                                                      var if3791 = GraceDone;
                                                                                                                                      setLineNumber(275);    // compilenode string
                                                                                                                                      var string3792 = new GraceString("m");
                                                                                                                                      var opresult3795 = callmethodChecked(var_mode, "==", [1], string3792);
                                                                                                                                      if (Grace_isTrue(opresult3795)) {
                                                                                                                                        var if3796 = GraceDone;
                                                                                                                                        setLineNumber(276);    // compilenode block
                                                                                                                                        var block3797 = new GraceBlock(this, 276, 0);
                                                                                                                                        block3797.real = function() {
                                                                                                                                          var string3798 = new GraceString("dot");
                                                                                                                                          var call3800 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                          var call3801 = callmethodChecked(call3800, "kind", [0]);
                                                                                                                                          var opresult3803 = callmethodChecked(call3801, "==", [1], string3798);
                                                                                                                                          return opresult3803;
                                                                                                                                        };
                                                                                                                                        var call3806 = callmethodChecked(var_tokens, "size", [0]);
                                                                                                                                        var opresult3808 = callmethodChecked(call3806, ">", [1], new GraceNum(1));
                                                                                                                                        var opresult3810 = callmethodChecked(opresult3808, "&&", [1], block3797);
                                                                                                                                        if (Grace_isTrue(opresult3810)) {
                                                                                                                                          setLineNumber(277);    // compilenode identifier
                                                                                                                                          var call3811 = callmethodChecked(var_tokens, "pop", [0]);
                                                                                                                                          var var_dot = call3811;
                                                                                                                                          var if3812 = GraceDone;
                                                                                                                                          setLineNumber(278);    // compilenode string
                                                                                                                                          var string3813 = new GraceString("num");
                                                                                                                                          var call3815 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                          var call3816 = callmethodChecked(call3815, "kind", [0]);
                                                                                                                                          var opresult3818 = callmethodChecked(call3816, "==", [1], string3813);
                                                                                                                                          if (Grace_isTrue(opresult3818)) {
                                                                                                                                            var if3819 = GraceDone;
                                                                                                                                            setLineNumber(279);    // compilenode identifier
                                                                                                                                            var call3821 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                            var call3822 = callmethodChecked(call3821, "base", [0]);
                                                                                                                                            var opresult3824 = callmethodChecked(call3822, "==", [1], new GraceNum(10));
                                                                                                                                            if (Grace_isTrue(opresult3824)) {
                                                                                                                                              setLineNumber(280);    // compilenode identifier
                                                                                                                                              var call3825 = callmethodChecked(var_tokens, "pop", [0]);
                                                                                                                                              var_tok = call3825;
                                                                                                                                              setLineNumber(281);    // compilenode identifier
                                                                                                                                              onSelf = true;
                                                                                                                                              var call3826 = callmethodChecked(this, "makeNumToken", [1], var_accum);
                                                                                                                                              var var_decimal = call3826;
                                                                                                                                              var if3827 = GraceDone;
                                                                                                                                              setLineNumber(282);    // compilenode identifier
                                                                                                                                              var call3829 = callmethodChecked(var_decimal, "base", [0]);
                                                                                                                                              var opresult3831 = callmethodChecked(call3829, "==", [1], new GraceNum(10));
                                                                                                                                              if (Grace_isTrue(opresult3831)) {
                                                                                                                                                setLineNumber(283);    // compilenode string
                                                                                                                                                var string3833 = new GraceString(".");
                                                                                                                                                var call3835 = callmethodChecked(var_tok, "value", [0]);
                                                                                                                                                var opresult3837 = callmethodChecked(call3835, "++", [1], string3833);
                                                                                                                                                var opresult3839 = callmethodChecked(opresult3837, "++", [1], var_accum);
                                                                                                                                                onSelf = true;
                                                                                                                                                var call3840 = callmethodChecked(this, "numToken", [2], opresult3839, new GraceNum(10));
                                                                                                                                                var_tok = call3840;
                                                                                                                                                if3827 = GraceDone;
                                                                                                                                              } else {
                                                                                                                                                setLineNumber(285);    // compilenode array
                                                                                                                                                var array3841 = new PrimitiveGraceList([]);
                                                                                                                                                var var_suggestions = array3841;
                                                                                                                                                setLineNumber(286);    // compilenode identifier
                                                                                                                                                var call3842 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                                var call3843 = callmethodChecked(call3842, "new", [0]);
                                                                                                                                                var var_suggestion = call3843;
                                                                                                                                                setLineNumber(287);    // compilenode identifier
                                                                                                                                                var call3845 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                var opresult3847 = callmethodChecked(call3845, "+", [1], new GraceNum(1));
                                                                                                                                                onSelf = true;
                                                                                                                                                var call3849 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                                var diff3851 = callmethodChecked(call3849, "-", [1], new GraceNum(1));
                                                                                                                                                var call3852 = callmethodChecked(var_decimal, "value", [0]);
                                                                                                                                                onSelf = true;
                                                                                                                                                var call3853 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                                var call3854 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], opresult3847, diff3851, call3852, call3853);
                                                                                                                                                setLineNumber(288);    // compilenode identifier
                                                                                                                                                var call3855 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                                                setLineNumber(289);    // compilenode identifier
                                                                                                                                                var call3856 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                                var call3857 = callmethodChecked(call3856, "new", [0]);
                                                                                                                                                var_suggestion = call3857;
                                                                                                                                                setLineNumber(290);    // compilenode identifier
                                                                                                                                                var call3858 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                onSelf = true;
                                                                                                                                                var call3860 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                                var diff3862 = callmethodChecked(call3860, "-", [1], new GraceNum(1));
                                                                                                                                                onSelf = true;
                                                                                                                                                var call3863 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                                var call3864 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], call3858, diff3862, call3863);
                                                                                                                                                setLineNumber(291);    // compilenode identifier
                                                                                                                                                var call3865 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                                                setLineNumber(292);    // compilenode string
                                                                                                                                                var string3866 = new GraceString("the fractional part of a number must be in base 10.");
                                                                                                                                                setLineNumber(293);    // compilenode call
                                                                                                                                                onSelf = true;
                                                                                                                                                var call3867 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                                var call3869 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                var opresult3871 = callmethodChecked(call3869, "+", [1], new GraceNum(1));
                                                                                                                                                onSelf = true;
                                                                                                                                                var call3873 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                                var diff3875 = callmethodChecked(call3873, "-", [1], new GraceNum(1));
                                                                                                                                                setLineNumber(292);    // compilenode identifier
                                                                                                                                                var call3876 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], string3866, call3867, opresult3871, diff3875, var_suggestions);
                                                                                                                                                if3827 = call3876;
                                                                                                                                              }
                                                                                                                                              if3819 = if3827;
                                                                                                                                            } else {
                                                                                                                                              setLineNumber(296);    // compilenode array
                                                                                                                                              var array3877 = new PrimitiveGraceList([]);
                                                                                                                                              var var_suggestions = array3877;
                                                                                                                                              setLineNumber(297);    // compilenode identifier
                                                                                                                                              var call3878 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                              var call3879 = callmethodChecked(call3878, "new", [0]);
                                                                                                                                              var var_suggestion = call3879;
                                                                                                                                              setLineNumber(298);    // compilenode identifier
                                                                                                                                              var call3880 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                              var call3881 = callmethodChecked(call3880, "linePos", [0]);
                                                                                                                                              var call3883 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                              var diff3885 = callmethodChecked(call3883, "-", [1], new GraceNum(1));
                                                                                                                                              var call3886 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                              var call3887 = callmethodChecked(call3886, "value", [0]);
                                                                                                                                              onSelf = true;
                                                                                                                                              var call3888 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                              var call3889 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call3881, diff3885, call3887, call3888);
                                                                                                                                              setLineNumber(299);    // compilenode identifier
                                                                                                                                              var call3890 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                                              setLineNumber(300);    // compilenode identifier
                                                                                                                                              var call3891 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                              var call3892 = callmethodChecked(call3891, "new", [0]);
                                                                                                                                              var_suggestion = call3892;
                                                                                                                                              setLineNumber(301);    // compilenode identifier
                                                                                                                                              var call3893 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                              onSelf = true;
                                                                                                                                              var call3894 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                              var call3895 = callmethodChecked(var_suggestion, "deleteChar()onLine", [1, 1], call3893, call3894);
                                                                                                                                              setLineNumber(302);    // compilenode identifier
                                                                                                                                              var call3896 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                                              setLineNumber(303);    // compilenode string
                                                                                                                                              var string3897 = new GraceString(" cannot have a fractional part.");
                                                                                                                                              var call3899 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                              var call3900 = callmethodChecked(call3899, "base", [0]);
                                                                                                                                              var string3902 = new GraceString("a number in base ");
                                                                                                                                              var opresult3904 = callmethodChecked(string3902, "++", [1], call3900);
                                                                                                                                              var opresult3906 = callmethodChecked(opresult3904, "++", [1], string3897);
                                                                                                                                              setLineNumber(304);    // compilenode call
                                                                                                                                              onSelf = true;
                                                                                                                                              var call3907 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                              var call3908 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                              onSelf = true;
                                                                                                                                              var call3910 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                              var diff3912 = callmethodChecked(call3910, "-", [1], new GraceNum(1));
                                                                                                                                              setLineNumber(303);    // compilenode identifier
                                                                                                                                              var call3913 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], opresult3906, call3907, call3908, diff3912, var_suggestions);
                                                                                                                                              if3819 = call3913;
                                                                                                                                            }
                                                                                                                                            if3812 = if3819;
                                                                                                                                          } else {
                                                                                                                                            var if3914 = GraceDone;
                                                                                                                                            setLineNumber(307);    // compilenode string
                                                                                                                                            var string3915 = new GraceString("string");
                                                                                                                                            var call3917 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                            var call3918 = callmethodChecked(call3917, "kind", [0]);
                                                                                                                                            var opresult3920 = callmethodChecked(call3918, "==", [1], string3915);
                                                                                                                                            if (Grace_isTrue(opresult3920)) {
                                                                                                                                              setLineNumber(308);    // compilenode identifier
                                                                                                                                              var call3921 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                              var call3922 = callmethodChecked(call3921, "new", [0]);
                                                                                                                                              var var_suggestion = call3922;
                                                                                                                                              setLineNumber(309);    // compilenode identifier
                                                                                                                                              var call3923 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                              var string3924 = new GraceString("++");
                                                                                                                                              var call3925 = callmethodChecked(var_dot, "line", [0]);
                                                                                                                                              var call3926 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], call3923, string3924, call3925);
                                                                                                                                              setLineNumber(311);    // compilenode string
                                                                                                                                              var string3927 = new GraceString("To join a number to a string, use '++'.");
                                                                                                                                              setLineNumber(310);    // compilenode string
                                                                                                                                              var string3929 = new GraceString("a number may follow a '.' only if there is a number before the '.'. ");
                                                                                                                                              var opresult3931 = callmethodChecked(string3929, "++", [1], string3927);
                                                                                                                                              setLineNumber(312);    // compilenode identifier
                                                                                                                                              var call3932 = callmethodChecked(var_dot, "line", [0]);
                                                                                                                                              var call3933 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                              var call3934 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                              setLineNumber(310);    // compilenode identifier
                                                                                                                                              var call3935 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult3931, call3932, call3933, call3934, var_suggestion);
                                                                                                                                              if3914 = call3935;
                                                                                                                                            } else {
                                                                                                                                              var if3936 = GraceDone;
                                                                                                                                              setLineNumber(313);    // compilenode string
                                                                                                                                              var string3937 = new GraceString("bind");
                                                                                                                                              var call3939 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                              var call3940 = callmethodChecked(call3939, "kind", [0]);
                                                                                                                                              var opresult3942 = callmethodChecked(call3940, "==", [1], string3937);
                                                                                                                                              var string3944 = new GraceString("op");
                                                                                                                                              var call3946 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                              var call3947 = callmethodChecked(call3946, "kind", [0]);
                                                                                                                                              var opresult3949 = callmethodChecked(call3947, "==", [1], string3944);
                                                                                                                                              var opresult3951 = callmethodChecked(opresult3949, "||", [1], opresult3942);
                                                                                                                                              if (Grace_isTrue(opresult3951)) {
                                                                                                                                                setLineNumber(314);    // compilenode identifier
                                                                                                                                                var call3952 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                                var call3953 = callmethodChecked(call3952, "new", [0]);
                                                                                                                                                var var_suggestion = call3953;
                                                                                                                                                setLineNumber(315);    // compilenode string
                                                                                                                                                var string3954 = new GraceString("0");
                                                                                                                                                var call3955 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                var call3956 = callmethodChecked(var_dot, "line", [0]);
                                                                                                                                                var call3957 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string3954, call3955, call3956);
                                                                                                                                                setLineNumber(316);    // compilenode string
                                                                                                                                                var string3958 = new GraceString("a number must have a digit before the decimal point.");
                                                                                                                                                setLineNumber(317);    // compilenode identifier
                                                                                                                                                var call3959 = callmethodChecked(var_dot, "line", [0]);
                                                                                                                                                var call3960 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                setLineNumber(316);    // compilenode identifier
                                                                                                                                                var call3961 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], string3958, call3959, call3960, var_suggestion);
                                                                                                                                                if3936 = call3961;
                                                                                                                                              } else {
                                                                                                                                                var if3962 = GraceDone;
                                                                                                                                                setLineNumber(318);    // compilenode string
                                                                                                                                                var string3963 = new GraceString("identifier");
                                                                                                                                                var call3965 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                                var call3966 = callmethodChecked(call3965, "kind", [0]);
                                                                                                                                                var opresult3968 = callmethodChecked(call3966, "==", [1], string3963);
                                                                                                                                                if (Grace_isTrue(opresult3968)) {
                                                                                                                                                  setLineNumber(319);    // compilenode array
                                                                                                                                                  var array3969 = new PrimitiveGraceList([]);
                                                                                                                                                  var var_suggestions = array3969;
                                                                                                                                                  var if3970 = GraceDone;
                                                                                                                                                  setLineNumber(320);    // compilenode string
                                                                                                                                                  var string3971 = new GraceString("o");
                                                                                                                                                  var call3973 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                                  var call3974 = callmethodChecked(call3973, "value", [0]);
                                                                                                                                                  var opresult3976 = callmethodChecked(call3974, "==", [1], string3971);
                                                                                                                                                  if (Grace_isTrue(opresult3976)) {
                                                                                                                                                    setLineNumber(321);    // compilenode identifier
                                                                                                                                                    var call3977 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                                    var call3978 = callmethodChecked(call3977, "new", [0]);
                                                                                                                                                    var var_suggestion = call3978;
                                                                                                                                                    setLineNumber(322);    // compilenode identifier
                                                                                                                                                    var call3979 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                                    var call3980 = callmethodChecked(call3979, "linePos", [0]);
                                                                                                                                                    var string3981 = new GraceString("0");
                                                                                                                                                    var call3982 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                                    var call3983 = callmethodChecked(call3982, "line", [0]);
                                                                                                                                                    var call3984 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], call3980, string3981, call3983);
                                                                                                                                                    setLineNumber(323);    // compilenode identifier
                                                                                                                                                    var call3985 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                                                    if3970 = call3985;
                                                                                                                                                  }
                                                                                                                                                  setLineNumber(325);    // compilenode identifier
                                                                                                                                                  var call3986 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                                                  var call3987 = callmethodChecked(call3986, "new", [0]);
                                                                                                                                                  var var_suggestion = call3987;
                                                                                                                                                  setLineNumber(326);    // compilenode identifier
                                                                                                                                                  var call3988 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                  onSelf = true;
                                                                                                                                                  var call3990 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                                  var diff3992 = callmethodChecked(call3990, "-", [1], new GraceNum(1));
                                                                                                                                                  var string3993 = new GraceString(")");
                                                                                                                                                  var string3996 = new GraceString("(");
                                                                                                                                                  var opresult3998 = callmethodChecked(string3996, "++", [1], var_accum);
                                                                                                                                                  var opresult4000 = callmethodChecked(opresult3998, "++", [1], string3993);
                                                                                                                                                  var call4001 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                                                  var call4002 = callmethodChecked(call4001, "line", [0]);
                                                                                                                                                  var call4003 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call3988, diff3992, opresult4000, call4002);
                                                                                                                                                  setLineNumber(327);    // compilenode identifier
                                                                                                                                                  var call4004 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                                                  setLineNumber(328);    // compilenode string
                                                                                                                                                  var string4005 = new GraceString("a number may follow a '.' only if there is a number before the '.'.");
                                                                                                                                                  setLineNumber(329);    // compilenode identifier
                                                                                                                                                  var call4006 = callmethodChecked(var_dot, "line", [0]);
                                                                                                                                                  var call4007 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                  var call4008 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                  setLineNumber(328);    // compilenode identifier
                                                                                                                                                  var call4009 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], string4005, call4006, call4007, call4008, var_suggestions);
                                                                                                                                                  if3962 = call4009;
                                                                                                                                                } else {
                                                                                                                                                  setLineNumber(331);    // compilenode string
                                                                                                                                                  var string4010 = new GraceString("a number may follow a '.' only if there is a number before the '.'.");
                                                                                                                                                  setLineNumber(332);    // compilenode identifier
                                                                                                                                                  var call4011 = callmethodChecked(var_dot, "line", [0]);
                                                                                                                                                  var call4012 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                  var call4013 = callmethodChecked(var_dot, "linePos", [0]);
                                                                                                                                                  setLineNumber(331);    // compilenode identifier
                                                                                                                                                  var call4014 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], string4010, call4011, call4012, call4013);
                                                                                                                                                  if3962 = call4014;
                                                                                                                                                }
                                                                                                                                                if3936 = if3962;
                                                                                                                                              }
                                                                                                                                              if3914 = if3936;
                                                                                                                                            }
                                                                                                                                            if3812 = if3914;
                                                                                                                                          }
                                                                                                                                          if3796 = if3812;
                                                                                                                                        } else {
                                                                                                                                          setLineNumber(336);    // compilenode identifier
                                                                                                                                          onSelf = true;
                                                                                                                                          var call4015 = callmethodChecked(this, "makeNumToken", [1], var_accum);
                                                                                                                                          var_tok = call4015;
                                                                                                                                          if3796 = GraceDone;
                                                                                                                                        }
                                                                                                                                        setLineNumber(338);    // compilenode identifier
                                                                                                                                        var call4016 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                                        if3791 = call4016;
                                                                                                                                      } else {
                                                                                                                                        var if4017 = GraceDone;
                                                                                                                                        setLineNumber(339);    // compilenode string
                                                                                                                                        var string4018 = new GraceString("o");
                                                                                                                                        var opresult4021 = callmethodChecked(var_mode, "==", [1], string4018);
                                                                                                                                        if (Grace_isTrue(opresult4021)) {
                                                                                                                                          setLineNumber(340);    // compilenode identifier
                                                                                                                                          onSelf = true;
                                                                                                                                          var call4022 = callmethodChecked(this, "opToken", [1], var_accum);
                                                                                                                                          var_tok = call4022;
                                                                                                                                          var if4023 = GraceDone;
                                                                                                                                          setLineNumber(341);    // compilenode string
                                                                                                                                          var string4024 = new GraceString("\u2192");
                                                                                                                                          var opresult4027 = callmethodChecked(var_accum, "==", [1], string4024);
                                                                                                                                          if (Grace_isTrue(opresult4027)) {
                                                                                                                                            setLineNumber(342);    // compilenode call
                                                                                                                                            onSelf = true;
                                                                                                                                            var call4028 = callmethodChecked(this, "arrowToken", [0]);
                                                                                                                                            var_tok = call4028;
                                                                                                                                            if4023 = GraceDone;
                                                                                                                                          } else {
                                                                                                                                            var if4029 = GraceDone;
                                                                                                                                            setLineNumber(343);    // compilenode string
                                                                                                                                            var string4030 = new GraceString(":=");
                                                                                                                                            var opresult4033 = callmethodChecked(var_accum, "==", [1], string4030);
                                                                                                                                            if (Grace_isTrue(opresult4033)) {
                                                                                                                                              setLineNumber(344);    // compilenode call
                                                                                                                                              onSelf = true;
                                                                                                                                              var call4034 = callmethodChecked(this, "bindToken", [0]);
                                                                                                                                              var_tok = call4034;
                                                                                                                                              if4029 = GraceDone;
                                                                                                                                            } else {
                                                                                                                                              var if4035 = GraceDone;
                                                                                                                                              setLineNumber(345);    // compilenode string
                                                                                                                                              var string4036 = new GraceString(":");
                                                                                                                                              var opresult4039 = callmethodChecked(var_accum, "==", [1], string4036);
                                                                                                                                              if (Grace_isTrue(opresult4039)) {
                                                                                                                                                setLineNumber(346);    // compilenode call
                                                                                                                                                onSelf = true;
                                                                                                                                                var call4040 = callmethodChecked(this, "colonToken", [0]);
                                                                                                                                                var_tok = call4040;
                                                                                                                                                if4035 = GraceDone;
                                                                                                                                              }
                                                                                                                                              if4029 = if4035;
                                                                                                                                            }
                                                                                                                                            if4023 = if4029;
                                                                                                                                          }
                                                                                                                                          setLineNumber(348);    // compilenode identifier
                                                                                                                                          var call4041 = callmethodChecked(var_tokens, "push", [1], var_tok);
                                                                                                                                          if4017 = call4041;
                                                                                                                                        } else {
                                                                                                                                          var if4042 = GraceDone;
                                                                                                                                          setLineNumber(349);    // compilenode string
                                                                                                                                          var string4043 = new GraceString("d");
                                                                                                                                          var opresult4046 = callmethodChecked(var_mode, "==", [1], string4043);
                                                                                                                                          if (Grace_isTrue(opresult4046)) {
                                                                                                                                            setLineNumber(350);    // compilenode call
                                                                                                                                            onSelf = true;
                                                                                                                                            var call4048 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                            var diff4050 = callmethodChecked(call4048, "-", [1], new GraceNum(1));
                                                                                                                                            onSelf = true;
                                                                                                                                            var call4051 = callmethodChecked(this, "indentLevel:=", [1], diff4050);
                                                                                                                                            if4042 = call4051;
                                                                                                                                          } else {
                                                                                                                                            var if4052 = GraceDone;
                                                                                                                                            setLineNumber(351);    // compilenode string
                                                                                                                                            var string4053 = new GraceString("n");
                                                                                                                                            var opresult4056 = callmethodChecked(var_mode, "==", [1], string4053);
                                                                                                                                            if (Grace_isTrue(opresult4056)) {
                                                                                                                                            } else {
                                                                                                                                              var if4057 = GraceDone;
                                                                                                                                              setLineNumber(352);    // compilenode string
                                                                                                                                              var string4058 = new GraceString("e");
                                                                                                                                              var opresult4061 = callmethodChecked(var_mode, "==", [1], string4058);
                                                                                                                                              if (Grace_isTrue(opresult4061)) {
                                                                                                                                              } else {
                                                                                                                                                var if4062 = GraceDone;
                                                                                                                                                setLineNumber(353);    // compilenode string
                                                                                                                                                var string4063 = new GraceString("c");
                                                                                                                                                var opresult4066 = callmethodChecked(var_mode, "==", [1], string4063);
                                                                                                                                                if (Grace_isTrue(opresult4066)) {
                                                                                                                                                  setLineNumber(354);    // compilenode num
                                                                                                                                                  var var_firstNonSpace = new GraceNum(3);
                                                                                                                                                  setLineNumber(355);    // compilenode identifier
                                                                                                                                                  var call4067 = callmethodChecked(var_accum, "size", [0]);
                                                                                                                                                  var var_accumSize = call4067;
                                                                                                                                                  setLineNumber(356);    // compilenode block
                                                                                                                                                  var block4068 = new GraceBlock(this, 356, 0);
                                                                                                                                                  block4068.real = function() {
                                                                                                                                                    var block4069 = new GraceBlock(this, 356, 0);
                                                                                                                                                    block4069.real = function() {
                                                                                                                                                      setLineNumber(357);    // compilenode string
                                                                                                                                                      var string4070 = new GraceString(" ");
                                                                                                                                                      var call4072 = callmethodChecked(var_accum, "at", [1], var_firstNonSpace);
                                                                                                                                                      var opresult4074 = callmethodChecked(call4072, "==", [1], string4070);
                                                                                                                                                      return opresult4074;
                                                                                                                                                    };
                                                                                                                                                    setLineNumber(356);    // compilenode identifier
                                                                                                                                                    var call4076 = callmethodChecked(var_accum, "size", [0]);
                                                                                                                                                    var opresult4079 = callmethodChecked(var_firstNonSpace, "\u2264", [1], call4076);
                                                                                                                                                    var opresult4081 = callmethodChecked(opresult4079, "&&", [1], block4069);
                                                                                                                                                    return opresult4081;
                                                                                                                                                  };
                                                                                                                                                  setLineNumber(357);    // compilenode block
                                                                                                                                                  var block4082 = new GraceBlock(this, 357, 0);
                                                                                                                                                  block4082.real = function() {
                                                                                                                                                    setLineNumber(358);    // compilenode identifier
                                                                                                                                                    var opresult4085 = callmethodChecked(var_firstNonSpace, "+", [1], new GraceNum(1));
                                                                                                                                                    var_firstNonSpace = opresult4085;
                                                                                                                                                    return GraceDone;
                                                                                                                                                  };
                                                                                                                                                  var call4086 = callmethodChecked(var_prelude, "while()do", [1, 1], block4068, block4082);
                                                                                                                                                  setLineNumber(360);    // compilenode identifier
                                                                                                                                                  var call4087 = callmethodChecked(var_accum, "size", [0]);
                                                                                                                                                  var call4088 = callmethodChecked(var_accum, "substringFrom()to", [1, 1], var_firstNonSpace, call4087);
                                                                                                                                                  var var_cmt = call4088;
                                                                                                                                                  setLineNumber(361);    // compilenode identifier
                                                                                                                                                  onSelf = true;
                                                                                                                                                  var call4089 = callmethodChecked(this, "commentToken", [1], var_cmt);
                                                                                                                                                  var call4090 = callmethodChecked(var_tokens, "push", [1], call4089);
                                                                                                                                                  if4062 = call4090;
                                                                                                                                                } else {
                                                                                                                                                  var if4091 = GraceDone;
                                                                                                                                                  setLineNumber(362);    // compilenode string
                                                                                                                                                  var string4092 = new GraceString("p");
                                                                                                                                                  var opresult4095 = callmethodChecked(var_mode, "==", [1], string4092);
                                                                                                                                                  if (Grace_isTrue(opresult4095)) {
                                                                                                                                                    var if4096 = GraceDone;
                                                                                                                                                    setLineNumber(363);    // compilenode string
                                                                                                                                                    var string4097 = new GraceString("#pragma ");
                                                                                                                                                    var call4099 = callmethodChecked(var_accum, "substringFrom()to", [1, 1], new GraceNum(1), new GraceNum(8));
                                                                                                                                                    var opresult4101 = callmethodChecked(call4099, "==", [1], string4097);
                                                                                                                                                    if (Grace_isTrue(opresult4101)) {
                                                                                                                                                      setLineNumber(365);    // compilenode identifier
                                                                                                                                                      var call4102 = callmethodChecked(var_accum, "size", [0]);
                                                                                                                                                      var call4103 = callmethodChecked(var_accum, "substringFrom()to", [1, 1], new GraceNum(9), call4102);
                                                                                                                                                      setLineNumber(364);    // compilenode identifier
                                                                                                                                                      var call4104 = callmethodChecked(var_util, "processExtension", [1], call4103);
                                                                                                                                                      if4096 = call4104;
                                                                                                                                                    }
                                                                                                                                                    if4091 = if4096;
                                                                                                                                                  } else {
                                                                                                                                                    setLineNumber(370);    // compilenode string
                                                                                                                                                    var string4105 = new GraceString("");
                                                                                                                                                    onSelf = true;
                                                                                                                                                    var call4107 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                                    var string4109 = new GraceString(":");
                                                                                                                                                    onSelf = true;
                                                                                                                                                    var call4111 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                                    var string4113 = new GraceString("at position ");
                                                                                                                                                    var opresult4115 = callmethodChecked(string4113, "++", [1], call4111);
                                                                                                                                                    var opresult4117 = callmethodChecked(opresult4115, "++", [1], string4109);
                                                                                                                                                    var opresult4119 = callmethodChecked(opresult4117, "++", [1], call4107);
                                                                                                                                                    var opresult4121 = callmethodChecked(opresult4119, "++", [1], string4105);
                                                                                                                                                    setLineNumber(369);    // compilenode string
                                                                                                                                                    var string4123 = new GraceString("\u203a ");
                                                                                                                                                    var string4126 = new GraceString(" with accum \u2039");
                                                                                                                                                    var string4129 = new GraceString("no handler for mode ");
                                                                                                                                                    var opresult4131 = callmethodChecked(string4129, "++", [1], var_mode);
                                                                                                                                                    var opresult4133 = callmethodChecked(opresult4131, "++", [1], string4126);
                                                                                                                                                    var opresult4135 = callmethodChecked(opresult4133, "++", [1], var_accum);
                                                                                                                                                    var opresult4137 = callmethodChecked(opresult4135, "++", [1], string4123);
                                                                                                                                                    setLineNumber(368);    // compilenode string
                                                                                                                                                    var string4139 = new GraceString("Internal error in lexer: ");
                                                                                                                                                    var opresult4141 = callmethodChecked(string4139, "++", [1], opresult4137);
                                                                                                                                                    var opresult4143 = callmethodChecked(opresult4141, "++", [1], opresult4121);
                                                                                                                                                    var call4144 = callmethodChecked(var_prelude, "ProgrammingError", [0]);
                                                                                                                                                    var call4145 = callmethodChecked(call4144, "raise", [1], opresult4143);
                                                                                                                                                    if4091 = call4145;
                                                                                                                                                  }
                                                                                                                                                  if4062 = if4091;
                                                                                                                                                }
                                                                                                                                                if4057 = if4062;
                                                                                                                                              }
                                                                                                                                              if4052 = if4057;
                                                                                                                                            }
                                                                                                                                            if4042 = if4052;
                                                                                                                                          }
                                                                                                                                          if4017 = if4042;
                                                                                                                                        }
                                                                                                                                        if3791 = if4017;
                                                                                                                                      }
                                                                                                                                      if3784 = if3791;
                                                                                                                                    }
                                                                                                                                    if3777 = if3784;
                                                                                                                                  }
                                                                                                                                  if3770 = if3777;
                                                                                                                                }
                                                                                                                                if3763 = if3770;
                                                                                                                              }
                                                                                                                              if3756 = if3763;
                                                                                                                            }
                                                                                                                            if3732 = if3756;
                                                                                                                          }
                                                                                                                          if3725 = if3732;
                                                                                                                        }
                                                                                                                        if3718 = if3725;
                                                                                                                      }
                                                                                                                      if3711 = if3718;
                                                                                                                    }
                                                                                                                    if3704 = if3711;
                                                                                                                  }
                                                                                                                  if3697 = if3704;
                                                                                                                }
                                                                                                                if3690 = if3697;
                                                                                                              }
                                                                                                              if3683 = if3690;
                                                                                                            }
                                                                                                            if3673 = if3683;
                                                                                                          }
                                                                                                          if3661 = if3673;
                                                                                                        }
                                                                                                        setLineNumber(373);    // compilenode call
                                                                                                        onSelf = true;
                                                                                                        var call4146 = callmethodChecked(this, "linePosition", [0]);
                                                                                                        onSelf = true;
                                                                                                        var call4147 = callmethodChecked(this, "startPosition:=", [1], call4146);
                                                                                                        return call4147;
                                                                                                      };
                                                                                                      func3660.paramCounts = [3];
                                                                                                      obj3022.methods["modechange"] = func3660;
                                                                                                      func3660.definitionLine = 205;
                                                                                                      func3660.definitionModule = "lexer";
                                                                                                      var func4148 = function(argcv) {    // method fromBase(2)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_str = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        var var_base = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 2)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for fromBase(2)"));
                                                                                                        setModuleName("lexer");
                                                                                                        setLineNumber(377);    // compilenode num
                                                                                                        var var_val = new GraceNum(0);
                                                                                                        setLineNumber(378);    // compilenode num
                                                                                                        var var_i = new GraceNum(0);
                                                                                                        setLineNumber(379);    // compilenode block
                                                                                                        var block4149 = new GraceBlock(this, 379, 1);
                                                                                                        setLineNumber(1);    // compilenode identifier
                                                                                                        block4149.real = function(var_c) {
                                                                                                          setLineNumber(380);    // compilenode identifier
                                                                                                          var call4150 = callmethodChecked(var_c, "ord", [0]);
                                                                                                          var var_n = call4150;
                                                                                                          setLineNumber(381);    // compilenode identifier
                                                                                                          var prod4153 = callmethodChecked(var_val, "*", [1], var_base);
                                                                                                          var_val = prod4153;
                                                                                                          setLineNumber(382);    // compilenode num
                                                                                                          var var_inc = new GraceNum(0);
                                                                                                          var if4154 = GraceDone;
                                                                                                          setLineNumber(383);    // compilenode identifier
                                                                                                          var opresult4157 = callmethodChecked(var_n, "\u2264", [1], new GraceNum(57));
                                                                                                          var opresult4161 = callmethodChecked(var_n, "\u2265", [1], new GraceNum(48));
                                                                                                          var opresult4163 = callmethodChecked(opresult4161, "&&", [1], opresult4157);
                                                                                                          if (Grace_isTrue(opresult4163)) {
                                                                                                            setLineNumber(384);    // compilenode identifier
                                                                                                            var diff4166 = callmethodChecked(var_n, "-", [1], new GraceNum(48));
                                                                                                            var_inc = diff4166;
                                                                                                            if4154 = GraceDone;
                                                                                                          } else {
                                                                                                            var if4167 = GraceDone;
                                                                                                            setLineNumber(385);    // compilenode identifier
                                                                                                            var opresult4170 = callmethodChecked(var_n, "\u2264", [1], new GraceNum(90));
                                                                                                            var opresult4174 = callmethodChecked(var_n, "\u2265", [1], new GraceNum(65));
                                                                                                            var opresult4176 = callmethodChecked(opresult4174, "&&", [1], opresult4170);
                                                                                                            if (Grace_isTrue(opresult4176)) {
                                                                                                              setLineNumber(386);    // compilenode identifier
                                                                                                              var diff4179 = callmethodChecked(var_n, "-", [1], new GraceNum(55));
                                                                                                              var_inc = diff4179;
                                                                                                              if4167 = GraceDone;
                                                                                                            } else {
                                                                                                              setLineNumber(388);    // compilenode identifier
                                                                                                              var diff4182 = callmethodChecked(var_n, "-", [1], new GraceNum(87));
                                                                                                              var_inc = diff4182;
                                                                                                              if4167 = GraceDone;
                                                                                                            }
                                                                                                            if4154 = if4167;
                                                                                                          }
                                                                                                          var if4183 = GraceDone;
                                                                                                          setLineNumber(390);    // compilenode identifier
                                                                                                          var opresult4186 = callmethodChecked(var_inc, "\u2265", [1], var_base);
                                                                                                          if (Grace_isTrue(opresult4186)) {
                                                                                                            var if4187 = GraceDone;
                                                                                                            setLineNumber(391);    // compilenode identifier
                                                                                                            var opresult4190 = callmethodChecked(var_inc, "<", [1], new GraceNum(16));
                                                                                                            var string4192 = new GraceString("0");
                                                                                                            var call4194 = callmethodChecked(var_str, "first", [0]);
                                                                                                            var opresult4196 = callmethodChecked(call4194, "==", [1], string4192);
                                                                                                            var opresult4198 = callmethodChecked(opresult4196, "&&", [1], opresult4190);
                                                                                                            if (Grace_isTrue(opresult4198)) {
                                                                                                              setLineNumber(392);    // compilenode identifier
                                                                                                              var call4199 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                              var call4200 = callmethodChecked(call4199, "new", [0]);
                                                                                                              var var_suggestion = call4200;
                                                                                                              setLineNumber(393);    // compilenode string
                                                                                                              var string4201 = new GraceString("x");
                                                                                                              var call4203 = callmethodChecked(var_str, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4205 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4207 = callmethodChecked(call4205, "-", [1], call4203);
                                                                                                              var opresult4209 = callmethodChecked(diff4207, "+", [1], new GraceNum(1));
                                                                                                              onSelf = true;
                                                                                                              var call4210 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call4211 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string4201, opresult4209, call4210);
                                                                                                              setLineNumber(394);    // compilenode string
                                                                                                              var string4212 = new GraceString("a number in base 16 must start with '0x'.");
                                                                                                              setLineNumber(395);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4213 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call4215 = callmethodChecked(var_str, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4217 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4219 = callmethodChecked(call4217, "-", [1], call4215);
                                                                                                              var opresult4221 = callmethodChecked(diff4219, "+", [1], new GraceNum(1));
                                                                                                              setLineNumber(394);    // compilenode identifier
                                                                                                              var call4222 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], string4212, call4213, opresult4221, var_suggestion);
                                                                                                              if4187 = call4222;
                                                                                                            } else {
                                                                                                              setLineNumber(397);    // compilenode identifier
                                                                                                              var call4223 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                              var call4224 = callmethodChecked(call4223, "new", [0]);
                                                                                                              var var_suggestion = call4224;
                                                                                                              var if4225 = GraceDone;
                                                                                                              setLineNumber(398);    // compilenode identifier
                                                                                                              var call4227 = callmethodChecked(var_str, "size", [0]);
                                                                                                              var opresult4229 = callmethodChecked(call4227, "==", [1], new GraceNum(1));
                                                                                                              if (Grace_isTrue(opresult4229)) {
                                                                                                                setLineNumber(399);    // compilenode identifier
                                                                                                                var call4231 = callmethodChecked(var_str, "size", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call4233 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                var diff4235 = callmethodChecked(call4233, "-", [1], call4231);
                                                                                                                var diff4237 = callmethodChecked(diff4235, "-", [1], new GraceNum(1));
                                                                                                                onSelf = true;
                                                                                                                var call4239 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                var diff4241 = callmethodChecked(call4239, "-", [1], new GraceNum(1));
                                                                                                                onSelf = true;
                                                                                                                var call4242 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                var call4243 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff4237, diff4241, call4242);
                                                                                                                if4225 = call4243;
                                                                                                              } else {
                                                                                                                setLineNumber(401);    // compilenode identifier
                                                                                                                var call4245 = callmethodChecked(var_str, "size", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call4247 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                var diff4249 = callmethodChecked(call4247, "-", [1], call4245);
                                                                                                                var opresult4251 = callmethodChecked(diff4249, "+", [1], var_i);
                                                                                                                onSelf = true;
                                                                                                                var call4252 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                var call4253 = callmethodChecked(var_suggestion, "deleteChar()onLine", [1, 1], opresult4251, call4252);
                                                                                                                if4225 = call4253;
                                                                                                              }
                                                                                                              var if4254 = GraceDone;
                                                                                                              setLineNumber(403);    // compilenode identifier
                                                                                                              var opresult4257 = callmethodChecked(var_base, "\u2264", [1], new GraceNum(10));
                                                                                                              if (Grace_isTrue(opresult4257)) {
                                                                                                                setLineNumber(404);    // compilenode string
                                                                                                                var string4258 = new GraceString("'");
                                                                                                                var diff4262 = callmethodChecked(var_base, "-", [1], new GraceNum(1));
                                                                                                                var string4264 = new GraceString("'0' to '");
                                                                                                                var opresult4266 = callmethodChecked(string4264, "++", [1], diff4262);
                                                                                                                var opresult4268 = callmethodChecked(opresult4266, "++", [1], string4258);
                                                                                                                if4254 = opresult4268;
                                                                                                              } else {
                                                                                                                setLineNumber(406);    // compilenode string
                                                                                                                var string4269 = new GraceString("'");
                                                                                                                var opresult4273 = callmethodChecked(new GraceNum(87), "+", [1], var_base);
                                                                                                                var call4274 = callmethodChecked(var_unicode, "create", [1], opresult4273);
                                                                                                                var string4276 = new GraceString("'0' to '9', 'a' to '");
                                                                                                                var opresult4278 = callmethodChecked(string4276, "++", [1], call4274);
                                                                                                                var opresult4280 = callmethodChecked(opresult4278, "++", [1], string4269);
                                                                                                                if4254 = opresult4280;
                                                                                                              }
                                                                                                              var var_validDigits = if4254;
                                                                                                              setLineNumber(408);    // compilenode string
                                                                                                              var string4281 = new GraceString(".");
                                                                                                              var string4284 = new GraceString(". Valid digits are ");
                                                                                                              var string4287 = new GraceString("' is not a valid digit in base ");
                                                                                                              var string4290 = new GraceString("'");
                                                                                                              var opresult4292 = callmethodChecked(string4290, "++", [1], var_c);
                                                                                                              var opresult4294 = callmethodChecked(opresult4292, "++", [1], string4287);
                                                                                                              var opresult4296 = callmethodChecked(opresult4294, "++", [1], var_base);
                                                                                                              var opresult4298 = callmethodChecked(opresult4296, "++", [1], string4284);
                                                                                                              var opresult4300 = callmethodChecked(opresult4298, "++", [1], var_validDigits);
                                                                                                              var opresult4302 = callmethodChecked(opresult4300, "++", [1], string4281);
                                                                                                              setLineNumber(409);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4303 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call4305 = callmethodChecked(var_str, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4307 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4309 = callmethodChecked(call4307, "-", [1], call4305);
                                                                                                              var opresult4311 = callmethodChecked(diff4309, "+", [1], var_i);
                                                                                                              var call4313 = callmethodChecked(var_str, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4315 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4317 = callmethodChecked(call4315, "-", [1], call4313);
                                                                                                              var opresult4319 = callmethodChecked(diff4317, "+", [1], var_i);
                                                                                                              setLineNumber(408);    // compilenode identifier
                                                                                                              var call4320 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult4302, call4303, opresult4311, opresult4319, var_suggestion);
                                                                                                              if4187 = call4320;
                                                                                                            }
                                                                                                            if4183 = if4187;
                                                                                                          }
                                                                                                          setLineNumber(412);    // compilenode identifier
                                                                                                          var opresult4323 = callmethodChecked(var_val, "+", [1], var_inc);
                                                                                                          var_val = opresult4323;
                                                                                                          setLineNumber(413);    // compilenode identifier
                                                                                                          var opresult4326 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                                                                          var_i = opresult4326;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        var call4327 = callmethodChecked(var_prelude, "for()do", [1, 1], var_str, block4149);
                                                                                                        setLineNumber(415);    // compilenode identifier
                                                                                                        return var_val;
                                                                                                      };
                                                                                                      func4148.paramCounts = [2];
                                                                                                      obj3022.methods["fromBase"] = func4148;
                                                                                                      func4148.definitionLine = 376;
                                                                                                      func4148.definitionModule = "lexer";
                                                                                                      var func4328 = function(argcv) {    // method hexdecchar(1)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_c = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 1)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for hexdecchar(1)"));
                                                                                                        setModuleName("lexer");
                                                                                                        setLineNumber(420);    // compilenode string
                                                                                                        var string4329 = new GraceString("A");
                                                                                                        var call4330 = callmethodChecked(string4329, "ord", [0]);
                                                                                                        var var_AOrd = call4330;
                                                                                                        setLineNumber(421);    // compilenode string
                                                                                                        var string4331 = new GraceString("a");
                                                                                                        var call4332 = callmethodChecked(string4331, "ord", [0]);
                                                                                                        var var_aOrd = call4332;
                                                                                                        setLineNumber(422);    // compilenode string
                                                                                                        var string4333 = new GraceString("0");
                                                                                                        var call4334 = callmethodChecked(string4333, "ord", [0]);
                                                                                                        var var_zeroOrd = call4334;
                                                                                                        setLineNumber(423);    // compilenode identifier
                                                                                                        var call4335 = callmethodChecked(var_c, "ord", [0]);
                                                                                                        var var_cOrd = call4335;
                                                                                                        var if4336 = GraceDone;
                                                                                                        setLineNumber(424);    // compilenode string
                                                                                                        var string4337 = new GraceString("F");
                                                                                                        var call4338 = callmethodChecked(string4337, "ord", [0]);
                                                                                                        var opresult4341 = callmethodChecked(var_cOrd, "\u2264", [1], call4338);
                                                                                                        var opresult4345 = callmethodChecked(var_cOrd, "\u2265", [1], var_AOrd);
                                                                                                        var opresult4347 = callmethodChecked(opresult4345, "&&", [1], opresult4341);
                                                                                                        if (Grace_isTrue(opresult4347)) {
                                                                                                          setLineNumber(425);    // compilenode identifier
                                                                                                          var diff4351 = callmethodChecked(var_cOrd, "-", [1], var_AOrd);
                                                                                                          var opresult4353 = callmethodChecked(diff4351, "+", [1], new GraceNum(10));
                                                                                                          if4336 = opresult4353;
                                                                                                        } else {
                                                                                                          var if4354 = GraceDone;
                                                                                                          setLineNumber(426);    // compilenode string
                                                                                                          var string4355 = new GraceString("f");
                                                                                                          var call4356 = callmethodChecked(string4355, "ord", [0]);
                                                                                                          var opresult4359 = callmethodChecked(var_cOrd, "\u2264", [1], call4356);
                                                                                                          var opresult4363 = callmethodChecked(var_cOrd, "\u2265", [1], var_aOrd);
                                                                                                          var opresult4365 = callmethodChecked(opresult4363, "&&", [1], opresult4359);
                                                                                                          if (Grace_isTrue(opresult4365)) {
                                                                                                            setLineNumber(427);    // compilenode identifier
                                                                                                            var diff4369 = callmethodChecked(var_cOrd, "-", [1], var_aOrd);
                                                                                                            var opresult4371 = callmethodChecked(diff4369, "+", [1], new GraceNum(10));
                                                                                                            if4354 = opresult4371;
                                                                                                          } else {
                                                                                                            var if4372 = GraceDone;
                                                                                                            setLineNumber(428);    // compilenode string
                                                                                                            var string4373 = new GraceString("9");
                                                                                                            var call4374 = callmethodChecked(string4373, "ord", [0]);
                                                                                                            var opresult4377 = callmethodChecked(var_cOrd, "\u2264", [1], call4374);
                                                                                                            var opresult4381 = callmethodChecked(var_cOrd, "\u2265", [1], var_zeroOrd);
                                                                                                            var opresult4383 = callmethodChecked(opresult4381, "&&", [1], opresult4377);
                                                                                                            if (Grace_isTrue(opresult4383)) {
                                                                                                              setLineNumber(429);    // compilenode identifier
                                                                                                              var diff4386 = callmethodChecked(var_cOrd, "-", [1], var_zeroOrd);
                                                                                                              if4372 = diff4386;
                                                                                                            } else {
                                                                                                              setLineNumber(431);    // compilenode string
                                                                                                              var string4387 = new GraceString("' must be a hexadecimal digit");
                                                                                                              var string4390 = new GraceString("the character '");
                                                                                                              var opresult4392 = callmethodChecked(string4390, "++", [1], var_c);
                                                                                                              var opresult4394 = callmethodChecked(opresult4392, "++", [1], string4387);
                                                                                                              setLineNumber(432);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4395 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4396 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4397 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              setLineNumber(431);    // compilenode identifier
                                                                                                              var call4398 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult4394, call4395, call4396, call4397);
                                                                                                              if4372 = call4398;
                                                                                                            }
                                                                                                            if4354 = if4372;
                                                                                                          }
                                                                                                          if4336 = if4354;
                                                                                                        }
                                                                                                        return if4336;
                                                                                                      };
                                                                                                      func4328.paramCounts = [1];
                                                                                                      obj3022.methods["hexdecchar"] = func4328;
                                                                                                      func4328.definitionLine = 418;
                                                                                                      func4328.definitionModule = "lexer";
                                                                                                      var func4399 = function(argcv) {    // method makeNumToken(1)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_accum = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 1)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for makeNumToken(1)"));
                                                                                                        setModuleName("lexer");
                                                                                                        setLineNumber(437);    // compilenode num
                                                                                                        var var_base = new GraceNum(10);
                                                                                                        setLineNumber(438);    // compilenode identifier
                                                                                                        var var_baseSet = GraceFalse;
                                                                                                        setLineNumber(439);    // compilenode string
                                                                                                        var string4400 = new GraceString("");
                                                                                                        var var_sofar = string4400;
                                                                                                        setLineNumber(440);    // compilenode num
                                                                                                        var var_i = new GraceNum(0);
                                                                                                        setLineNumber(441);    // compilenode block
                                                                                                        var block4401 = new GraceBlock(this, 441, 1);
                                                                                                        setLineNumber(1);    // compilenode identifier
                                                                                                        block4401.real = function(var_c) {
                                                                                                          var if4402 = GraceDone;
                                                                                                          setLineNumber(442);    // compilenode identifier
                                                                                                          var call4403 = callmethodChecked(var_baseSet, "prefix!", [0]);
                                                                                                          var string4405 = new GraceString("x");
                                                                                                          var opresult4408 = callmethodChecked(var_c, "==", [1], string4405);
                                                                                                          var opresult4410 = callmethodChecked(opresult4408, "&&", [1], call4403);
                                                                                                          if (Grace_isTrue(opresult4410)) {
                                                                                                            setLineNumber(443);    // compilenode identifier
                                                                                                            var call4411 = callmethodChecked(var_sofar, "asNumber", [0]);
                                                                                                            var_base = call4411;
                                                                                                            setLineNumber(444);    // compilenode identifier
                                                                                                            var_baseSet = GraceTrue;
                                                                                                            var if4412 = GraceDone;
                                                                                                            setLineNumber(445);    // compilenode identifier
                                                                                                            var opresult4415 = callmethodChecked(var_base, "==", [1], new GraceNum(0));
                                                                                                            if (Grace_isTrue(opresult4415)) {
                                                                                                              setLineNumber(446);    // compilenode num
                                                                                                              var_base = new GraceNum(16);
                                                                                                              if4412 = GraceDone;
                                                                                                            }
                                                                                                            var if4416 = GraceDone;
                                                                                                            setLineNumber(448);    // compilenode identifier
                                                                                                            var opresult4419 = callmethodChecked(var_base, ">", [1], new GraceNum(36));
                                                                                                            var opresult4423 = callmethodChecked(var_base, "<", [1], new GraceNum(2));
                                                                                                            var opresult4425 = callmethodChecked(opresult4423, "||", [1], opresult4419);
                                                                                                            if (Grace_isTrue(opresult4425)) {
                                                                                                              setLineNumber(449);    // compilenode array
                                                                                                              var array4426 = new PrimitiveGraceList([]);
                                                                                                              var var_suggestions = array4426;
                                                                                                              setLineNumber(450);    // compilenode identifier
                                                                                                              var call4427 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                              var call4428 = callmethodChecked(call4427, "new", [0]);
                                                                                                              var var_suggestion = call4428;
                                                                                                              setLineNumber(451);    // compilenode identifier
                                                                                                              var call4430 = callmethodChecked(var_accum, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4432 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4434 = callmethodChecked(call4432, "-", [1], call4430);
                                                                                                              var opresult4436 = callmethodChecked(diff4434, "+", [1], var_i);
                                                                                                              var string4437 = new GraceString("*");
                                                                                                              onSelf = true;
                                                                                                              var call4438 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call4439 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], opresult4436, string4437, call4438);
                                                                                                              setLineNumber(452);    // compilenode identifier
                                                                                                              var call4440 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                              setLineNumber(453);    // compilenode identifier
                                                                                                              var call4441 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                              var call4442 = callmethodChecked(call4441, "new", [0]);
                                                                                                              var_suggestion = call4442;
                                                                                                              setLineNumber(454);    // compilenode identifier
                                                                                                              var call4443 = callmethodChecked(var_accum, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4445 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4447 = callmethodChecked(call4445, "-", [1], call4443);
                                                                                                              var call4449 = callmethodChecked(var_accum, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4451 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4453 = callmethodChecked(call4451, "-", [1], call4449);
                                                                                                              var opresult4455 = callmethodChecked(diff4453, "+", [1], var_i);
                                                                                                              onSelf = true;
                                                                                                              var call4456 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call4457 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff4447, opresult4455, call4456);
                                                                                                              setLineNumber(455);    // compilenode identifier
                                                                                                              var call4458 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                              setLineNumber(456);    // compilenode string
                                                                                                              var string4459 = new GraceString(" is not a valid numerical base.");
                                                                                                              var string4462 = new GraceString("base ");
                                                                                                              var opresult4464 = callmethodChecked(string4462, "++", [1], var_base);
                                                                                                              var opresult4466 = callmethodChecked(opresult4464, "++", [1], string4459);
                                                                                                              setLineNumber(457);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4467 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call4468 = callmethodChecked(var_accum, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4470 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4472 = callmethodChecked(call4470, "-", [1], call4468);
                                                                                                              var call4475 = callmethodChecked(var_accum, "size", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4477 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var diff4479 = callmethodChecked(call4477, "-", [1], call4475);
                                                                                                              var opresult4481 = callmethodChecked(diff4479, "+", [1], var_i);
                                                                                                              var diff4483 = callmethodChecked(opresult4481, "-", [1], new GraceNum(1));
                                                                                                              setLineNumber(456);    // compilenode identifier
                                                                                                              var call4484 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], opresult4466, call4467, diff4472, diff4483, var_suggestions);
                                                                                                              if4416 = call4484;
                                                                                                            }
                                                                                                            setLineNumber(459);    // compilenode string
                                                                                                            var string4485 = new GraceString("");
                                                                                                            var_sofar = string4485;
                                                                                                            if4402 = GraceDone;
                                                                                                          } else {
                                                                                                            setLineNumber(461);    // compilenode identifier
                                                                                                            var opresult4488 = callmethodChecked(var_sofar, "++", [1], var_c);
                                                                                                            var_sofar = opresult4488;
                                                                                                            if4402 = GraceDone;
                                                                                                          }
                                                                                                          setLineNumber(463);    // compilenode identifier
                                                                                                          var opresult4491 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                                                                          var_i = opresult4491;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        var call4492 = callmethodChecked(var_prelude, "for()do", [1, 1], var_accum, block4401);
                                                                                                        var if4493 = GraceDone;
                                                                                                        setLineNumber(465);    // compilenode string
                                                                                                        var string4494 = new GraceString("");
                                                                                                        var opresult4497 = callmethodChecked(var_sofar, "==", [1], string4494);
                                                                                                        if (Grace_isTrue(opresult4497)) {
                                                                                                          setLineNumber(466);    // compilenode array
                                                                                                          var array4498 = new PrimitiveGraceList([]);
                                                                                                          var var_suggestions = array4498;
                                                                                                          setLineNumber(467);    // compilenode identifier
                                                                                                          var call4499 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                          var call4500 = callmethodChecked(call4499, "new", [0]);
                                                                                                          var var_suggestion = call4500;
                                                                                                          setLineNumber(468);    // compilenode identifier
                                                                                                          var call4503 = callmethodChecked(var_accum, "size", [0]);
                                                                                                          onSelf = true;
                                                                                                          var call4505 = callmethodChecked(this, "linePosition", [0]);
                                                                                                          var diff4507 = callmethodChecked(call4505, "-", [1], call4503);
                                                                                                          var opresult4509 = callmethodChecked(diff4507, "+", [1], var_i);
                                                                                                          var diff4511 = callmethodChecked(opresult4509, "-", [1], new GraceNum(1));
                                                                                                          onSelf = true;
                                                                                                          var call4513 = callmethodChecked(this, "linePosition", [0]);
                                                                                                          var diff4515 = callmethodChecked(call4513, "-", [1], new GraceNum(1));
                                                                                                          onSelf = true;
                                                                                                          var call4516 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                          var call4517 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff4511, diff4515, call4516);
                                                                                                          setLineNumber(469);    // compilenode identifier
                                                                                                          var call4518 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                          setLineNumber(470);    // compilenode identifier
                                                                                                          var call4519 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                          var call4520 = callmethodChecked(call4519, "new", [0]);
                                                                                                          var_suggestion = call4520;
                                                                                                          setLineNumber(471);    // compilenode string
                                                                                                          var string4521 = new GraceString("0");
                                                                                                          onSelf = true;
                                                                                                          var call4522 = callmethodChecked(this, "linePosition", [0]);
                                                                                                          onSelf = true;
                                                                                                          var call4523 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                          var call4524 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string4521, call4522, call4523);
                                                                                                          setLineNumber(472);    // compilenode identifier
                                                                                                          var call4525 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                          setLineNumber(473);    // compilenode string
                                                                                                          var string4526 = new GraceString("at least one digit must follow the 'x' in a number.");
                                                                                                          setLineNumber(474);    // compilenode call
                                                                                                          onSelf = true;
                                                                                                          var call4527 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                          var call4529 = callmethodChecked(var_accum, "size", [0]);
                                                                                                          onSelf = true;
                                                                                                          var call4531 = callmethodChecked(this, "linePosition", [0]);
                                                                                                          var diff4533 = callmethodChecked(call4531, "-", [1], call4529);
                                                                                                          var opresult4535 = callmethodChecked(diff4533, "+", [1], var_i);
                                                                                                          setLineNumber(473);    // compilenode identifier
                                                                                                          var call4536 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestions", [1, 2, 1], string4526, call4527, opresult4535, var_suggestions);
                                                                                                          if4493 = call4536;
                                                                                                        }
                                                                                                        setLineNumber(476);    // compilenode identifier
                                                                                                        onSelf = true;
                                                                                                        var call4537 = callmethodChecked(this, "fromBase", [2], var_sofar, var_base);
                                                                                                        var call4538 = callmethodChecked(call4537, "asString", [0]);
                                                                                                        onSelf = true;
                                                                                                        var call4539 = callmethodChecked(this, "numToken", [2], call4538, var_base);
                                                                                                        return call4539;
                                                                                                      };
                                                                                                      func4399.paramCounts = [1];
                                                                                                      obj3022.methods["makeNumToken"] = func4399;
                                                                                                      func4399.definitionLine = 436;
                                                                                                      func4399.definitionModule = "lexer";
                                                                                                      var func4540 = function(argcv) {    // method isidentifierchar(1)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_ov = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 1)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for isidentifierchar(1)"));
                                                                                                        setModuleName("lexer");
                                                                                                        var if4541 = GraceDone;
                                                                                                        setLineNumber(482);    // compilenode identifier
                                                                                                        var call4542 = callmethodChecked(var_unicode, "isLetter", [1], var_ov);
                                                                                                        if (Grace_isTrue(call4542)) {
                                                                                                          setLineNumber(483);    // compilenode identifier
                                                                                                          return GraceTrue;
                                                                                                        }
                                                                                                        var if4543 = GraceDone;
                                                                                                        setLineNumber(485);    // compilenode identifier
                                                                                                        var call4544 = callmethodChecked(var_unicode, "isNumber", [1], var_ov);
                                                                                                        if (Grace_isTrue(call4544)) {
                                                                                                          setLineNumber(486);    // compilenode identifier
                                                                                                          return GraceTrue;
                                                                                                        }
                                                                                                        var if4545 = GraceDone;
                                                                                                        setLineNumber(488);    // compilenode identifier
                                                                                                        var opresult4548 = callmethodChecked(var_ov, "==", [1], new GraceNum(39));
                                                                                                        var opresult4552 = callmethodChecked(var_ov, "==", [1], new GraceNum(95));
                                                                                                        var opresult4554 = callmethodChecked(opresult4552, "||", [1], opresult4548);
                                                                                                        if (Grace_isTrue(opresult4554)) {
                                                                                                          setLineNumber(490);    // compilenode identifier
                                                                                                          if4545 = GraceTrue;
                                                                                                        } else {
                                                                                                          setLineNumber(492);    // compilenode identifier
                                                                                                          if4545 = GraceFalse;
                                                                                                        }
                                                                                                        return if4545;
                                                                                                      };
                                                                                                      func4540.paramCounts = [1];
                                                                                                      obj3022.methods["isidentifierchar"] = func4540;
                                                                                                      func4540.definitionLine = 481;
                                                                                                      func4540.definitionModule = "lexer";
                                                                                                      var func4555 = function(argcv) {    // method isoperatorchar(2)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_c = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        var var_ordval = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 2)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for isoperatorchar(2)"));
                                                                                                        setModuleName("lexer");
                                                                                                        var if4556 = GraceDone;
                                                                                                        setLineNumber(498);    // compilenode identifier
                                                                                                        var call4557 = callmethodChecked(var_operatorChars, "contains", [1], var_c);
                                                                                                        if (Grace_isTrue(call4557)) {
                                                                                                          return GraceTrue;
                                                                                                        }
                                                                                                        var if4558 = GraceDone;
                                                                                                        setLineNumber(499);    // compilenode identifier
                                                                                                        var call4559 = callmethodChecked(var_unicode, "isSymbolMathematical", [1], var_ordval);
                                                                                                        if (Grace_isTrue(call4559)) {
                                                                                                          return GraceTrue;
                                                                                                        }
                                                                                                        var if4560 = GraceDone;
                                                                                                        setLineNumber(500);    // compilenode string
                                                                                                        var string4561 = new GraceString("So");
                                                                                                        var call4562 = callmethodChecked(var_unicode, "iscategory", [2], var_c, string4561);
                                                                                                        if (Grace_isTrue(call4562)) {
                                                                                                          return GraceTrue;
                                                                                                        }
                                                                                                        setLineNumber(501);    // compilenode identifier
                                                                                                        return GraceFalse;
                                                                                                      };
                                                                                                      func4555.paramCounts = [2];
                                                                                                      obj3022.methods["isoperatorchar"] = func4555;
                                                                                                      func4555.definitionLine = 497;
                                                                                                      func4555.definitionModule = "lexer";
                                                                                                      var func4563 = function(argcv) {    // method lexfile(1)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_file = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 1)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lexfile(1)"));
                                                                                                        setModuleName("lexer");
                                                                                                        setLineNumber(507);    // compilenode identifier
                                                                                                        var call4564 = callmethodChecked(var_util, "lines", [0]);
                                                                                                        var call4565 = callmethodChecked(call4564, "makeEmpty", [0]);
                                                                                                        var var_lines = call4565;
                                                                                                        setLineNumber(508);    // compilenode identifier
                                                                                                        var call4566 = callmethodChecked(var_util, "cLines", [0]);
                                                                                                        var call4567 = callmethodChecked(call4566, "makeEmpty", [0]);
                                                                                                        var var_cLines = call4567;
                                                                                                        setLineNumber(512);    // compilenode string
                                                                                                        var string4568 = new GraceString("");
                                                                                                        var var_line = string4568;
                                                                                                        setLineNumber(513);    // compilenode string
                                                                                                        var string4569 = new GraceString("");
                                                                                                        var var_cLine = string4569;
                                                                                                        setLineNumber(514);    // compilenode identifier
                                                                                                        var var_wasCR = GraceFalse;
                                                                                                        setLineNumber(515);    // compilenode identifier
                                                                                                        var call4570 = callmethodChecked(var_file, "read", [0]);
                                                                                                        var block4571 = new GraceBlock(this, 515, 1);
                                                                                                        setLineNumber(1);    // compilenode identifier
                                                                                                        block4571.real = function(var_c) {
                                                                                                          var if4572 = GraceDone;
                                                                                                          setLineNumber(516);    // compilenode string
                                                                                                          var string4573 = new GraceString("\u000d");
                                                                                                          var opresult4576 = callmethodChecked(var_c, "==", [1], string4573);
                                                                                                          if (Grace_isTrue(opresult4576)) {
                                                                                                            setLineNumber(517);    // compilenode identifier
                                                                                                            var call4577 = callmethodChecked(var_lines, "push", [1], var_line);
                                                                                                            setLineNumber(518);    // compilenode identifier
                                                                                                            var call4578 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                                                                            setLineNumber(519);    // compilenode string
                                                                                                            var string4579 = new GraceString("");
                                                                                                            var_line = string4579;
                                                                                                            setLineNumber(520);    // compilenode string
                                                                                                            var string4580 = new GraceString("");
                                                                                                            var_cLine = string4580;
                                                                                                            setLineNumber(521);    // compilenode identifier
                                                                                                            var_wasCR = GraceTrue;
                                                                                                            if4572 = GraceDone;
                                                                                                          } else {
                                                                                                            var if4581 = GraceDone;
                                                                                                            setLineNumber(522);    // compilenode string
                                                                                                            var string4582 = new GraceString("\n");
                                                                                                            var opresult4585 = callmethodChecked(var_c, "==", [1], string4582);
                                                                                                            if (Grace_isTrue(opresult4585)) {
                                                                                                              var if4586 = GraceDone;
                                                                                                              setLineNumber(523);    // compilenode identifier
                                                                                                              if (Grace_isTrue(var_wasCR)) {
                                                                                                              } else {
                                                                                                                setLineNumber(527);    // compilenode identifier
                                                                                                                var call4587 = callmethodChecked(var_lines, "push", [1], var_line);
                                                                                                                setLineNumber(528);    // compilenode identifier
                                                                                                                var call4588 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                                                                                setLineNumber(529);    // compilenode string
                                                                                                                var string4589 = new GraceString("");
                                                                                                                var_line = string4589;
                                                                                                                setLineNumber(530);    // compilenode string
                                                                                                                var string4590 = new GraceString("");
                                                                                                                var_cLine = string4590;
                                                                                                                if4586 = GraceDone;
                                                                                                              }
                                                                                                              setLineNumber(532);    // compilenode identifier
                                                                                                              var_wasCR = GraceFalse;
                                                                                                              if4581 = GraceDone;
                                                                                                            } else {
                                                                                                              var if4591 = GraceDone;
                                                                                                              setLineNumber(533);    // compilenode string
                                                                                                              var string4592 = new GraceString("\u2028");
                                                                                                              var opresult4595 = callmethodChecked(var_c, "==", [1], string4592);
                                                                                                              if (Grace_isTrue(opresult4595)) {
                                                                                                                setLineNumber(534);    // compilenode identifier
                                                                                                                var call4596 = callmethodChecked(var_lines, "push", [1], var_line);
                                                                                                                setLineNumber(535);    // compilenode identifier
                                                                                                                var call4597 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                                                                                setLineNumber(536);    // compilenode string
                                                                                                                var string4598 = new GraceString("");
                                                                                                                var_line = string4598;
                                                                                                                setLineNumber(537);    // compilenode string
                                                                                                                var string4599 = new GraceString("");
                                                                                                                var_cLine = string4599;
                                                                                                                setLineNumber(538);    // compilenode identifier
                                                                                                                var_wasCR = GraceFalse;
                                                                                                                if4591 = GraceDone;
                                                                                                              } else {
                                                                                                                var if4600 = GraceDone;
                                                                                                                setLineNumber(539);    // compilenode string
                                                                                                                var string4601 = new GraceString("\\");
                                                                                                                var opresult4604 = callmethodChecked(var_c, "==", [1], string4601);
                                                                                                                if (Grace_isTrue(opresult4604)) {
                                                                                                                  setLineNumber(540);    // compilenode identifier
                                                                                                                  var opresult4607 = callmethodChecked(var_line, "++", [1], var_c);
                                                                                                                  var_line = opresult4607;
                                                                                                                  setLineNumber(541);    // compilenode string
                                                                                                                  var string4608 = new GraceString("\\\\");
                                                                                                                  var opresult4611 = callmethodChecked(var_cLine, "++", [1], string4608);
                                                                                                                  var_cLine = opresult4611;
                                                                                                                  setLineNumber(542);    // compilenode identifier
                                                                                                                  var_wasCR = GraceFalse;
                                                                                                                  if4600 = GraceDone;
                                                                                                                } else {
                                                                                                                  var if4612 = GraceDone;
                                                                                                                  setLineNumber(543);    // compilenode string
                                                                                                                  var string4613 = new GraceString("\"");
                                                                                                                  var opresult4616 = callmethodChecked(var_c, "==", [1], string4613);
                                                                                                                  if (Grace_isTrue(opresult4616)) {
                                                                                                                    setLineNumber(544);    // compilenode identifier
                                                                                                                    var opresult4619 = callmethodChecked(var_line, "++", [1], var_c);
                                                                                                                    var_line = opresult4619;
                                                                                                                    setLineNumber(545);    // compilenode string
                                                                                                                    var string4620 = new GraceString("\\\"");
                                                                                                                    var opresult4623 = callmethodChecked(var_cLine, "++", [1], string4620);
                                                                                                                    var_cLine = opresult4623;
                                                                                                                    setLineNumber(546);    // compilenode identifier
                                                                                                                    var_wasCR = GraceFalse;
                                                                                                                    if4612 = GraceDone;
                                                                                                                  } else {
                                                                                                                    setLineNumber(548);    // compilenode identifier
                                                                                                                    var opresult4626 = callmethodChecked(var_line, "++", [1], var_c);
                                                                                                                    var_line = opresult4626;
                                                                                                                    setLineNumber(549);    // compilenode identifier
                                                                                                                    var opresult4629 = callmethodChecked(var_cLine, "++", [1], var_c);
                                                                                                                    var_cLine = opresult4629;
                                                                                                                    setLineNumber(550);    // compilenode identifier
                                                                                                                    var_wasCR = GraceFalse;
                                                                                                                    if4612 = GraceDone;
                                                                                                                  }
                                                                                                                  if4600 = if4612;
                                                                                                                }
                                                                                                                if4591 = if4600;
                                                                                                              }
                                                                                                              if4581 = if4591;
                                                                                                            }
                                                                                                            if4572 = if4581;
                                                                                                          }
                                                                                                          return if4572;
                                                                                                        };
                                                                                                        var call4630 = callmethodChecked(var_prelude, "for()do", [1, 1], call4570, block4571);
                                                                                                        var if4631 = GraceDone;
                                                                                                        setLineNumber(553);    // compilenode string
                                                                                                        var string4632 = new GraceString("");
                                                                                                        var opresult4635 = callmethodChecked(var_line, "\u2260", [1], string4632);
                                                                                                        if (Grace_isTrue(opresult4635)) {
                                                                                                          setLineNumber(555);    // compilenode identifier
                                                                                                          var call4636 = callmethodChecked(var_lines, "push", [1], var_line);
                                                                                                          setLineNumber(556);    // compilenode identifier
                                                                                                          var call4637 = callmethodChecked(var_cLines, "push", [1], var_cLine);
                                                                                                          if4631 = call4637;
                                                                                                        }
                                                                                                        setLineNumber(558);    // compilenode identifier
                                                                                                        onSelf = true;
                                                                                                        var call4638 = callmethodChecked(this, "lexinput", [1], var_lines);
                                                                                                        return call4638;
                                                                                                      };
                                                                                                      func4563.paramCounts = [1];
                                                                                                      obj3022.methods["lexfile"] = func4563;
                                                                                                      func4563.definitionLine = 506;
                                                                                                      func4563.definitionModule = "lexer";
                                                                                                      var func4639 = function(argcv) {    // method lexinput(1)
                                                                                                        var returnTarget = invocationCount;
                                                                                                        invocationCount++;
                                                                                                        var curarg = 1;
                                                                                                        var var_inputLines = arguments[curarg];
                                                                                                        curarg++;
                                                                                                        if (argcv[0] !== 1)
                                                                                                          throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for lexinput(1)"));
                                                                                                        setModuleName("lexer");
                                                                                                        setLineNumber(563);    // compilenode object
                                                                                                        var obj4640 = Grace_allocObject(GraceObject, "object");
                                                                                                        obj4640.definitionModule = "lexer";
                                                                                                        obj4640.definitionLine = 563;
                                                                                                        obj4640.outer = this;
                                                                                                        var reader_lexer_outer4641 = function() {
                                                                                                          return this.outer;
                                                                                                        };
                                                                                                        obj4640.methods["outer"] = reader_lexer_outer4641;
                                                                                                        var obj_init_4640 = function() {
                                                                                                          var origSuperDepth = superDepth;
                                                                                                          superDepth = obj4640;
                                                                                                          var func4642 = function(argcv) {    // method push(1)
                                                                                                            var returnTarget = invocationCount;
                                                                                                            invocationCount++;
                                                                                                            var curarg = 1;
                                                                                                            var var_t = arguments[curarg];
                                                                                                            curarg++;
                                                                                                            if (argcv[0] !== 1)
                                                                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for push(1)"));
                                                                                                            setModuleName("lexer");
                                                                                                            var if4643 = GraceDone;
                                                                                                            setLineNumber(569);    // compilenode call
                                                                                                            onSelf = true;
                                                                                                            var call4645 = callmethodChecked(this, "first", [0]);
                                                                                                            var opresult4647 = callmethodChecked(call4645, "==", [1], GraceFalse);
                                                                                                            if (Grace_isTrue(opresult4647)) {
                                                                                                              setLineNumber(570);    // compilenode identifier
                                                                                                              onSelf = true;
                                                                                                              var call4648 = callmethodChecked(this, "first:=", [1], var_t);
                                                                                                              setLineNumber(571);    // compilenode identifier
                                                                                                              onSelf = true;
                                                                                                              var call4649 = callmethodChecked(this, "last:=", [1], var_t);
                                                                                                              if4643 = call4649;
                                                                                                            } else {
                                                                                                              setLineNumber(573);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4650 = callmethodChecked(this, "last", [0]);
                                                                                                              var call4651 = callmethodChecked(call4650, "next:=", [1], var_t);
                                                                                                              setLineNumber(574);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4652 = callmethodChecked(this, "last", [0]);
                                                                                                              var call4653 = callmethodChecked(var_t, "prev:=", [1], call4652);
                                                                                                              setLineNumber(575);    // compilenode identifier
                                                                                                              onSelf = true;
                                                                                                              var call4654 = callmethodChecked(this, "last:=", [1], var_t);
                                                                                                              if4643 = call4654;
                                                                                                            }
                                                                                                            setLineNumber(577);    // compilenode call
                                                                                                            onSelf = true;
                                                                                                            var call4656 = callmethodChecked(this, "size'", [0]);
                                                                                                            var opresult4658 = callmethodChecked(call4656, "+", [1], new GraceNum(1));
                                                                                                            onSelf = true;
                                                                                                            var call4659 = callmethodChecked(this, "size':=", [1], opresult4658);
                                                                                                            return call4659;
                                                                                                          };
                                                                                                          func4642.paramCounts = [1];
                                                                                                          obj4640.methods["push"] = func4642;
                                                                                                          func4642.definitionLine = 568;
                                                                                                          func4642.definitionModule = "lexer";
                                                                                                          var func4660 = function(argcv) {    // method pop
                                                                                                            var returnTarget = invocationCount;
                                                                                                            invocationCount++;
                                                                                                            var curarg = 1;
                                                                                                            if (argcv[0] !== 0)
                                                                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for pop"));
                                                                                                            setModuleName("lexer");
                                                                                                            var if4661 = GraceDone;
                                                                                                            setLineNumber(581);    // compilenode call
                                                                                                            onSelf = true;
                                                                                                            var call4663 = callmethodChecked(this, "last", [0]);
                                                                                                            var opresult4665 = callmethodChecked(call4663, "\u2260", [1], GraceFalse);
                                                                                                            if (Grace_isTrue(opresult4665)) {
                                                                                                              setLineNumber(582);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4666 = callmethodChecked(this, "last", [0]);
                                                                                                              var var_popped = call4666;
                                                                                                              setLineNumber(583);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4667 = callmethodChecked(this, "last", [0]);
                                                                                                              var call4668 = callmethodChecked(call4667, "prev", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4669 = callmethodChecked(this, "last:=", [1], call4668);
                                                                                                              var if4670 = GraceDone;
                                                                                                              setLineNumber(584);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4672 = callmethodChecked(this, "last", [0]);
                                                                                                              var opresult4674 = callmethodChecked(call4672, "==", [1], GraceFalse);
                                                                                                              if (Grace_isTrue(opresult4674)) {
                                                                                                                setLineNumber(585);    // compilenode identifier
                                                                                                                onSelf = true;
                                                                                                                var call4675 = callmethodChecked(this, "first:=", [1], GraceFalse);
                                                                                                                if4670 = call4675;
                                                                                                              }
                                                                                                              setLineNumber(587);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4677 = callmethodChecked(this, "size'", [0]);
                                                                                                              var diff4679 = callmethodChecked(call4677, "-", [1], new GraceNum(1));
                                                                                                              onSelf = true;
                                                                                                              var call4680 = callmethodChecked(this, "size':=", [1], diff4679);
                                                                                                              setLineNumber(588);    // compilenode identifier
                                                                                                              if4661 = var_popped;
                                                                                                            }
                                                                                                            return if4661;
                                                                                                          };
                                                                                                          func4660.paramCounts = [0];
                                                                                                          obj4640.methods["pop"] = func4660;
                                                                                                          func4660.definitionLine = 580;
                                                                                                          func4660.definitionModule = "lexer";
                                                                                                          var func4681 = function(argcv) {    // method poll
                                                                                                            var returnTarget = invocationCount;
                                                                                                            invocationCount++;
                                                                                                            var curarg = 1;
                                                                                                            if (argcv[0] !== 0)
                                                                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for poll"));
                                                                                                            setModuleName("lexer");
                                                                                                            var if4682 = GraceDone;
                                                                                                            setLineNumber(593);    // compilenode call
                                                                                                            onSelf = true;
                                                                                                            var call4684 = callmethodChecked(this, "first", [0]);
                                                                                                            var opresult4686 = callmethodChecked(call4684, "\u2260", [1], GraceFalse);
                                                                                                            if (Grace_isTrue(opresult4686)) {
                                                                                                              setLineNumber(594);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4687 = callmethodChecked(this, "first", [0]);
                                                                                                              var var_polled = call4687;
                                                                                                              setLineNumber(595);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4688 = callmethodChecked(this, "first", [0]);
                                                                                                              var call4689 = callmethodChecked(call4688, "next", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call4690 = callmethodChecked(this, "first:=", [1], call4689);
                                                                                                              var if4691 = GraceDone;
                                                                                                              setLineNumber(596);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4693 = callmethodChecked(this, "first", [0]);
                                                                                                              var opresult4695 = callmethodChecked(call4693, "==", [1], GraceFalse);
                                                                                                              if (Grace_isTrue(opresult4695)) {
                                                                                                                setLineNumber(597);    // compilenode identifier
                                                                                                                onSelf = true;
                                                                                                                var call4696 = callmethodChecked(this, "last:=", [1], GraceFalse);
                                                                                                                if4691 = call4696;
                                                                                                              }
                                                                                                              setLineNumber(599);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4698 = callmethodChecked(this, "size'", [0]);
                                                                                                              var diff4700 = callmethodChecked(call4698, "-", [1], new GraceNum(1));
                                                                                                              onSelf = true;
                                                                                                              var call4701 = callmethodChecked(this, "size':=", [1], diff4700);
                                                                                                              setLineNumber(600);    // compilenode identifier
                                                                                                              if4682 = var_polled;
                                                                                                            }
                                                                                                            return if4682;
                                                                                                          };
                                                                                                          func4681.paramCounts = [0];
                                                                                                          obj4640.methods["poll"] = func4681;
                                                                                                          func4681.definitionLine = 592;
                                                                                                          func4681.definitionModule = "lexer";
                                                                                                          var func4702 = function(argcv) {    // method size
                                                                                                            var returnTarget = invocationCount;
                                                                                                            invocationCount++;
                                                                                                            var curarg = 1;
                                                                                                            if (argcv[0] !== 0)
                                                                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for size"));
                                                                                                            setModuleName("lexer");
                                                                                                            setLineNumber(605);    // compilenode call
                                                                                                            onSelf = true;
                                                                                                            var call4704 = callmethodChecked(this, "size'", [0]);
                                                                                                            var opresult4706 = callmethodChecked(call4704, "+", [1], new GraceNum(0));
                                                                                                            return opresult4706;
                                                                                                          };
                                                                                                          func4702.paramCounts = [0];
                                                                                                          obj4640.methods["size"] = func4702;
                                                                                                          func4702.definitionLine = 604;
                                                                                                          func4702.definitionModule = "lexer";
                                                                                                          var func4707 = function(argcv) {    // method iter
                                                                                                            var returnTarget = invocationCount;
                                                                                                            invocationCount++;
                                                                                                            var curarg = 1;
                                                                                                            if (argcv[0] !== 0)
                                                                                                              throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for iter"));
                                                                                                            setModuleName("lexer");
                                                                                                            setLineNumber(609);    // compilenode object
                                                                                                            var obj4708 = Grace_allocObject(GraceObject, "iter");
                                                                                                            obj4708.definitionModule = "lexer";
                                                                                                            obj4708.definitionLine = 609;
                                                                                                            obj4708.outer = this;
                                                                                                            var reader_lexer_outer4709 = function() {
                                                                                                              return this.outer;
                                                                                                            };
                                                                                                            obj4708.methods["outer"] = reader_lexer_outer4709;
                                                                                                            var obj_init_4708 = function() {
                                                                                                              var origSuperDepth = superDepth;
                                                                                                              superDepth = obj4708;
                                                                                                              var func4710 = function(argcv) {    // method havemore
                                                                                                                var returnTarget = invocationCount;
                                                                                                                invocationCount++;
                                                                                                                var curarg = 1;
                                                                                                                if (argcv[0] !== 0)
                                                                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for havemore"));
                                                                                                                setModuleName("lexer");
                                                                                                                setLineNumber(612);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call4712 = callmethodChecked(this, "n", [0]);
                                                                                                                var opresult4714 = callmethodChecked(call4712, "\u2260", [1], GraceFalse);
                                                                                                                return opresult4714;
                                                                                                              };
                                                                                                              func4710.paramCounts = [0];
                                                                                                              obj4708.methods["havemore"] = func4710;
                                                                                                              func4710.definitionLine = 611;
                                                                                                              func4710.definitionModule = "lexer";
                                                                                                              var func4715 = function(argcv) {    // method hasNext
                                                                                                                var returnTarget = invocationCount;
                                                                                                                invocationCount++;
                                                                                                                var curarg = 1;
                                                                                                                if (argcv[0] !== 0)
                                                                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for hasNext"));
                                                                                                                setModuleName("lexer");
                                                                                                                setLineNumber(615);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call4717 = callmethodChecked(this, "n", [0]);
                                                                                                                var opresult4719 = callmethodChecked(call4717, "\u2260", [1], GraceFalse);
                                                                                                                return opresult4719;
                                                                                                              };
                                                                                                              func4715.paramCounts = [0];
                                                                                                              obj4708.methods["hasNext"] = func4715;
                                                                                                              func4715.definitionLine = 614;
                                                                                                              func4715.definitionModule = "lexer";
                                                                                                              var func4720 = function(argcv) {    // method next
                                                                                                                var returnTarget = invocationCount;
                                                                                                                invocationCount++;
                                                                                                                var curarg = 1;
                                                                                                                if (argcv[0] !== 0)
                                                                                                                  throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for next"));
                                                                                                                setModuleName("lexer");
                                                                                                                setLineNumber(618);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call4721 = callmethodChecked(this, "n", [0]);
                                                                                                                var var_ret = call4721;
                                                                                                                setLineNumber(619);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call4722 = callmethodChecked(this, "n", [0]);
                                                                                                                var call4723 = callmethodChecked(call4722, "next", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call4724 = callmethodChecked(this, "n:=", [1], call4723);
                                                                                                                setLineNumber(620);    // compilenode identifier
                                                                                                                return var_ret;
                                                                                                              };
                                                                                                              func4720.paramCounts = [0];
                                                                                                              obj4708.methods["next"] = func4720;
                                                                                                              func4720.definitionLine = 617;
                                                                                                              func4720.definitionModule = "lexer";
                                                                                                              setLineNumber(610);    // compilenode call
                                                                                                              var call4725 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                              onOuter = true;
                                                                                                              onSelf = true;
                                                                                                              var call4726 = callmethodChecked(call4725, "first", [0]);
                                                                                                              obj4708.data["n"] = call4726;
                                                                                                              var reader_lexer_n4727 = function() {
                                                                                                                return this.data["n"];
                                                                                                              };
                                                                                                              obj4708.methods["n"] = reader_lexer_n4727;
                                                                                                              obj4708.data["n"] = call4726;
                                                                                                              var writer_lexer_n4727 = function(argcv, o) {
                                                                                                                this.data["n"] = o;
                                                                                                                return GraceDone;
                                                                                                              };
                                                                                                              obj4708.methods["n:="] = writer_lexer_n4727;
                                                                                                              reader_lexer_n4727.confidential = true;
                                                                                                              writer_lexer_n4727.confidential = true;
                                                                                                              obj4708.mutable = true;
                                                                                                              superDepth = origSuperDepth;
                                                                                                            };
                                                                                                            obj_init_4708.apply(obj4708, []);
                                                                                                            return obj4708;
                                                                                                          };
                                                                                                          func4707.paramCounts = [0];
                                                                                                          obj4640.methods["iter"] = func4707;
                                                                                                          func4707.definitionLine = 608;
                                                                                                          func4707.definitionModule = "lexer";
                                                                                                            var func4728 = function(argcv) {    // method iter()object
                                                                                                              var curarg = 1;
                                                                                                              var inheritingObject = arguments[curarg++];
                                                                                                              // Start argument processing
                                                                                                              curarg = 1;
                                                                                                              // End argument processing
                                                                                                              setModuleName("lexer");
                                                                                                              var returnTarget = invocationCount;
                                                                                                              invocationCount++;
                                                                                                              var obj4729 = Grace_allocObject(GraceObject, "iter");
                                                                                                              obj4729.definitionModule = "lexer";
                                                                                                              obj4729.definitionLine = 609;
                                                                                                              var inho4729 = inheritingObject;
                                                                                                              while (inho4729.superobj) inho4729 = inho4729.superobj;
                                                                                                              inho4729.superobj = obj4729;
                                                                                                              obj4729.data = inheritingObject.data;
                                                                                                              if (inheritingObject.hasOwnProperty('_value'))
                                                                                                                obj4729._value = inheritingObject._value;
                                                                                                              obj4729.outer = this;
                                                                                                              var reader_lexer_outer4730 = function() {
                                                                                                                return this.outer;
                                                                                                              };
                                                                                                              obj4729.methods["outer"] = reader_lexer_outer4730;
                                                                                                              var obj_init_4729 = function() {
                                                                                                                var origSuperDepth = superDepth;
                                                                                                                superDepth = obj4729;
                                                                                                                var func4731 = function(argcv) {    // method havemore
                                                                                                                  var returnTarget = invocationCount;
                                                                                                                  invocationCount++;
                                                                                                                  var curarg = 1;
                                                                                                                  if (argcv[0] !== 0)
                                                                                                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for havemore"));
                                                                                                                  setModuleName("lexer");
                                                                                                                  setLineNumber(612);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4733 = callmethodChecked(this, "n", [0]);
                                                                                                                  var opresult4735 = callmethodChecked(call4733, "\u2260", [1], GraceFalse);
                                                                                                                  return opresult4735;
                                                                                                                };
                                                                                                                func4731.paramCounts = [0];
                                                                                                                obj4729.methods["havemore"] = func4731;
                                                                                                                func4731.definitionLine = 611;
                                                                                                                func4731.definitionModule = "lexer";
                                                                                                                var func4736 = function(argcv) {    // method hasNext
                                                                                                                  var returnTarget = invocationCount;
                                                                                                                  invocationCount++;
                                                                                                                  var curarg = 1;
                                                                                                                  if (argcv[0] !== 0)
                                                                                                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for hasNext"));
                                                                                                                  setModuleName("lexer");
                                                                                                                  setLineNumber(615);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4738 = callmethodChecked(this, "n", [0]);
                                                                                                                  var opresult4740 = callmethodChecked(call4738, "\u2260", [1], GraceFalse);
                                                                                                                  return opresult4740;
                                                                                                                };
                                                                                                                func4736.paramCounts = [0];
                                                                                                                obj4729.methods["hasNext"] = func4736;
                                                                                                                func4736.definitionLine = 614;
                                                                                                                func4736.definitionModule = "lexer";
                                                                                                                var func4741 = function(argcv) {    // method next
                                                                                                                  var returnTarget = invocationCount;
                                                                                                                  invocationCount++;
                                                                                                                  var curarg = 1;
                                                                                                                  if (argcv[0] !== 0)
                                                                                                                    throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for next"));
                                                                                                                  setModuleName("lexer");
                                                                                                                  setLineNumber(618);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4742 = callmethodChecked(this, "n", [0]);
                                                                                                                  var var_ret = call4742;
                                                                                                                  setLineNumber(619);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4743 = callmethodChecked(this, "n", [0]);
                                                                                                                  var call4744 = callmethodChecked(call4743, "next", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call4745 = callmethodChecked(this, "n:=", [1], call4744);
                                                                                                                  setLineNumber(620);    // compilenode identifier
                                                                                                                  return var_ret;
                                                                                                                };
                                                                                                                func4741.paramCounts = [0];
                                                                                                                obj4729.methods["next"] = func4741;
                                                                                                                func4741.definitionLine = 617;
                                                                                                                func4741.definitionModule = "lexer";
                                                                                                                setLineNumber(610);    // compilenode call
                                                                                                                var call4746 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                onOuter = true;
                                                                                                                onSelf = true;
                                                                                                                var call4747 = callmethodChecked(call4746, "first", [0]);
                                                                                                                obj4729.data["n"] = call4747;
                                                                                                                var reader_lexer_n4748 = function() {
                                                                                                                  return this.data["n"];
                                                                                                                };
                                                                                                                obj4729.methods["n"] = reader_lexer_n4748;
                                                                                                                obj4729.data["n"] = call4747;
                                                                                                                var writer_lexer_n4748 = function(argcv, o) {
                                                                                                                  this.data["n"] = o;
                                                                                                                  return GraceDone;
                                                                                                                };
                                                                                                                obj4729.methods["n:="] = writer_lexer_n4748;
                                                                                                                reader_lexer_n4748.confidential = true;
                                                                                                                writer_lexer_n4748.confidential = true;
                                                                                                                obj4729.mutable = true;
                                                                                                                superDepth = origSuperDepth;
                                                                                                              };
                                                                                                              obj_init_4729.apply(inheritingObject, []);
                                                                                                              return obj4729;
                                                                                                              };
                                                                                                              obj4640.methods["iter()object"] = func4728;
                                                                                                            var func4749 = function(argcv) {    // method iterator
                                                                                                              var returnTarget = invocationCount;
                                                                                                              invocationCount++;
                                                                                                              var curarg = 1;
                                                                                                              if (argcv[0] !== 0)
                                                                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for iterator"));
                                                                                                              setModuleName("lexer");
                                                                                                              setLineNumber(626);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4750 = callmethodChecked(this, "iter", [0]);
                                                                                                              return call4750;
                                                                                                            };
                                                                                                            func4749.paramCounts = [0];
                                                                                                            obj4640.methods["iterator"] = func4749;
                                                                                                            func4749.definitionLine = 625;
                                                                                                            func4749.definitionModule = "lexer";
                                                                                                            var func4751 = function(argcv) {    // method do(1)
                                                                                                              var returnTarget = invocationCount;
                                                                                                              invocationCount++;
                                                                                                              var curarg = 1;
                                                                                                              var var_action = arguments[curarg];
                                                                                                              curarg++;
                                                                                                              if (argcv[0] !== 1)
                                                                                                                throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for do(1)"));
                                                                                                              setModuleName("lexer");
                                                                                                              setLineNumber(630);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4752 = callmethodChecked(this, "first", [0]);
                                                                                                              var var_n = call4752;
                                                                                                              setLineNumber(631);    // compilenode block
                                                                                                              var block4753 = new GraceBlock(this, 631, 0);
                                                                                                              block4753.real = function() {
                                                                                                                var opresult4756 = callmethodChecked(var_n, "\u2260", [1], GraceFalse);
                                                                                                                return opresult4756;
                                                                                                              };
                                                                                                              var block4757 = new GraceBlock(this, 631, 0);
                                                                                                              block4757.real = function() {
                                                                                                                setLineNumber(632);    // compilenode identifier
                                                                                                                var call4758 = callmethodChecked(var_action, "apply", [1], var_n);
                                                                                                                setLineNumber(633);    // compilenode identifier
                                                                                                                var call4759 = callmethodChecked(var_n, "next", [0]);
                                                                                                                var_n = call4759;
                                                                                                                return GraceDone;
                                                                                                              };
                                                                                                              var call4760 = callmethodChecked(var_prelude, "while()do", [1, 1], block4753, block4757);
                                                                                                              return call4760;
                                                                                                            };
                                                                                                            func4751.paramCounts = [1];
                                                                                                            obj4640.methods["do"] = func4751;
                                                                                                            func4751.definitionLine = 629;
                                                                                                            func4751.definitionModule = "lexer";
                                                                                                            setLineNumber(564);    // compilenode identifier
                                                                                                            obj4640.data["first"] = GraceFalse;
                                                                                                            var reader_lexer_first4761 = function() {
                                                                                                              return this.data["first"];
                                                                                                            };
                                                                                                            obj4640.methods["first"] = reader_lexer_first4761;
                                                                                                            obj4640.data["first"] = GraceFalse;
                                                                                                            var writer_lexer_first4761 = function(argcv, o) {
                                                                                                              this.data["first"] = o;
                                                                                                              return GraceDone;
                                                                                                            };
                                                                                                            obj4640.methods["first:="] = writer_lexer_first4761;
                                                                                                            writer_lexer_first4761.confidential = true;
                                                                                                            obj4640.mutable = true;
                                                                                                            setLineNumber(565);    // compilenode identifier
                                                                                                            obj4640.data["last"] = GraceFalse;
                                                                                                            var reader_lexer_last4762 = function() {
                                                                                                              return this.data["last"];
                                                                                                            };
                                                                                                            obj4640.methods["last"] = reader_lexer_last4762;
                                                                                                            obj4640.data["last"] = GraceFalse;
                                                                                                            var writer_lexer_last4762 = function(argcv, o) {
                                                                                                              this.data["last"] = o;
                                                                                                              return GraceDone;
                                                                                                            };
                                                                                                            obj4640.methods["last:="] = writer_lexer_last4762;
                                                                                                            writer_lexer_last4762.confidential = true;
                                                                                                            obj4640.mutable = true;
                                                                                                            setLineNumber(566);    // compilenode num
                                                                                                            obj4640.data["size'"] = new GraceNum(0);
                                                                                                            var reader_lexer_size__39__4763 = function() {
                                                                                                              return this.data["size'"];
                                                                                                            };
                                                                                                            obj4640.methods["size'"] = reader_lexer_size__39__4763;
                                                                                                            obj4640.data["size'"] = new GraceNum(0);
                                                                                                            var writer_lexer_size__39__4763 = function(argcv, o) {
                                                                                                              this.data["size'"] = o;
                                                                                                              return GraceDone;
                                                                                                            };
                                                                                                            obj4640.methods["size':="] = writer_lexer_size__39__4763;
                                                                                                            reader_lexer_size__39__4763.confidential = true;
                                                                                                            writer_lexer_size__39__4763.confidential = true;
                                                                                                            obj4640.mutable = true;
                                                                                                            superDepth = origSuperDepth;
                                                                                                          };
                                                                                                          obj_init_4640.apply(obj4640, []);
                                                                                                          var var_tokens = obj4640;
                                                                                                          setLineNumber(638);    // compilenode string
                                                                                                          var string4764 = new GraceString("d");
                                                                                                          var var_mode = string4764;
                                                                                                          setLineNumber(639);    // compilenode identifier
                                                                                                          var var_newmode = var_mode;
                                                                                                          setLineNumber(640);    // compilenode identifier
                                                                                                          var var_inStr = GraceFalse;
                                                                                                          setLineNumber(641);    // compilenode identifier
                                                                                                          var var_inBackticks = GraceFalse;
                                                                                                          setLineNumber(642);    // compilenode identifier
                                                                                                          var var_backtickIdent = GraceFalse;
                                                                                                          setLineNumber(643);    // compilenode string
                                                                                                          var string4765 = new GraceString("");
                                                                                                          var var_accum = string4765;
                                                                                                          setLineNumber(644);    // compilenode identifier
                                                                                                          var var_escaped = GraceFalse;
                                                                                                          setLineNumber(645);    // compilenode num
                                                                                                          var var_unichars = new GraceNum(0);
                                                                                                          setLineNumber(646);    // compilenode num
                                                                                                          var var_codepoint = new GraceNum(0);
                                                                                                          setLineNumber(647);    // compilenode num
                                                                                                          var var_interpdepth = new GraceNum(0);
                                                                                                          setLineNumber(648);    // compilenode identifier
                                                                                                          var var_interpString = GraceFalse;
                                                                                                          setLineNumber(649);    // compilenode identifier
                                                                                                          var var_atStart = GraceTrue;
                                                                                                          setLineNumber(650);    // compilenode identifier
                                                                                                          var var_newlineFound = GraceFalse;
                                                                                                          setLineNumber(651);    // compilenode num
                                                                                                          onSelf = true;
                                                                                                          var call4766 = callmethodChecked(this, "linePosition:=", [1], new GraceNum(0));
                                                                                                          setLineNumber(652);    // compilenode string
                                                                                                          var string4767 = new GraceString("lexing.");
                                                                                                          var call4768 = callmethodChecked(var_util, "log_verbose", [1], string4767);
                                                                                                          setLineNumber(653);    // compilenode string
                                                                                                          var string4769 = new GraceString("Z");
                                                                                                          var call4770 = callmethodChecked(var_unicode, "pattern()not", [2, 2], string4769, new GraceNum(9), new GraceNum(32), new GraceNum(160));
                                                                                                          var var_badSeparator = call4770;
                                                                                                          setLineNumber(655);    // compilenode string
                                                                                                          var string4771 = new GraceString("C");
                                                                                                          var call4772 = callmethodChecked(var_unicode, "pattern()not", [1, 2], string4771, new GraceNum(10), new GraceNum(13));
                                                                                                          var var_badControl = call4772;
                                                                                                          setLineNumber(656);    // compilenode string
                                                                                                          var string4773 = new GraceString("(");
                                                                                                          var call4774 = callmethodChecked(string4773, "ord", [0]);
                                                                                                          var string4775 = new GraceString(")");
                                                                                                          var call4776 = callmethodChecked(string4775, "ord", [0]);
                                                                                                          var string4777 = new GraceString(",");
                                                                                                          var call4778 = callmethodChecked(string4777, "ord", [0]);
                                                                                                          setLineNumber(657);    // compilenode string
                                                                                                          var string4779 = new GraceString("{");
                                                                                                          var call4780 = callmethodChecked(string4779, "ord", [0]);
                                                                                                          var string4781 = new GraceString("}");
                                                                                                          var call4782 = callmethodChecked(string4781, "ord", [0]);
                                                                                                          var string4783 = new GraceString("[");
                                                                                                          var call4784 = callmethodChecked(string4783, "ord", [0]);
                                                                                                          var string4785 = new GraceString("]");
                                                                                                          var call4786 = callmethodChecked(string4785, "ord", [0]);
                                                                                                          var string4787 = new GraceString(";");
                                                                                                          var call4788 = callmethodChecked(string4787, "ord", [0]);
                                                                                                          var string4789 = new GraceString("\u27e6");
                                                                                                          var call4790 = callmethodChecked(string4789, "ord", [0]);
                                                                                                          var string4791 = new GraceString("\u27e7");
                                                                                                          var call4792 = callmethodChecked(string4791, "ord", [0]);
                                                                                                          setLineNumber(656);    // compilenode identifier
                                                                                                          var call4793 = callmethodChecked(var_unicode, "pattern", [10], call4774, call4776, call4778, call4780, call4782, call4784, call4786, call4788, call4790, call4792);
                                                                                                          var var_selfModes = call4793;
                                                                                                          setLineNumber(658);    // compilenode string
                                                                                                          var string4794 = new GraceString("(");
                                                                                                          var call4795 = callmethodChecked(string4794, "ord", [0]);
                                                                                                          var string4796 = new GraceString(")");
                                                                                                          var call4797 = callmethodChecked(string4796, "ord", [0]);
                                                                                                          setLineNumber(659);    // compilenode string
                                                                                                          var string4798 = new GraceString("{");
                                                                                                          var call4799 = callmethodChecked(string4798, "ord", [0]);
                                                                                                          var string4800 = new GraceString("}");
                                                                                                          var call4801 = callmethodChecked(string4800, "ord", [0]);
                                                                                                          var string4802 = new GraceString("[");
                                                                                                          var call4803 = callmethodChecked(string4802, "ord", [0]);
                                                                                                          var string4804 = new GraceString("]");
                                                                                                          var call4805 = callmethodChecked(string4804, "ord", [0]);
                                                                                                          var string4806 = new GraceString("\u27e6");
                                                                                                          var call4807 = callmethodChecked(string4806, "ord", [0]);
                                                                                                          var string4808 = new GraceString("\u27e7");
                                                                                                          var call4809 = callmethodChecked(string4808, "ord", [0]);
                                                                                                          setLineNumber(658);    // compilenode identifier
                                                                                                          var call4810 = callmethodChecked(var_unicode, "pattern", [8], call4795, call4797, call4799, call4801, call4803, call4805, call4807, call4809);
                                                                                                          var var_brackets = call4810;
                                                                                                          setLineNumber(660);    // compilenode string
                                                                                                          var string4811 = new GraceString("L");
                                                                                                          var string4812 = new GraceString("N");
                                                                                                          var call4813 = callmethodChecked(var_unicode, "pattern", [4], string4811, string4812, new GraceNum(95), new GraceNum(39));
                                                                                                          var var_identifierChar = call4813;
                                                                                                          setLineNumber(661);    // compilenode string
                                                                                                          var string4814 = new GraceString("0");
                                                                                                          var call4815 = callmethodChecked(string4814, "ord", [0]);
                                                                                                          var string4816 = new GraceString("1");
                                                                                                          var call4817 = callmethodChecked(string4816, "ord", [0]);
                                                                                                          var string4818 = new GraceString("2");
                                                                                                          var call4819 = callmethodChecked(string4818, "ord", [0]);
                                                                                                          var string4820 = new GraceString("3");
                                                                                                          var call4821 = callmethodChecked(string4820, "ord", [0]);
                                                                                                          setLineNumber(662);    // compilenode string
                                                                                                          var string4822 = new GraceString("4");
                                                                                                          var call4823 = callmethodChecked(string4822, "ord", [0]);
                                                                                                          var string4824 = new GraceString("5");
                                                                                                          var call4825 = callmethodChecked(string4824, "ord", [0]);
                                                                                                          var string4826 = new GraceString("6");
                                                                                                          var call4827 = callmethodChecked(string4826, "ord", [0]);
                                                                                                          var string4828 = new GraceString("7");
                                                                                                          var call4829 = callmethodChecked(string4828, "ord", [0]);
                                                                                                          var string4830 = new GraceString("8");
                                                                                                          var call4831 = callmethodChecked(string4830, "ord", [0]);
                                                                                                          var string4832 = new GraceString("9");
                                                                                                          var call4833 = callmethodChecked(string4832, "ord", [0]);
                                                                                                          setLineNumber(661);    // compilenode identifier
                                                                                                          var call4834 = callmethodChecked(var_unicode, "pattern", [10], call4815, call4817, call4819, call4821, call4823, call4825, call4827, call4829, call4831, call4833);
                                                                                                          var var_digit = call4834;
                                                                                                          setLineNumber(663);    // compilenode block
                                                                                                          var block4835 = new GraceBlock(this, 663, 1);
                                                                                                          setLineNumber(1);    // compilenode identifier
                                                                                                          block4835.real = function(var_c) {
                                                                                                            setLineNumber(664);    // compilenode string
                                                                                                            var string4836 = new GraceString("");
                                                                                                            var var_ct = string4836;
                                                                                                            setLineNumber(665);    // compilenode identifier
                                                                                                            var call4837 = callmethodChecked(var_c, "ord", [0]);
                                                                                                            var var_ordval = call4837;
                                                                                                            var if4838 = GraceDone;
                                                                                                            setLineNumber(666);    // compilenode block
                                                                                                            var block4839 = new GraceBlock(this, 666, 0);
                                                                                                            block4839.real = function() {
                                                                                                              var string4840 = new GraceString("q");
                                                                                                              var opresult4843 = callmethodChecked(var_mode, "\u2260", [1], string4840);
                                                                                                              return opresult4843;
                                                                                                            };
                                                                                                            var call4845 = callmethodChecked(var_badSeparator, "match", [1], var_ordval);
                                                                                                            var opresult4847 = callmethodChecked(call4845, "&&", [1], block4839);
                                                                                                            if (Grace_isTrue(opresult4847)) {
                                                                                                              setLineNumber(669);    // compilenode identifier
                                                                                                              var call4848 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                              var call4849 = callmethodChecked(call4848, "new", [0]);
                                                                                                              var var_suggestion = call4849;
                                                                                                              setLineNumber(670);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call4850 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var string4851 = new GraceString(" ");
                                                                                                              onSelf = true;
                                                                                                              var call4852 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call4853 = callmethodChecked(var_suggestion, "replaceChar()with()onLine", [1, 1, 1], call4850, string4851, call4852);
                                                                                                              var if4854 = GraceDone;
                                                                                                              setLineNumber(671);    // compilenode identifier
                                                                                                              var opresult4857 = callmethodChecked(var_ordval, "==", [1], new GraceNum(9));
                                                                                                              if (Grace_isTrue(opresult4857)) {
                                                                                                                var if4858 = GraceDone;
                                                                                                                setLineNumber(672);    // compilenode identifier
                                                                                                                if (Grace_isTrue(var_inStr)) {
                                                                                                                  setLineNumber(673);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4859 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call4860 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  setLineNumber(674);    // compilenode string
                                                                                                                  var string4861 = new GraceString("");
                                                                                                                  var call4863 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string4864 = new GraceString("0");
                                                                                                                  var call4865 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call4866 = callmethodChecked(call4865, "padl", [3], call4863, new GraceNum(4), string4864);
                                                                                                                  var string4868 = new GraceString("\\u");
                                                                                                                  var opresult4870 = callmethodChecked(string4868, "++", [1], call4866);
                                                                                                                  var opresult4872 = callmethodChecked(opresult4870, "++", [1], string4861);
                                                                                                                  setLineNumber(675);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4873 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                  setLineNumber(673);    // compilenode identifier
                                                                                                                  var call4874 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call4859, call4860, opresult4872, call4873);
                                                                                                                  setLineNumber(680);    // compilenode string
                                                                                                                  var string4875 = new GraceString(" instead");
                                                                                                                  setLineNumber(679);    // compilenode identifier
                                                                                                                  var call4877 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string4878 = new GraceString("0");
                                                                                                                  var call4879 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call4880 = callmethodChecked(call4879, "padl", [3], call4877, new GraceNum(4), string4878);
                                                                                                                  setLineNumber(678);    // compilenode string
                                                                                                                  var string4882 = new GraceString("use the Unicode escape \\u");
                                                                                                                  setLineNumber(677);    // compilenode string
                                                                                                                  var string4884 = new GraceString("written in the source code; ");
                                                                                                                  setLineNumber(676);    // compilenode string
                                                                                                                  var string4886 = new GraceString("tabs cannot be ");
                                                                                                                  var opresult4888 = callmethodChecked(string4886, "++", [1], string4884);
                                                                                                                  var opresult4890 = callmethodChecked(opresult4888, "++", [1], string4882);
                                                                                                                  var opresult4892 = callmethodChecked(opresult4890, "++", [1], call4880);
                                                                                                                  var opresult4894 = callmethodChecked(opresult4892, "++", [1], string4875);
                                                                                                                  setLineNumber(681);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4895 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call4896 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call4897 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  setLineNumber(676);    // compilenode identifier
                                                                                                                  var call4898 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult4894, call4895, call4896, call4897, var_suggestion);
                                                                                                                  if4858 = call4898;
                                                                                                                }
                                                                                                                setLineNumber(684);    // compilenode string
                                                                                                                var string4899 = new GraceString("tabs are not allowed; use spaces instead.");
                                                                                                                onSelf = true;
                                                                                                                var call4900 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                setLineNumber(685);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call4901 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call4902 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                setLineNumber(684);    // compilenode identifier
                                                                                                                var call4903 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], string4899, call4900, call4901, call4902, var_suggestion);
                                                                                                                if4854 = call4903;
                                                                                                              } else {
                                                                                                                var if4904 = GraceDone;
                                                                                                                setLineNumber(687);    // compilenode string
                                                                                                                var string4905 = new GraceString("\"");
                                                                                                                var opresult4908 = callmethodChecked(var_mode, "==", [1], string4905);
                                                                                                                if (Grace_isTrue(opresult4908)) {
                                                                                                                  setLineNumber(688);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4909 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call4910 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  setLineNumber(689);    // compilenode string
                                                                                                                  var string4911 = new GraceString("");
                                                                                                                  var call4913 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string4914 = new GraceString("0");
                                                                                                                  var call4915 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call4916 = callmethodChecked(call4915, "padl", [3], call4913, new GraceNum(4), string4914);
                                                                                                                  var string4918 = new GraceString("\\u");
                                                                                                                  var opresult4920 = callmethodChecked(string4918, "++", [1], call4916);
                                                                                                                  var opresult4922 = callmethodChecked(opresult4920, "++", [1], string4911);
                                                                                                                  setLineNumber(690);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4923 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                  setLineNumber(688);    // compilenode identifier
                                                                                                                  var call4924 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call4909, call4910, opresult4922, call4923);
                                                                                                                  setLineNumber(697);    // compilenode string
                                                                                                                  var string4925 = new GraceString(" instead");
                                                                                                                  setLineNumber(696);    // compilenode identifier
                                                                                                                  var call4927 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string4928 = new GraceString("0");
                                                                                                                  var call4929 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call4930 = callmethodChecked(call4929, "padl", [3], call4927, new GraceNum(4), string4928);
                                                                                                                  setLineNumber(695);    // compilenode string
                                                                                                                  var string4932 = new GraceString("use the Unicode escape \\u");
                                                                                                                  setLineNumber(694);    // compilenode string
                                                                                                                  var string4934 = new GraceString("written in the source code; ");
                                                                                                                  setLineNumber(693);    // compilenode string
                                                                                                                  var string4936 = new GraceString(" and cannot be ");
                                                                                                                  setLineNumber(692);    // compilenode string
                                                                                                                  var string4938 = new GraceString("is not a valid whitespace character");
                                                                                                                  setLineNumber(691);    // compilenode string
                                                                                                                  var string4940 = new GraceString(") ");
                                                                                                                  var call4942 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string4943 = new GraceString("0");
                                                                                                                  var call4944 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call4945 = callmethodChecked(call4944, "padl", [3], call4942, new GraceNum(4), string4943);
                                                                                                                  var string4947 = new GraceString(" (U+");
                                                                                                                  var call4949 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                                                                  var string4951 = new GraceString("");
                                                                                                                  var opresult4953 = callmethodChecked(string4951, "++", [1], call4949);
                                                                                                                  var opresult4955 = callmethodChecked(opresult4953, "++", [1], string4947);
                                                                                                                  var opresult4957 = callmethodChecked(opresult4955, "++", [1], call4945);
                                                                                                                  var opresult4959 = callmethodChecked(opresult4957, "++", [1], string4940);
                                                                                                                  var opresult4961 = callmethodChecked(opresult4959, "++", [1], string4938);
                                                                                                                  var opresult4963 = callmethodChecked(opresult4961, "++", [1], string4936);
                                                                                                                  var opresult4965 = callmethodChecked(opresult4963, "++", [1], string4934);
                                                                                                                  var opresult4967 = callmethodChecked(opresult4965, "++", [1], string4932);
                                                                                                                  var opresult4969 = callmethodChecked(opresult4967, "++", [1], call4930);
                                                                                                                  var opresult4971 = callmethodChecked(opresult4969, "++", [1], string4925);
                                                                                                                  setLineNumber(698);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call4972 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call4973 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call4974 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  setLineNumber(691);    // compilenode identifier
                                                                                                                  var call4975 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult4971, call4972, call4973, call4974, var_suggestion);
                                                                                                                  if4904 = call4975;
                                                                                                                }
                                                                                                                setLineNumber(702);    // compilenode string
                                                                                                                var string4976 = new GraceString("is not a valid whitespace character; use spaces instead.");
                                                                                                                setLineNumber(701);    // compilenode string
                                                                                                                var string4978 = new GraceString(") ");
                                                                                                                var call4980 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                var string4981 = new GraceString("0");
                                                                                                                var call4982 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                onOuter = true;
                                                                                                                onSelf = true;
                                                                                                                var call4983 = callmethodChecked(call4982, "padl", [3], call4980, new GraceNum(4), string4981);
                                                                                                                var string4985 = new GraceString(" (U+");
                                                                                                                var call4987 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                                                                var string4989 = new GraceString("");
                                                                                                                var opresult4991 = callmethodChecked(string4989, "++", [1], call4987);
                                                                                                                var opresult4993 = callmethodChecked(opresult4991, "++", [1], string4985);
                                                                                                                var opresult4995 = callmethodChecked(opresult4993, "++", [1], call4983);
                                                                                                                var opresult4997 = callmethodChecked(opresult4995, "++", [1], string4978);
                                                                                                                var opresult4999 = callmethodChecked(opresult4997, "++", [1], string4976);
                                                                                                                setLineNumber(702);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call5000 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                setLineNumber(703);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call5001 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call5002 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                setLineNumber(701);    // compilenode identifier
                                                                                                                var call5003 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult4999, call5000, call5001, call5002, var_suggestion);
                                                                                                                if4854 = call5003;
                                                                                                              }
                                                                                                              if4838 = if4854;
                                                                                                            } else {
                                                                                                              var if5004 = GraceDone;
                                                                                                              setLineNumber(705);    // compilenode block
                                                                                                              var block5005 = new GraceBlock(this, 705, 0);
                                                                                                              block5005.real = function() {
                                                                                                                var string5006 = new GraceString("q");
                                                                                                                var opresult5009 = callmethodChecked(var_mode, "\u2260", [1], string5006);
                                                                                                                return opresult5009;
                                                                                                              };
                                                                                                              var call5011 = callmethodChecked(var_badControl, "match", [1], var_ordval);
                                                                                                              var opresult5013 = callmethodChecked(call5011, "&&", [1], block5005);
                                                                                                              if (Grace_isTrue(opresult5013)) {
                                                                                                                setLineNumber(708);    // compilenode identifier
                                                                                                                var call5014 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                var call5015 = callmethodChecked(call5014, "new", [0]);
                                                                                                                var var_suggestion = call5015;
                                                                                                                var if5016 = GraceDone;
                                                                                                                setLineNumber(709);    // compilenode identifier
                                                                                                                if (Grace_isTrue(var_inStr)) {
                                                                                                                  setLineNumber(710);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call5017 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call5018 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  setLineNumber(711);    // compilenode string
                                                                                                                  var string5019 = new GraceString("");
                                                                                                                  var call5021 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string5022 = new GraceString("0");
                                                                                                                  var call5023 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call5024 = callmethodChecked(call5023, "padl", [3], call5021, new GraceNum(4), string5022);
                                                                                                                  var string5026 = new GraceString("\\u");
                                                                                                                  var opresult5028 = callmethodChecked(string5026, "++", [1], call5024);
                                                                                                                  var opresult5030 = callmethodChecked(opresult5028, "++", [1], string5019);
                                                                                                                  setLineNumber(712);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call5031 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                  setLineNumber(710);    // compilenode identifier
                                                                                                                  var call5032 = callmethodChecked(var_suggestion, "replaceRange()with()onLine", [2, 1, 1], call5017, call5018, opresult5030, call5031);
                                                                                                                  setLineNumber(718);    // compilenode string
                                                                                                                  var string5033 = new GraceString(" instead");
                                                                                                                  setLineNumber(717);    // compilenode identifier
                                                                                                                  var call5035 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string5036 = new GraceString("0");
                                                                                                                  var call5037 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call5038 = callmethodChecked(call5037, "padl", [3], call5035, new GraceNum(4), string5036);
                                                                                                                  setLineNumber(716);    // compilenode string
                                                                                                                  var string5040 = new GraceString("use the Unicode escape \\u");
                                                                                                                  setLineNumber(715);    // compilenode string
                                                                                                                  var string5042 = new GraceString("written in the source code; ");
                                                                                                                  setLineNumber(714);    // compilenode string
                                                                                                                  var string5044 = new GraceString("is a control character and cannot be ");
                                                                                                                  setLineNumber(713);    // compilenode string
                                                                                                                  var string5046 = new GraceString(") ");
                                                                                                                  var call5048 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                  var string5049 = new GraceString("0");
                                                                                                                  var call5050 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                  onOuter = true;
                                                                                                                  onSelf = true;
                                                                                                                  var call5051 = callmethodChecked(call5050, "padl", [3], call5048, new GraceNum(4), string5049);
                                                                                                                  var string5053 = new GraceString(" (U+");
                                                                                                                  var call5055 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                                                                  var string5057 = new GraceString("");
                                                                                                                  var opresult5059 = callmethodChecked(string5057, "++", [1], call5055);
                                                                                                                  var opresult5061 = callmethodChecked(opresult5059, "++", [1], string5053);
                                                                                                                  var opresult5063 = callmethodChecked(opresult5061, "++", [1], call5051);
                                                                                                                  var opresult5065 = callmethodChecked(opresult5063, "++", [1], string5046);
                                                                                                                  var opresult5067 = callmethodChecked(opresult5065, "++", [1], string5044);
                                                                                                                  var opresult5069 = callmethodChecked(opresult5067, "++", [1], string5042);
                                                                                                                  var opresult5071 = callmethodChecked(opresult5069, "++", [1], string5040);
                                                                                                                  var opresult5073 = callmethodChecked(opresult5071, "++", [1], call5038);
                                                                                                                  var opresult5075 = callmethodChecked(opresult5073, "++", [1], string5033);
                                                                                                                  setLineNumber(719);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call5076 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call5077 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call5078 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  setLineNumber(713);    // compilenode identifier
                                                                                                                  var call5079 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult5075, call5076, call5077, call5078, var_suggestion);
                                                                                                                  if5016 = call5079;
                                                                                                                }
                                                                                                                setLineNumber(722);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call5080 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call5081 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                var call5082 = callmethodChecked(var_suggestion, "deleteChar()onLine", [1, 1], call5080, call5081);
                                                                                                                setLineNumber(724);    // compilenode string
                                                                                                                var string5083 = new GraceString("is a control character and cannot be written in the source code; consider using spaces instead.");
                                                                                                                setLineNumber(723);    // compilenode string
                                                                                                                var string5085 = new GraceString(") ");
                                                                                                                var call5087 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                var string5088 = new GraceString("0");
                                                                                                                var call5089 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                onOuter = true;
                                                                                                                onSelf = true;
                                                                                                                var call5090 = callmethodChecked(call5089, "padl", [3], call5087, new GraceNum(4), string5088);
                                                                                                                var string5092 = new GraceString(" (U+");
                                                                                                                var call5094 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                                                                var string5096 = new GraceString("");
                                                                                                                var opresult5098 = callmethodChecked(string5096, "++", [1], call5094);
                                                                                                                var opresult5100 = callmethodChecked(opresult5098, "++", [1], string5092);
                                                                                                                var opresult5102 = callmethodChecked(opresult5100, "++", [1], call5090);
                                                                                                                var opresult5104 = callmethodChecked(opresult5102, "++", [1], string5085);
                                                                                                                var opresult5106 = callmethodChecked(opresult5104, "++", [1], string5083);
                                                                                                                setLineNumber(724);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call5107 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                setLineNumber(725);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call5108 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call5109 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                setLineNumber(723);    // compilenode identifier
                                                                                                                var call5110 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], opresult5106, call5107, call5108, call5109, var_suggestion);
                                                                                                                if5004 = call5110;
                                                                                                              }
                                                                                                              if4838 = if5004;
                                                                                                            }
                                                                                                            var if5111 = GraceDone;
                                                                                                            setLineNumber(727);    // compilenode identifier
                                                                                                            if (Grace_isTrue(var_atStart)) {
                                                                                                              var if5112 = GraceDone;
                                                                                                              setLineNumber(728);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call5114 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var opresult5116 = callmethodChecked(call5114, "==", [1], new GraceNum(1));
                                                                                                              if (Grace_isTrue(opresult5116)) {
                                                                                                                var if5117 = GraceDone;
                                                                                                                setLineNumber(729);    // compilenode string
                                                                                                                var string5118 = new GraceString("#");
                                                                                                                var opresult5121 = callmethodChecked(var_c, "==", [1], string5118);
                                                                                                                if (Grace_isTrue(opresult5121)) {
                                                                                                                  setLineNumber(730);    // compilenode string
                                                                                                                  var string5122 = new GraceString("p");
                                                                                                                  var_mode = string5122;
                                                                                                                  setLineNumber(731);    // compilenode identifier
                                                                                                                  var_newmode = var_mode;
                                                                                                                  if5117 = GraceDone;
                                                                                                                } else {
                                                                                                                  setLineNumber(733);    // compilenode identifier
                                                                                                                  var_atStart = GraceFalse;
                                                                                                                  if5117 = GraceDone;
                                                                                                                }
                                                                                                                if5112 = if5117;
                                                                                                              }
                                                                                                              if5111 = if5112;
                                                                                                            }
                                                                                                            var if5123 = GraceDone;
                                                                                                            setLineNumber(737);    // compilenode identifier
                                                                                                            if (Grace_isTrue(var_inStr)) {
                                                                                                            } else {
                                                                                                              var if5124 = GraceDone;
                                                                                                              setLineNumber(739);    // compilenode string
                                                                                                              var string5125 = new GraceString("p");
                                                                                                              var opresult5128 = callmethodChecked(var_mode, "\u2260", [1], string5125);
                                                                                                              var string5130 = new GraceString("c");
                                                                                                              var opresult5133 = callmethodChecked(var_mode, "\u2260", [1], string5130);
                                                                                                              var opresult5135 = callmethodChecked(opresult5133, "&&", [1], opresult5128);
                                                                                                              if (Grace_isTrue(opresult5135)) {
                                                                                                                var if5136 = GraceDone;
                                                                                                                setLineNumber(741);    // compilenode string
                                                                                                                var string5137 = new GraceString("d");
                                                                                                                var opresult5140 = callmethodChecked(var_mode, "\u2260", [1], string5137);
                                                                                                                var string5142 = new GraceString(" ");
                                                                                                                var opresult5145 = callmethodChecked(var_c, "==", [1], string5142);
                                                                                                                var opresult5147 = callmethodChecked(opresult5145, "&&", [1], opresult5140);
                                                                                                                if (Grace_isTrue(opresult5147)) {
                                                                                                                  setLineNumber(742);    // compilenode string
                                                                                                                  var string5148 = new GraceString("n");
                                                                                                                  var_newmode = string5148;
                                                                                                                  if5136 = GraceDone;
                                                                                                                }
                                                                                                                var if5149 = GraceDone;
                                                                                                                setLineNumber(744);    // compilenode string
                                                                                                                var string5150 = new GraceString("\"");
                                                                                                                var opresult5153 = callmethodChecked(var_c, "==", [1], string5150);
                                                                                                                if (Grace_isTrue(opresult5153)) {
                                                                                                                  setLineNumber(746);    // compilenode string
                                                                                                                  var string5154 = new GraceString("\"");
                                                                                                                  var_newmode = string5154;
                                                                                                                  setLineNumber(747);    // compilenode identifier
                                                                                                                  var_inStr = GraceTrue;
                                                                                                                  setLineNumber(748);    // compilenode call
                                                                                                                  onSelf = true;
                                                                                                                  var call5155 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                  onSelf = true;
                                                                                                                  var call5156 = callmethodChecked(this, "stringStart:=", [1], call5155);
                                                                                                                  if5149 = call5156;
                                                                                                                } else {
                                                                                                                  var if5157 = GraceDone;
                                                                                                                  setLineNumber(749);    // compilenode string
                                                                                                                  var string5158 = new GraceString("\u2039");
                                                                                                                  var opresult5161 = callmethodChecked(var_c, "==", [1], string5158);
                                                                                                                  if (Grace_isTrue(opresult5161)) {
                                                                                                                    setLineNumber(751);    // compilenode string
                                                                                                                    var string5162 = new GraceString("q");
                                                                                                                    var_newmode = string5162;
                                                                                                                    setLineNumber(752);    // compilenode identifier
                                                                                                                    var_inStr = GraceTrue;
                                                                                                                    setLineNumber(753);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5163 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                    onSelf = true;
                                                                                                                    var call5164 = callmethodChecked(this, "startLine:=", [1], call5163);
                                                                                                                    setLineNumber(754);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5165 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                    onSelf = true;
                                                                                                                    var call5166 = callmethodChecked(this, "stringStart:=", [1], call5165);
                                                                                                                    if5157 = call5166;
                                                                                                                  } else {
                                                                                                                    var if5167 = GraceDone;
                                                                                                                    setLineNumber(755);    // compilenode identifier
                                                                                                                    var call5168 = callmethodChecked(var_identifierChar, "match", [1], var_ordval);
                                                                                                                    if (Grace_isTrue(call5168)) {
                                                                                                                      setLineNumber(756);    // compilenode string
                                                                                                                      var string5169 = new GraceString("i");
                                                                                                                      var_newmode = string5169;
                                                                                                                      if5167 = GraceDone;
                                                                                                                    }
                                                                                                                    if5157 = if5167;
                                                                                                                  }
                                                                                                                  if5149 = if5157;
                                                                                                                }
                                                                                                                var if5170 = GraceDone;
                                                                                                                setLineNumber(758);    // compilenode identifier
                                                                                                                var call5171 = callmethodChecked(var_digit, "match", [1], var_ordval);
                                                                                                                if (Grace_isTrue(call5171)) {
                                                                                                                  var if5172 = GraceDone;
                                                                                                                  setLineNumber(761);    // compilenode string
                                                                                                                  var string5173 = new GraceString("i");
                                                                                                                  var opresult5176 = callmethodChecked(var_mode, "\u2260", [1], string5173);
                                                                                                                  if (Grace_isTrue(opresult5176)) {
                                                                                                                    setLineNumber(762);    // compilenode string
                                                                                                                    var string5177 = new GraceString("m");
                                                                                                                    var_newmode = string5177;
                                                                                                                    if5172 = GraceDone;
                                                                                                                  }
                                                                                                                  if5170 = if5172;
                                                                                                                }
                                                                                                                var if5178 = GraceDone;
                                                                                                                setLineNumber(765);    // compilenode string
                                                                                                                var string5179 = new GraceString("m");
                                                                                                                var opresult5182 = callmethodChecked(var_mode, "==", [1], string5179);
                                                                                                                if (Grace_isTrue(opresult5182)) {
                                                                                                                  var if5183 = GraceDone;
                                                                                                                  setLineNumber(766);    // compilenode identifier
                                                                                                                  var opresult5186 = callmethodChecked(var_ordval, "\u2264", [1], new GraceNum(122));
                                                                                                                  var opresult5190 = callmethodChecked(var_ordval, "\u2265", [1], new GraceNum(97));
                                                                                                                  var opresult5192 = callmethodChecked(opresult5190, "&&", [1], opresult5186);
                                                                                                                  if (Grace_isTrue(opresult5192)) {
                                                                                                                    setLineNumber(767);    // compilenode string
                                                                                                                    var string5193 = new GraceString("m");
                                                                                                                    var_newmode = string5193;
                                                                                                                    if5183 = GraceDone;
                                                                                                                  } else {
                                                                                                                    var if5194 = GraceDone;
                                                                                                                    setLineNumber(769);    // compilenode identifier
                                                                                                                    var opresult5197 = callmethodChecked(var_ordval, "\u2264", [1], new GraceNum(90));
                                                                                                                    var opresult5201 = callmethodChecked(var_ordval, "\u2265", [1], new GraceNum(65));
                                                                                                                    var opresult5203 = callmethodChecked(opresult5201, "&&", [1], opresult5197);
                                                                                                                    if (Grace_isTrue(opresult5203)) {
                                                                                                                      setLineNumber(770);    // compilenode string
                                                                                                                      var string5204 = new GraceString("m");
                                                                                                                      var_newmode = string5204;
                                                                                                                      if5194 = GraceDone;
                                                                                                                    }
                                                                                                                    if5183 = if5194;
                                                                                                                  }
                                                                                                                  if5178 = if5183;
                                                                                                                }
                                                                                                                var if5205 = GraceDone;
                                                                                                                setLineNumber(774);    // compilenode string
                                                                                                                var string5206 = new GraceString("<");
                                                                                                                var opresult5209 = callmethodChecked(var_c, "==", [1], string5206);
                                                                                                                if (Grace_isTrue(opresult5209)) {
                                                                                                                  var if5210 = GraceDone;
                                                                                                                  setLineNumber(775);    // compilenode string
                                                                                                                  var string5211 = new GraceString("i");
                                                                                                                  var opresult5214 = callmethodChecked(var_mode, "==", [1], string5211);
                                                                                                                  if (Grace_isTrue(opresult5214)) {
                                                                                                                    setLineNumber(776);    // compilenode string
                                                                                                                    var string5215 = new GraceString("\u27e6");
                                                                                                                    var_newmode = string5215;
                                                                                                                    if5210 = GraceDone;
                                                                                                                  } else {
                                                                                                                    var if5216 = GraceDone;
                                                                                                                    setLineNumber(777);    // compilenode string
                                                                                                                    var string5217 = new GraceString("op");
                                                                                                                    var call5219 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                    var call5220 = callmethodChecked(call5219, "kind", [0]);
                                                                                                                    var opresult5222 = callmethodChecked(call5220, "==", [1], string5217);
                                                                                                                    var string5224 = new GraceString("n");
                                                                                                                    var opresult5227 = callmethodChecked(var_mode, "==", [1], string5224);
                                                                                                                    var opresult5229 = callmethodChecked(opresult5227, "&&", [1], opresult5222);
                                                                                                                    if (Grace_isTrue(opresult5229)) {
                                                                                                                      setLineNumber(778);    // compilenode string
                                                                                                                      var string5230 = new GraceString("\u27e7");
                                                                                                                      var_newmode = string5230;
                                                                                                                      if5216 = GraceDone;
                                                                                                                    } else {
                                                                                                                      setLineNumber(780);    // compilenode string
                                                                                                                      var string5231 = new GraceString("o");
                                                                                                                      var_newmode = string5231;
                                                                                                                      if5216 = GraceDone;
                                                                                                                    }
                                                                                                                    if5210 = if5216;
                                                                                                                  }
                                                                                                                  if5205 = if5210;
                                                                                                                } else {
                                                                                                                  var if5232 = GraceDone;
                                                                                                                  setLineNumber(782);    // compilenode block
                                                                                                                  var block5233 = new GraceBlock(this, 782, 0);
                                                                                                                  block5233.real = function() {
                                                                                                                    var string5234 = new GraceString("e");
                                                                                                                    var opresult5237 = callmethodChecked(var_mode, "==", [1], string5234);
                                                                                                                    var string5239 = new GraceString("i");
                                                                                                                    var opresult5242 = callmethodChecked(var_mode, "==", [1], string5239);
                                                                                                                    var opresult5244 = callmethodChecked(opresult5242, "||", [1], opresult5237);
                                                                                                                    return opresult5244;
                                                                                                                  };
                                                                                                                  var string5246 = new GraceString(">");
                                                                                                                  var opresult5249 = callmethodChecked(var_c, "==", [1], string5246);
                                                                                                                  var opresult5251 = callmethodChecked(opresult5249, "&&", [1], block5233);
                                                                                                                  if (Grace_isTrue(opresult5251)) {
                                                                                                                    var if5252 = GraceDone;
                                                                                                                    setLineNumber(783);    // compilenode string
                                                                                                                    var string5253 = new GraceString("\u27e7");
                                                                                                                    var opresult5256 = callmethodChecked(var_mode, "==", [1], string5253);
                                                                                                                    if (Grace_isTrue(opresult5256)) {
                                                                                                                      setLineNumber(784);    // compilenode identifier
                                                                                                                      onSelf = true;
                                                                                                                      var call5257 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                                                                      if5252 = call5257;
                                                                                                                    }
                                                                                                                    setLineNumber(786);    // compilenode string
                                                                                                                    var string5258 = new GraceString("\u27e7");
                                                                                                                    var_newmode = string5258;
                                                                                                                    if5232 = GraceDone;
                                                                                                                  } else {
                                                                                                                    var if5259 = GraceDone;
                                                                                                                    setLineNumber(787);    // compilenode identifier
                                                                                                                    onSelf = true;
                                                                                                                    var call5260 = callmethodChecked(this, "isoperatorchar", [2], var_c, var_ordval);
                                                                                                                    if (Grace_isTrue(call5260)) {
                                                                                                                      setLineNumber(788);    // compilenode string
                                                                                                                      var string5261 = new GraceString("o");
                                                                                                                      var_newmode = string5261;
                                                                                                                      if5259 = GraceDone;
                                                                                                                    } else {
                                                                                                                      var if5262 = GraceDone;
                                                                                                                      setLineNumber(789);    // compilenode identifier
                                                                                                                      var call5263 = callmethodChecked(var_selfModes, "match", [1], var_ordval);
                                                                                                                      if (Grace_isTrue(call5263)) {
                                                                                                                        setLineNumber(790);    // compilenode identifier
                                                                                                                        var_newmode = var_c;
                                                                                                                        if5262 = GraceDone;
                                                                                                                      }
                                                                                                                      if5259 = if5262;
                                                                                                                    }
                                                                                                                    if5232 = if5259;
                                                                                                                  }
                                                                                                                  if5205 = if5232;
                                                                                                                }
                                                                                                                var if5264 = GraceDone;
                                                                                                                setLineNumber(792);    // compilenode string
                                                                                                                var string5265 = new GraceString("#");
                                                                                                                var opresult5268 = callmethodChecked(var_c, "==", [1], string5265);
                                                                                                                if (Grace_isTrue(opresult5268)) {
                                                                                                                  var if5269 = GraceDone;
                                                                                                                  setLineNumber(793);    // compilenode string
                                                                                                                  var string5270 = new GraceString("#pragma");
                                                                                                                  onSelf = true;
                                                                                                                  var call5272 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                  var call5273 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                  var call5274 = callmethodChecked(call5273, "at", [1], call5272);
                                                                                                                  var call5275 = callmethodChecked(call5274, "substringFrom()to", [1, 1], new GraceNum(1), new GraceNum(7));
                                                                                                                  var opresult5277 = callmethodChecked(call5275, "==", [1], string5270);
                                                                                                                  if (Grace_isTrue(opresult5277)) {
                                                                                                                    var if5278 = GraceDone;
                                                                                                                    setLineNumber(794);    // compilenode identifier
                                                                                                                    if (Grace_isTrue(var_atStart)) {
                                                                                                                      setLineNumber(795);    // compilenode string
                                                                                                                      var string5279 = new GraceString("p");
                                                                                                                      var_mode = string5279;
                                                                                                                      setLineNumber(796);    // compilenode string
                                                                                                                      var string5280 = new GraceString("p");
                                                                                                                      var_newmode = string5280;
                                                                                                                      if5278 = GraceDone;
                                                                                                                    } else {
                                                                                                                      setLineNumber(798);    // compilenode string
                                                                                                                      var string5281 = new GraceString("pragmas must be at the start of the file.");
                                                                                                                      setLineNumber(799);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5282 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      setLineNumber(798);    // compilenode identifier
                                                                                                                      var call5283 = callmethodChecked(var_errormessages, "syntaxError()atLine", [1, 1], string5281, call5282);
                                                                                                                      if5278 = call5283;
                                                                                                                    }
                                                                                                                    if5269 = if5278;
                                                                                                                  }
                                                                                                                  if5264 = if5269;
                                                                                                                }
                                                                                                                var if5284 = GraceDone;
                                                                                                                setLineNumber(803);    // compilenode string
                                                                                                                var string5285 = new GraceString(".");
                                                                                                                var opresult5288 = callmethodChecked(var_c, "==", [1], string5285);
                                                                                                                if (Grace_isTrue(opresult5288)) {
                                                                                                                  var if5289 = GraceDone;
                                                                                                                  setLineNumber(804);    // compilenode string
                                                                                                                  var string5290 = new GraceString(".");
                                                                                                                  var opresult5293 = callmethodChecked(var_accum, "==", [1], string5290);
                                                                                                                  if (Grace_isTrue(opresult5293)) {
                                                                                                                    setLineNumber(806);    // compilenode string
                                                                                                                    var string5294 = new GraceString("o");
                                                                                                                    var_mode = string5294;
                                                                                                                    setLineNumber(807);    // compilenode identifier
                                                                                                                    var_newmode = var_mode;
                                                                                                                    if5289 = GraceDone;
                                                                                                                  } else {
                                                                                                                    var if5295 = GraceDone;
                                                                                                                    setLineNumber(808);    // compilenode string
                                                                                                                    var string5296 = new GraceString("..");
                                                                                                                    var opresult5299 = callmethodChecked(var_accum, "==", [1], string5296);
                                                                                                                    if (Grace_isTrue(opresult5299)) {
                                                                                                                      setLineNumber(810);    // compilenode string
                                                                                                                      var string5300 = new GraceString("n");
                                                                                                                      var_mode = string5300;
                                                                                                                      setLineNumber(811);    // compilenode identifier
                                                                                                                      var_newmode = var_mode;
                                                                                                                      setLineNumber(812);    // compilenode string
                                                                                                                      var string5301 = new GraceString("i");
                                                                                                                      var string5302 = new GraceString("...");
                                                                                                                      onSelf = true;
                                                                                                                      var call5303 = callmethodChecked(this, "modechange", [3], var_tokens, string5301, string5302);
                                                                                                                      setLineNumber(813);    // compilenode string
                                                                                                                      var string5304 = new GraceString("");
                                                                                                                      var_accum = string5304;
                                                                                                                      if5295 = GraceDone;
                                                                                                                    } else {
                                                                                                                      setLineNumber(815);    // compilenode string
                                                                                                                      var string5305 = new GraceString(".");
                                                                                                                      var_newmode = string5305;
                                                                                                                      if5295 = GraceDone;
                                                                                                                    }
                                                                                                                    if5289 = if5295;
                                                                                                                  }
                                                                                                                  if5284 = if5289;
                                                                                                                }
                                                                                                                var if5306 = GraceDone;
                                                                                                                setLineNumber(818);    // compilenode string
                                                                                                                var string5307 = new GraceString("/");
                                                                                                                var opresult5310 = callmethodChecked(var_c, "==", [1], string5307);
                                                                                                                if (Grace_isTrue(opresult5310)) {
                                                                                                                  var if5311 = GraceDone;
                                                                                                                  setLineNumber(819);    // compilenode string
                                                                                                                  var string5312 = new GraceString("/");
                                                                                                                  var opresult5315 = callmethodChecked(var_accum, "==", [1], string5312);
                                                                                                                  if (Grace_isTrue(opresult5315)) {
                                                                                                                    setLineNumber(821);    // compilenode string
                                                                                                                    var string5316 = new GraceString("c");
                                                                                                                    var_mode = string5316;
                                                                                                                    setLineNumber(822);    // compilenode identifier
                                                                                                                    var_newmode = var_mode;
                                                                                                                    if5311 = GraceDone;
                                                                                                                  }
                                                                                                                  if5306 = if5311;
                                                                                                                }
                                                                                                                var if5317 = GraceDone;
                                                                                                                setLineNumber(825);    // compilenode string
                                                                                                                var string5318 = new GraceString("n");
                                                                                                                var opresult5321 = callmethodChecked(var_mode, "==", [1], string5318);
                                                                                                                if (Grace_isTrue(opresult5321)) {
                                                                                                                  var if5322 = GraceDone;
                                                                                                                  setLineNumber(826);    // compilenode identifier
                                                                                                                  var opresult5325 = callmethodChecked(var_mode, "==", [1], var_newmode);
                                                                                                                  if (Grace_isTrue(opresult5325)) {
                                                                                                                    var if5326 = GraceDone;
                                                                                                                    setLineNumber(827);    // compilenode identifier
                                                                                                                    var call5327 = callmethodChecked(var_unicode, "isSeparator", [1], var_ordval);
                                                                                                                    var call5328 = callmethodChecked(call5327, "not", [0]);
                                                                                                                    if (Grace_isTrue(call5328)) {
                                                                                                                      var if5329 = GraceDone;
                                                                                                                      setLineNumber(828);    // compilenode identifier
                                                                                                                      var call5330 = callmethodChecked(var_unicode, "isControl", [1], var_ordval);
                                                                                                                      var call5331 = callmethodChecked(call5330, "not", [0]);
                                                                                                                      if (Grace_isTrue(call5331)) {
                                                                                                                        var if5332 = GraceDone;
                                                                                                                        setLineNumber(829);    // compilenode identifier
                                                                                                                        var opresult5335 = callmethodChecked(var_ordval, "\u2260", [1], new GraceNum(10));
                                                                                                                        if (Grace_isTrue(opresult5335)) {
                                                                                                                          var if5336 = GraceDone;
                                                                                                                          setLineNumber(830);    // compilenode identifier
                                                                                                                          var opresult5339 = callmethodChecked(var_ordval, "\u2260", [1], new GraceNum(13));
                                                                                                                          if (Grace_isTrue(opresult5339)) {
                                                                                                                            var if5340 = GraceDone;
                                                                                                                            setLineNumber(831);    // compilenode identifier
                                                                                                                            var opresult5343 = callmethodChecked(var_ordval, "\u2260", [1], new GraceNum(32));
                                                                                                                            if (Grace_isTrue(opresult5343)) {
                                                                                                                              var if5344 = GraceDone;
                                                                                                                              setLineNumber(832);    // compilenode string
                                                                                                                              var string5345 = new GraceString(".");
                                                                                                                              var opresult5348 = callmethodChecked(var_c, "\u2260", [1], string5345);
                                                                                                                              if (Grace_isTrue(opresult5348)) {
                                                                                                                                setLineNumber(834);    // compilenode string
                                                                                                                                var string5349 = new GraceString("is not a valid character; use spaces instead.");
                                                                                                                                setLineNumber(833);    // compilenode string
                                                                                                                                var string5351 = new GraceString(") ");
                                                                                                                                var call5353 = callmethodChecked(var_ordval, "inBase", [1], new GraceNum(16));
                                                                                                                                var string5354 = new GraceString("0");
                                                                                                                                var call5355 = callmethodChecked(superDepth, "outer", [0]);
                                                                                                                                onOuter = true;
                                                                                                                                onSelf = true;
                                                                                                                                var call5356 = callmethodChecked(call5355, "padl", [3], call5353, new GraceNum(4), string5354);
                                                                                                                                var string5358 = new GraceString(" (U+");
                                                                                                                                var call5360 = callmethodChecked(var_unicode, "name", [1], var_c);
                                                                                                                                var string5362 = new GraceString("");
                                                                                                                                var opresult5364 = callmethodChecked(string5362, "++", [1], call5360);
                                                                                                                                var opresult5366 = callmethodChecked(opresult5364, "++", [1], string5358);
                                                                                                                                var opresult5368 = callmethodChecked(opresult5366, "++", [1], call5356);
                                                                                                                                var opresult5370 = callmethodChecked(opresult5368, "++", [1], string5351);
                                                                                                                                var opresult5372 = callmethodChecked(opresult5370, "++", [1], string5349);
                                                                                                                                setLineNumber(835);    // compilenode call
                                                                                                                                onSelf = true;
                                                                                                                                var call5373 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                                onSelf = true;
                                                                                                                                var call5374 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                onSelf = true;
                                                                                                                                var call5375 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                                setLineNumber(833);    // compilenode identifier
                                                                                                                                var call5376 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult5372, call5373, call5374, call5375);
                                                                                                                                if5344 = call5376;
                                                                                                                              }
                                                                                                                              if5340 = if5344;
                                                                                                                            }
                                                                                                                            if5336 = if5340;
                                                                                                                          }
                                                                                                                          if5332 = if5336;
                                                                                                                        }
                                                                                                                        if5329 = if5332;
                                                                                                                      }
                                                                                                                      if5326 = if5329;
                                                                                                                    }
                                                                                                                    if5322 = if5326;
                                                                                                                  }
                                                                                                                  if5317 = if5322;
                                                                                                                }
                                                                                                                if5124 = if5317;
                                                                                                              }
                                                                                                              if5123 = if5124;
                                                                                                            }
                                                                                                            var if5377 = GraceDone;
                                                                                                            setLineNumber(845);    // compilenode string
                                                                                                            var string5378 = new GraceString("\"");
                                                                                                            var opresult5381 = callmethodChecked(var_mode, "==", [1], string5378);
                                                                                                            if (Grace_isTrue(opresult5381)) {
                                                                                                              var if5382 = GraceDone;
                                                                                                              setLineNumber(846);    // compilenode string
                                                                                                              var string5383 = new GraceString("\"");
                                                                                                              var opresult5386 = callmethodChecked(var_c, "==", [1], string5383);
                                                                                                              if (Grace_isTrue(opresult5386)) {
                                                                                                                var if5387 = GraceDone;
                                                                                                                setLineNumber(847);    // compilenode identifier
                                                                                                                var call5388 = callmethodChecked(var_escaped, "not", [0]);
                                                                                                                if (Grace_isTrue(call5388)) {
                                                                                                                  setLineNumber(849);    // compilenode string
                                                                                                                  var string5389 = new GraceString("n");
                                                                                                                  var_newmode = string5389;
                                                                                                                  setLineNumber(850);    // compilenode identifier
                                                                                                                  var_inStr = GraceFalse;
                                                                                                                  var if5390 = GraceDone;
                                                                                                                  setLineNumber(851);    // compilenode identifier
                                                                                                                  if (Grace_isTrue(var_interpString)) {
                                                                                                                    setLineNumber(852);    // compilenode identifier
                                                                                                                    onSelf = true;
                                                                                                                    var call5391 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                                                                    setLineNumber(853);    // compilenode string
                                                                                                                    var string5392 = new GraceString(")");
                                                                                                                    var string5393 = new GraceString(")");
                                                                                                                    onSelf = true;
                                                                                                                    var call5394 = callmethodChecked(this, "modechange", [3], var_tokens, string5392, string5393);
                                                                                                                    setLineNumber(854);    // compilenode identifier
                                                                                                                    var_mode = var_newmode;
                                                                                                                    setLineNumber(855);    // compilenode identifier
                                                                                                                    var_interpString = GraceFalse;
                                                                                                                    if5390 = GraceDone;
                                                                                                                  }
                                                                                                                  if5387 = if5390;
                                                                                                                }
                                                                                                                if5382 = if5387;
                                                                                                              }
                                                                                                              if5377 = if5382;
                                                                                                            } else {
                                                                                                              var if5395 = GraceDone;
                                                                                                              setLineNumber(859);    // compilenode string
                                                                                                              var string5396 = new GraceString("q");
                                                                                                              var opresult5399 = callmethodChecked(var_mode, "==", [1], string5396);
                                                                                                              if (Grace_isTrue(opresult5399)) {
                                                                                                                var if5400 = GraceDone;
                                                                                                                setLineNumber(860);    // compilenode string
                                                                                                                var string5401 = new GraceString("\u203a");
                                                                                                                var opresult5404 = callmethodChecked(var_c, "==", [1], string5401);
                                                                                                                if (Grace_isTrue(opresult5404)) {
                                                                                                                  setLineNumber(862);    // compilenode string
                                                                                                                  var string5405 = new GraceString("n");
                                                                                                                  var_newmode = string5405;
                                                                                                                  setLineNumber(863);    // compilenode identifier
                                                                                                                  var_inStr = GraceFalse;
                                                                                                                  if5400 = GraceDone;
                                                                                                                }
                                                                                                                if5395 = if5400;
                                                                                                              }
                                                                                                              if5377 = if5395;
                                                                                                            }
                                                                                                            var if5406 = GraceDone;
                                                                                                            setLineNumber(866);    // compilenode identifier
                                                                                                            var opresult5409 = callmethodChecked(var_newmode, "\u2260", [1], var_mode);
                                                                                                            if (Grace_isTrue(opresult5409)) {
                                                                                                              setLineNumber(869);    // compilenode identifier
                                                                                                              onSelf = true;
                                                                                                              var call5410 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                                                              var if5411 = GraceDone;
                                                                                                              setLineNumber(870);    // compilenode identifier
                                                                                                              var opresult5414 = callmethodChecked(var_interpdepth, ">", [1], new GraceNum(0));
                                                                                                              if (Grace_isTrue(opresult5414)) {
                                                                                                                var if5415 = GraceDone;
                                                                                                                setLineNumber(871);    // compilenode string
                                                                                                                var string5416 = new GraceString("}");
                                                                                                                var opresult5419 = callmethodChecked(var_newmode, "==", [1], string5416);
                                                                                                                if (Grace_isTrue(opresult5419)) {
                                                                                                                  var if5420 = GraceDone;
                                                                                                                  setLineNumber(874);    // compilenode string
                                                                                                                  var string5421 = new GraceString("lbrace");
                                                                                                                  var call5423 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                  var call5424 = callmethodChecked(call5423, "kind", [0]);
                                                                                                                  var opresult5426 = callmethodChecked(call5424, "==", [1], string5421);
                                                                                                                  if (Grace_isTrue(opresult5426)) {
                                                                                                                    setLineNumber(875);    // compilenode identifier
                                                                                                                    var call5427 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                    var call5428 = callmethodChecked(call5427, "new", [0]);
                                                                                                                    var var_suggestion = call5428;
                                                                                                                    setLineNumber(876);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5430 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                    var diff5432 = callmethodChecked(call5430, "-", [1], new GraceNum(1));
                                                                                                                    onSelf = true;
                                                                                                                    var call5433 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                    onSelf = true;
                                                                                                                    var call5434 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                    var call5435 = callmethodChecked(var_suggestion, "deleteRange()onLine", [2, 1], diff5432, call5433, call5434);
                                                                                                                    setLineNumber(877);    // compilenode string
                                                                                                                    var string5436 = new GraceString("a string interpolation cannot be empty.");
                                                                                                                    setLineNumber(878);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5437 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                    var call5438 = callmethodChecked(var_tokens, "last", [0]);
                                                                                                                    var call5439 = callmethodChecked(call5438, "linePos", [0]);
                                                                                                                    onSelf = true;
                                                                                                                    var call5440 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                    setLineNumber(877);    // compilenode identifier
                                                                                                                    var call5441 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestion", [1, 3, 1], string5436, call5437, call5439, call5440, var_suggestion);
                                                                                                                    if5420 = call5441;
                                                                                                                  }
                                                                                                                  setLineNumber(880);    // compilenode string
                                                                                                                  var string5442 = new GraceString(")");
                                                                                                                  var string5443 = new GraceString(")");
                                                                                                                  onSelf = true;
                                                                                                                  var call5444 = callmethodChecked(this, "modechange", [3], var_tokens, string5442, string5443);
                                                                                                                  setLineNumber(881);    // compilenode string
                                                                                                                  var string5445 = new GraceString("o");
                                                                                                                  var string5446 = new GraceString("++");
                                                                                                                  onSelf = true;
                                                                                                                  var call5447 = callmethodChecked(this, "modechange", [3], var_tokens, string5445, string5446);
                                                                                                                  setLineNumber(882);    // compilenode string
                                                                                                                  var string5448 = new GraceString("\"");
                                                                                                                  var_newmode = string5448;
                                                                                                                  setLineNumber(883);    // compilenode identifier
                                                                                                                  var_inStr = GraceTrue;
                                                                                                                  setLineNumber(884);    // compilenode identifier
                                                                                                                  var diff5451 = callmethodChecked(var_interpdepth, "-", [1], new GraceNum(1));
                                                                                                                  var_interpdepth = diff5451;
                                                                                                                  if5415 = GraceDone;
                                                                                                                }
                                                                                                                if5411 = if5415;
                                                                                                              }
                                                                                                              setLineNumber(887);    // compilenode identifier
                                                                                                              var_mode = var_newmode;
                                                                                                              var if5452 = GraceDone;
                                                                                                              setLineNumber(888);    // compilenode identifier
                                                                                                              if (Grace_isTrue(var_inStr)) {
                                                                                                                setLineNumber(892);    // compilenode string
                                                                                                                var string5453 = new GraceString("");
                                                                                                                var_accum = string5453;
                                                                                                                if5452 = GraceDone;
                                                                                                              } else {
                                                                                                                setLineNumber(894);    // compilenode identifier
                                                                                                                var_accum = var_c;
                                                                                                                if5452 = GraceDone;
                                                                                                              }
                                                                                                              var if5454 = GraceDone;
                                                                                                              setLineNumber(896);    // compilenode identifier
                                                                                                              var call5455 = callmethodChecked(var_brackets, "match", [1], var_mode);
                                                                                                              if (Grace_isTrue(call5455)) {
                                                                                                                setLineNumber(897);    // compilenode identifier
                                                                                                                onSelf = true;
                                                                                                                var call5456 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                                                                setLineNumber(898);    // compilenode string
                                                                                                                var string5457 = new GraceString("e");
                                                                                                                var_mode = string5457;
                                                                                                                setLineNumber(899);    // compilenode identifier
                                                                                                                var_newmode = var_mode;
                                                                                                                setLineNumber(900);    // compilenode string
                                                                                                                var string5458 = new GraceString("");
                                                                                                                var_accum = string5458;
                                                                                                                if5454 = GraceDone;
                                                                                                              }
                                                                                                              if5406 = if5454;
                                                                                                            } else {
                                                                                                              var if5459 = GraceDone;
                                                                                                              setLineNumber(902);    // compilenode string
                                                                                                              var string5460 = new GraceString("\"");
                                                                                                              var opresult5463 = callmethodChecked(var_mode, "==", [1], string5460);
                                                                                                              if (Grace_isTrue(opresult5463)) {
                                                                                                                var if5464 = GraceDone;
                                                                                                                setLineNumber(903);    // compilenode string
                                                                                                                var string5465 = new GraceString("\n");
                                                                                                                var opresult5468 = callmethodChecked(var_c, "==", [1], string5465);
                                                                                                                if (Grace_isTrue(opresult5468)) {
                                                                                                                  var if5469 = GraceDone;
                                                                                                                  setLineNumber(904);    // compilenode identifier
                                                                                                                  var opresult5472 = callmethodChecked(var_interpdepth, ">", [1], new GraceNum(0));
                                                                                                                  if (Grace_isTrue(opresult5472)) {
                                                                                                                    setLineNumber(906);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5473 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                    var var_line = call5473;
                                                                                                                    setLineNumber(907);    // compilenode identifier
                                                                                                                    var call5474 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                    var call5475 = callmethodChecked(call5474, "at", [1], var_line);
                                                                                                                    var call5476 = callmethodChecked(call5475, "size", [0]);
                                                                                                                    var var_i = call5476;
                                                                                                                    setLineNumber(908);    // compilenode block
                                                                                                                    var block5477 = new GraceBlock(this, 908, 0);
                                                                                                                    block5477.real = function() {
                                                                                                                      var string5478 = new GraceString("{");
                                                                                                                      var call5480 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                      var call5481 = callmethodChecked(call5480, "at", [1], var_line);
                                                                                                                      var call5482 = callmethodChecked(call5481, "at", [1], var_i);
                                                                                                                      var opresult5484 = callmethodChecked(call5482, "\u2260", [1], string5478);
                                                                                                                      return opresult5484;
                                                                                                                    };
                                                                                                                    var block5485 = new GraceBlock(this, 908, 0);
                                                                                                                    block5485.real = function() {
                                                                                                                      setLineNumber(909);    // compilenode identifier
                                                                                                                      var diff5488 = callmethodChecked(var_i, "-", [1], new GraceNum(1));
                                                                                                                      var_i = diff5488;
                                                                                                                      var if5489 = GraceDone;
                                                                                                                      setLineNumber(910);    // compilenode identifier
                                                                                                                      var opresult5492 = callmethodChecked(var_i, "==", [1], new GraceNum(0));
                                                                                                                      if (Grace_isTrue(opresult5492)) {
                                                                                                                        setLineNumber(911);    // compilenode identifier
                                                                                                                        var diff5495 = callmethodChecked(var_line, "-", [1], new GraceNum(1));
                                                                                                                        onSelf = true;
                                                                                                                        var call5496 = callmethodChecked(this, "lineNumber:=", [1], diff5495);
                                                                                                                        setLineNumber(912);    // compilenode identifier
                                                                                                                        var call5497 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                        var call5498 = callmethodChecked(call5497, "at", [1], var_line);
                                                                                                                        var call5499 = callmethodChecked(call5498, "size", [0]);
                                                                                                                        var_i = call5499;
                                                                                                                        if5489 = GraceDone;
                                                                                                                      }
                                                                                                                      return if5489;
                                                                                                                    };
                                                                                                                    var call5500 = callmethodChecked(var_prelude, "while()do", [1, 1], block5477, block5485);
                                                                                                                    setLineNumber(915);    // compilenode array
                                                                                                                    var array5501 = new PrimitiveGraceList([]);
                                                                                                                    var var_suggestions = array5501;
                                                                                                                    setLineNumber(916);    // compilenode identifier
                                                                                                                    var call5502 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                    var call5503 = callmethodChecked(call5502, "new", [0]);
                                                                                                                    var var_suggestion = call5503;
                                                                                                                    setLineNumber(917);    // compilenode string
                                                                                                                    var string5504 = new GraceString("\\");
                                                                                                                    var call5505 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string5504, var_i, var_line);
                                                                                                                    setLineNumber(918);    // compilenode identifier
                                                                                                                    var call5506 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                    var if5507 = GraceDone;
                                                                                                                    setLineNumber(919);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5509 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                    var diff5511 = callmethodChecked(call5509, "-", [1], new GraceNum(2));
                                                                                                                    var opresult5514 = callmethodChecked(var_i, "==", [1], diff5511);
                                                                                                                    onSelf = true;
                                                                                                                    var call5516 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                    var opresult5519 = callmethodChecked(var_line, "==", [1], call5516);
                                                                                                                    var opresult5521 = callmethodChecked(opresult5519, "&&", [1], opresult5514);
                                                                                                                    if (Grace_isTrue(opresult5521)) {
                                                                                                                      setLineNumber(920);    // compilenode string
                                                                                                                      var string5522 = new GraceString("for a '{' character in a string use '\\{'.");
                                                                                                                      var call5523 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestions", [1, 2, 1], string5522, var_line, var_i, var_suggestions);
                                                                                                                      if5507 = call5523;
                                                                                                                    } else {
                                                                                                                      setLineNumber(923);    // compilenode identifier
                                                                                                                      var call5524 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                      var call5525 = callmethodChecked(call5524, "new", [0]);
                                                                                                                      var_suggestion = call5525;
                                                                                                                      setLineNumber(924);    // compilenode string
                                                                                                                      var string5526 = new GraceString("}");
                                                                                                                      var call5528 = callmethodChecked(var_accum, "size", [0]);
                                                                                                                      onSelf = true;
                                                                                                                      var call5530 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                      var diff5532 = callmethodChecked(call5530, "-", [1], call5528);
                                                                                                                      var diff5534 = callmethodChecked(diff5532, "-", [1], new GraceNum(1));
                                                                                                                      onSelf = true;
                                                                                                                      var call5535 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var call5536 = callmethodChecked(var_suggestion, "insert()atPosition()onLine", [1, 1, 1], string5526, diff5534, call5535);
                                                                                                                      setLineNumber(925);    // compilenode identifier
                                                                                                                      var call5537 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                      setLineNumber(926);    // compilenode string
                                                                                                                      var string5538 = new GraceString("a string interpolation must end with a '}'. For a '{' character in a string use '\\{'.");
                                                                                                                      setLineNumber(927);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5539 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var call5541 = callmethodChecked(var_accum, "size", [0]);
                                                                                                                      onSelf = true;
                                                                                                                      var call5543 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                      var diff5545 = callmethodChecked(call5543, "-", [1], call5541);
                                                                                                                      var diff5547 = callmethodChecked(diff5545, "-", [1], new GraceNum(1));
                                                                                                                      setLineNumber(926);    // compilenode identifier
                                                                                                                      var call5548 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestions", [1, 2, 1], string5538, call5539, diff5547, var_suggestions);
                                                                                                                      if5507 = call5548;
                                                                                                                    }
                                                                                                                    if5469 = if5507;
                                                                                                                  } else {
                                                                                                                    setLineNumber(930);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5549 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                    var call5550 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                    var call5551 = callmethodChecked(call5550, "at", [1], call5549);
                                                                                                                    var var_errorLine = call5551;
                                                                                                                    var if5552 = GraceDone;
                                                                                                                    setLineNumber(931);    // compilenode call
                                                                                                                    onSelf = true;
                                                                                                                    var call5554 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                    var opresult5556 = callmethodChecked(call5554, "+", [1], new GraceNum(1));
                                                                                                                    var call5558 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                    var call5559 = callmethodChecked(call5558, "size", [0]);
                                                                                                                    var opresult5561 = callmethodChecked(call5559, "\u2265", [1], opresult5556);
                                                                                                                    if (Grace_isTrue(opresult5561)) {
                                                                                                                      setLineNumber(932);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5563 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var opresult5565 = callmethodChecked(call5563, "+", [1], new GraceNum(1));
                                                                                                                      var call5566 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                      var call5567 = callmethodChecked(call5566, "at", [1], opresult5565);
                                                                                                                      if5552 = call5567;
                                                                                                                    } else {
                                                                                                                      setLineNumber(934);    // compilenode string
                                                                                                                      var string5568 = new GraceString("");
                                                                                                                      if5552 = string5568;
                                                                                                                    }
                                                                                                                    var var_nextLine = if5552;
                                                                                                                    setLineNumber(937);    // compilenode num
                                                                                                                    var var_i = new GraceNum(1);
                                                                                                                    setLineNumber(938);    // compilenode num
                                                                                                                    var var_count = new GraceNum(0);
                                                                                                                    setLineNumber(939);    // compilenode block
                                                                                                                    var block5569 = new GraceBlock(this, 939, 0);
                                                                                                                    block5569.real = function() {
                                                                                                                      var call5570 = callmethodChecked(var_nextLine, "size", [0]);
                                                                                                                      var opresult5573 = callmethodChecked(var_i, "\u2264", [1], call5570);
                                                                                                                      return opresult5573;
                                                                                                                    };
                                                                                                                    var block5574 = new GraceBlock(this, 939, 0);
                                                                                                                    block5574.real = function() {
                                                                                                                      var if5575 = GraceDone;
                                                                                                                      setLineNumber(940);    // compilenode string
                                                                                                                      var string5576 = new GraceString("\"");
                                                                                                                      var call5578 = callmethodChecked(var_nextLine, "at", [1], var_i);
                                                                                                                      var opresult5580 = callmethodChecked(call5578, "==", [1], string5576);
                                                                                                                      if (Grace_isTrue(opresult5580)) {
                                                                                                                        var opresult5583 = callmethodChecked(var_count, "+", [1], new GraceNum(1));
                                                                                                                        var_count = opresult5583;
                                                                                                                        if5575 = GraceDone;
                                                                                                                      } else {
                                                                                                                        var if5584 = GraceDone;
                                                                                                                        setLineNumber(941);    // compilenode string
                                                                                                                        var string5585 = new GraceString("\\");
                                                                                                                        var call5587 = callmethodChecked(var_nextLine, "at", [1], var_i);
                                                                                                                        var opresult5589 = callmethodChecked(call5587, "==", [1], string5585);
                                                                                                                        if (Grace_isTrue(opresult5589)) {
                                                                                                                          var opresult5592 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                                                                                          var_i = opresult5592;
                                                                                                                          if5584 = GraceDone;
                                                                                                                        }
                                                                                                                        if5575 = if5584;
                                                                                                                      }
                                                                                                                      setLineNumber(942);    // compilenode identifier
                                                                                                                      var opresult5595 = callmethodChecked(var_i, "+", [1], new GraceNum(1));
                                                                                                                      var_i = opresult5595;
                                                                                                                      return GraceDone;
                                                                                                                    };
                                                                                                                    var call5596 = callmethodChecked(var_prelude, "while()do", [1, 1], block5569, block5574);
                                                                                                                    var if5597 = GraceDone;
                                                                                                                    setLineNumber(944);    // compilenode identifier
                                                                                                                    var modulus5601 = callmethodChecked(var_count, "%", [1], new GraceNum(2));
                                                                                                                    var opresult5603 = callmethodChecked(modulus5601, "==", [1], new GraceNum(1));
                                                                                                                    if (Grace_isTrue(opresult5603)) {
                                                                                                                      setLineNumber(945);    // compilenode array
                                                                                                                      var array5604 = new PrimitiveGraceList([]);
                                                                                                                      var var_suggestions = array5604;
                                                                                                                      setLineNumber(946);    // compilenode identifier
                                                                                                                      var call5605 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                      var call5606 = callmethodChecked(call5605, "new", [0]);
                                                                                                                      var var_suggestion = call5606;
                                                                                                                      setLineNumber(947);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5607 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var opresult5610 = callmethodChecked(var_errorLine, "++", [1], var_nextLine);
                                                                                                                      var call5611 = callmethodChecked(var_suggestion, "addLine", [2], call5607, opresult5610);
                                                                                                                      setLineNumber(948);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5613 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var opresult5615 = callmethodChecked(call5613, "+", [1], new GraceNum(1));
                                                                                                                      var string5616 = new GraceString("");
                                                                                                                      var call5617 = callmethodChecked(var_suggestion, "addLine", [2], opresult5615, string5616);
                                                                                                                      setLineNumber(949);    // compilenode identifier
                                                                                                                      var call5618 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                      setLineNumber(950);    // compilenode identifier
                                                                                                                      var call5619 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                      var call5620 = callmethodChecked(call5619, "new", [0]);
                                                                                                                      var_suggestion = call5620;
                                                                                                                      setLineNumber(951);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5621 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var string5622 = new GraceString("\"");
                                                                                                                      var opresult5625 = callmethodChecked(var_errorLine, "++", [1], string5622);
                                                                                                                      var call5626 = callmethodChecked(var_suggestion, "addLine", [2], call5621, opresult5625);
                                                                                                                      setLineNumber(952);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5628 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var opresult5630 = callmethodChecked(call5628, "+", [1], new GraceNum(1));
                                                                                                                      var string5632 = new GraceString("    ++ \"");
                                                                                                                      var opresult5634 = callmethodChecked(string5632, "++", [1], var_nextLine);
                                                                                                                      var call5635 = callmethodChecked(var_suggestion, "addLine", [2], opresult5630, opresult5634);
                                                                                                                      setLineNumber(953);    // compilenode identifier
                                                                                                                      var call5636 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                      setLineNumber(954);    // compilenode identifier
                                                                                                                      var call5637 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                      var call5638 = callmethodChecked(call5637, "new", [0]);
                                                                                                                      var_suggestion = call5638;
                                                                                                                      setLineNumber(955);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5639 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var string5641 = new GraceString("\\n");
                                                                                                                      var opresult5644 = callmethodChecked(var_errorLine, "++", [1], string5641);
                                                                                                                      var opresult5646 = callmethodChecked(opresult5644, "++", [1], var_nextLine);
                                                                                                                      var call5647 = callmethodChecked(var_suggestion, "addLine", [2], call5639, opresult5646);
                                                                                                                      setLineNumber(956);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5649 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var opresult5651 = callmethodChecked(call5649, "+", [1], new GraceNum(1));
                                                                                                                      var string5652 = new GraceString("");
                                                                                                                      var call5653 = callmethodChecked(var_suggestion, "addLine", [2], opresult5651, string5652);
                                                                                                                      setLineNumber(957);    // compilenode identifier
                                                                                                                      var call5654 = callmethodChecked(var_suggestions, "push", [1], var_suggestion);
                                                                                                                      setLineNumber(958);    // compilenode string
                                                                                                                      var string5655 = new GraceString("a string must be terminated by a \" before the end of the line. To insert a newline in a string, use '\\n'. To split a string over multiple lines, use '++' to join strings together.");
                                                                                                                      setLineNumber(959);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5656 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      onSelf = true;
                                                                                                                      var call5657 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                      onSelf = true;
                                                                                                                      var call5658 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                      setLineNumber(958);    // compilenode identifier
                                                                                                                      var call5659 = callmethodChecked(var_errormessages, "syntaxError()atRange()withSuggestions", [1, 3, 1], string5655, call5656, call5657, call5658, var_suggestions);
                                                                                                                      if5597 = call5659;
                                                                                                                    } else {
                                                                                                                      setLineNumber(962);    // compilenode identifier
                                                                                                                      var call5660 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                                      var call5661 = callmethodChecked(call5660, "new", [0]);
                                                                                                                      var var_suggestion = call5661;
                                                                                                                      setLineNumber(963);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5662 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      var string5663 = new GraceString("\"");
                                                                                                                      var opresult5666 = callmethodChecked(var_errorLine, "++", [1], string5663);
                                                                                                                      var call5667 = callmethodChecked(var_suggestion, "addLine", [2], call5662, opresult5666);
                                                                                                                      setLineNumber(965);    // compilenode string
                                                                                                                      var string5668 = new GraceString("by a \" before the end of the line.");
                                                                                                                      setLineNumber(964);    // compilenode string
                                                                                                                      var string5670 = new GraceString("a string must be terminated ");
                                                                                                                      var opresult5672 = callmethodChecked(string5670, "++", [1], string5668);
                                                                                                                      setLineNumber(966);    // compilenode call
                                                                                                                      onSelf = true;
                                                                                                                      var call5673 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                                      onSelf = true;
                                                                                                                      var call5674 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                      setLineNumber(964);    // compilenode identifier
                                                                                                                      var call5675 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], opresult5672, call5673, call5674, var_suggestion);
                                                                                                                      if5597 = call5675;
                                                                                                                    }
                                                                                                                    if5469 = if5597;
                                                                                                                  }
                                                                                                                  if5464 = if5469;
                                                                                                                }
                                                                                                                var if5676 = GraceDone;
                                                                                                                setLineNumber(971);    // compilenode identifier
                                                                                                                if (Grace_isTrue(var_escaped)) {
                                                                                                                  var if5677 = GraceDone;
                                                                                                                  setLineNumber(972);    // compilenode string
                                                                                                                  var string5678 = new GraceString("n");
                                                                                                                  var opresult5681 = callmethodChecked(var_c, "==", [1], string5678);
                                                                                                                  if (Grace_isTrue(opresult5681)) {
                                                                                                                    setLineNumber(974);    // compilenode string
                                                                                                                    var string5682 = new GraceString("\n");
                                                                                                                    var opresult5685 = callmethodChecked(var_accum, "++", [1], string5682);
                                                                                                                    var_accum = opresult5685;
                                                                                                                    if5677 = GraceDone;
                                                                                                                  } else {
                                                                                                                    var if5686 = GraceDone;
                                                                                                                    setLineNumber(975);    // compilenode string
                                                                                                                    var string5687 = new GraceString("u");
                                                                                                                    var opresult5690 = callmethodChecked(var_c, "==", [1], string5687);
                                                                                                                    if (Grace_isTrue(opresult5690)) {
                                                                                                                      setLineNumber(978);    // compilenode num
                                                                                                                      var_unichars = new GraceNum(4);
                                                                                                                      setLineNumber(979);    // compilenode num
                                                                                                                      var_codepoint = new GraceNum(0);
                                                                                                                      if5686 = GraceDone;
                                                                                                                    } else {
                                                                                                                      var if5691 = GraceDone;
                                                                                                                      setLineNumber(980);    // compilenode string
                                                                                                                      var string5692 = new GraceString("U");
                                                                                                                      var opresult5695 = callmethodChecked(var_c, "==", [1], string5692);
                                                                                                                      if (Grace_isTrue(opresult5695)) {
                                                                                                                        setLineNumber(983);    // compilenode num
                                                                                                                        var_unichars = new GraceNum(6);
                                                                                                                        setLineNumber(984);    // compilenode num
                                                                                                                        var_codepoint = new GraceNum(0);
                                                                                                                        if5691 = GraceDone;
                                                                                                                      } else {
                                                                                                                        var if5696 = GraceDone;
                                                                                                                        setLineNumber(985);    // compilenode string
                                                                                                                        var string5697 = new GraceString("t");
                                                                                                                        var opresult5700 = callmethodChecked(var_c, "==", [1], string5697);
                                                                                                                        if (Grace_isTrue(opresult5700)) {
                                                                                                                          setLineNumber(987);    // compilenode string
                                                                                                                          var string5701 = new GraceString("\u0009");
                                                                                                                          var opresult5704 = callmethodChecked(var_accum, "++", [1], string5701);
                                                                                                                          var_accum = opresult5704;
                                                                                                                          if5696 = GraceDone;
                                                                                                                        } else {
                                                                                                                          var if5705 = GraceDone;
                                                                                                                          setLineNumber(988);    // compilenode string
                                                                                                                          var string5706 = new GraceString("r");
                                                                                                                          var opresult5709 = callmethodChecked(var_c, "==", [1], string5706);
                                                                                                                          if (Grace_isTrue(opresult5709)) {
                                                                                                                            setLineNumber(990);    // compilenode string
                                                                                                                            var string5710 = new GraceString("\u000d");
                                                                                                                            var opresult5713 = callmethodChecked(var_accum, "++", [1], string5710);
                                                                                                                            var_accum = opresult5713;
                                                                                                                            if5705 = GraceDone;
                                                                                                                          } else {
                                                                                                                            var if5714 = GraceDone;
                                                                                                                            setLineNumber(991);    // compilenode string
                                                                                                                            var string5715 = new GraceString("b");
                                                                                                                            var opresult5718 = callmethodChecked(var_c, "==", [1], string5715);
                                                                                                                            if (Grace_isTrue(opresult5718)) {
                                                                                                                              setLineNumber(993);    // compilenode string
                                                                                                                              var string5719 = new GraceString("\u0008");
                                                                                                                              var opresult5722 = callmethodChecked(var_accum, "++", [1], string5719);
                                                                                                                              var_accum = opresult5722;
                                                                                                                              if5714 = GraceDone;
                                                                                                                            } else {
                                                                                                                              var if5723 = GraceDone;
                                                                                                                              setLineNumber(994);    // compilenode string
                                                                                                                              var string5724 = new GraceString("l");
                                                                                                                              var opresult5727 = callmethodChecked(var_c, "==", [1], string5724);
                                                                                                                              if (Grace_isTrue(opresult5727)) {
                                                                                                                                setLineNumber(996);    // compilenode string
                                                                                                                                var string5728 = new GraceString("\u2028");
                                                                                                                                var opresult5731 = callmethodChecked(var_accum, "++", [1], string5728);
                                                                                                                                var_accum = opresult5731;
                                                                                                                                if5723 = GraceDone;
                                                                                                                              } else {
                                                                                                                                var if5732 = GraceDone;
                                                                                                                                setLineNumber(997);    // compilenode string
                                                                                                                                var string5733 = new GraceString("f");
                                                                                                                                var opresult5736 = callmethodChecked(var_c, "==", [1], string5733);
                                                                                                                                if (Grace_isTrue(opresult5736)) {
                                                                                                                                  setLineNumber(999);    // compilenode string
                                                                                                                                  var string5737 = new GraceString("\u000c");
                                                                                                                                  var opresult5740 = callmethodChecked(var_accum, "++", [1], string5737);
                                                                                                                                  var_accum = opresult5740;
                                                                                                                                  if5732 = GraceDone;
                                                                                                                                } else {
                                                                                                                                  var if5741 = GraceDone;
                                                                                                                                  setLineNumber(1000);    // compilenode string
                                                                                                                                  var string5742 = new GraceString("e");
                                                                                                                                  var opresult5745 = callmethodChecked(var_c, "==", [1], string5742);
                                                                                                                                  if (Grace_isTrue(opresult5745)) {
                                                                                                                                    setLineNumber(1002);    // compilenode string
                                                                                                                                    var string5746 = new GraceString("\u001b");
                                                                                                                                    var opresult5749 = callmethodChecked(var_accum, "++", [1], string5746);
                                                                                                                                    var_accum = opresult5749;
                                                                                                                                    if5741 = GraceDone;
                                                                                                                                  } else {
                                                                                                                                    var if5750 = GraceDone;
                                                                                                                                    setLineNumber(1003);    // compilenode string
                                                                                                                                    var string5751 = new GraceString("_");
                                                                                                                                    var opresult5754 = callmethodChecked(var_c, "==", [1], string5751);
                                                                                                                                    if (Grace_isTrue(opresult5754)) {
                                                                                                                                      setLineNumber(1005);    // compilenode string
                                                                                                                                      var string5755 = new GraceString("\u00a0");
                                                                                                                                      var opresult5758 = callmethodChecked(var_accum, "++", [1], string5755);
                                                                                                                                      var_accum = opresult5758;
                                                                                                                                      if5750 = GraceDone;
                                                                                                                                    } else {
                                                                                                                                      setLineNumber(1009);    // compilenode identifier
                                                                                                                                      var opresult5761 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                                                                                      var_accum = opresult5761;
                                                                                                                                      if5750 = GraceDone;
                                                                                                                                    }
                                                                                                                                    if5741 = if5750;
                                                                                                                                  }
                                                                                                                                  if5732 = if5741;
                                                                                                                                }
                                                                                                                                if5723 = if5732;
                                                                                                                              }
                                                                                                                              if5714 = if5723;
                                                                                                                            }
                                                                                                                            if5705 = if5714;
                                                                                                                          }
                                                                                                                          if5696 = if5705;
                                                                                                                        }
                                                                                                                        if5691 = if5696;
                                                                                                                      }
                                                                                                                      if5686 = if5691;
                                                                                                                    }
                                                                                                                    if5677 = if5686;
                                                                                                                  }
                                                                                                                  setLineNumber(1011);    // compilenode identifier
                                                                                                                  var_escaped = GraceFalse;
                                                                                                                  if5676 = GraceDone;
                                                                                                                } else {
                                                                                                                  var if5762 = GraceDone;
                                                                                                                  setLineNumber(1012);    // compilenode string
                                                                                                                  var string5763 = new GraceString("\\");
                                                                                                                  var opresult5766 = callmethodChecked(var_c, "==", [1], string5763);
                                                                                                                  if (Grace_isTrue(opresult5766)) {
                                                                                                                    setLineNumber(1014);    // compilenode identifier
                                                                                                                    var_escaped = GraceTrue;
                                                                                                                    if5762 = GraceDone;
                                                                                                                  } else {
                                                                                                                    var if5767 = GraceDone;
                                                                                                                    setLineNumber(1015);    // compilenode identifier
                                                                                                                    var opresult5770 = callmethodChecked(var_unichars, ">", [1], new GraceNum(0));
                                                                                                                    if (Grace_isTrue(opresult5770)) {
                                                                                                                      setLineNumber(1020);    // compilenode identifier
                                                                                                                      var diff5773 = callmethodChecked(var_unichars, "-", [1], new GraceNum(1));
                                                                                                                      var_unichars = diff5773;
                                                                                                                      setLineNumber(1021);    // compilenode identifier
                                                                                                                      var prod5776 = callmethodChecked(var_codepoint, "*", [1], new GraceNum(16));
                                                                                                                      var_codepoint = prod5776;
                                                                                                                      setLineNumber(1022);    // compilenode identifier
                                                                                                                      onSelf = true;
                                                                                                                      var call5777 = callmethodChecked(this, "hexdecchar", [1], var_c);
                                                                                                                      var opresult5780 = callmethodChecked(var_codepoint, "+", [1], call5777);
                                                                                                                      var_codepoint = opresult5780;
                                                                                                                      var if5781 = GraceDone;
                                                                                                                      setLineNumber(1023);    // compilenode identifier
                                                                                                                      var opresult5784 = callmethodChecked(var_unichars, "==", [1], new GraceNum(0));
                                                                                                                      if (Grace_isTrue(opresult5784)) {
                                                                                                                        setLineNumber(1026);    // compilenode identifier
                                                                                                                        var call5785 = callmethodChecked(var_unicode, "create", [1], var_codepoint);
                                                                                                                        var opresult5788 = callmethodChecked(var_accum, "++", [1], call5785);
                                                                                                                        var_accum = opresult5788;
                                                                                                                        if5781 = GraceDone;
                                                                                                                      }
                                                                                                                      if5767 = if5781;
                                                                                                                    } else {
                                                                                                                      var if5789 = GraceDone;
                                                                                                                      setLineNumber(1028);    // compilenode string
                                                                                                                      var string5790 = new GraceString("{");
                                                                                                                      var opresult5793 = callmethodChecked(var_c, "==", [1], string5790);
                                                                                                                      if (Grace_isTrue(opresult5793)) {
                                                                                                                        var if5794 = GraceDone;
                                                                                                                        setLineNumber(1029);    // compilenode identifier
                                                                                                                        var call5795 = callmethodChecked(var_interpString, "not", [0]);
                                                                                                                        if (Grace_isTrue(call5795)) {
                                                                                                                          setLineNumber(1030);    // compilenode string
                                                                                                                          var string5796 = new GraceString("(");
                                                                                                                          var string5797 = new GraceString("(");
                                                                                                                          onSelf = true;
                                                                                                                          var call5798 = callmethodChecked(this, "modechange", [3], var_tokens, string5796, string5797);
                                                                                                                          setLineNumber(1031);    // compilenode identifier
                                                                                                                          var_interpString = GraceTrue;
                                                                                                                          if5794 = GraceDone;
                                                                                                                        }
                                                                                                                        setLineNumber(1033);    // compilenode identifier
                                                                                                                        onSelf = true;
                                                                                                                        var call5799 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                                                                        setLineNumber(1034);    // compilenode string
                                                                                                                        var string5800 = new GraceString("o");
                                                                                                                        var string5801 = new GraceString("++");
                                                                                                                        onSelf = true;
                                                                                                                        var call5802 = callmethodChecked(this, "modechange", [3], var_tokens, string5800, string5801);
                                                                                                                        setLineNumber(1035);    // compilenode string
                                                                                                                        var string5803 = new GraceString("(");
                                                                                                                        var string5804 = new GraceString("(");
                                                                                                                        onSelf = true;
                                                                                                                        var call5805 = callmethodChecked(this, "modechange", [3], var_tokens, string5803, string5804);
                                                                                                                        setLineNumber(1036);    // compilenode string
                                                                                                                        var string5806 = new GraceString("n");
                                                                                                                        var_mode = string5806;
                                                                                                                        setLineNumber(1037);    // compilenode string
                                                                                                                        var string5807 = new GraceString("n");
                                                                                                                        var_newmode = string5807;
                                                                                                                        setLineNumber(1038);    // compilenode string
                                                                                                                        var string5808 = new GraceString("");
                                                                                                                        var_accum = string5808;
                                                                                                                        setLineNumber(1039);    // compilenode identifier
                                                                                                                        var_inStr = GraceFalse;
                                                                                                                        setLineNumber(1040);    // compilenode identifier
                                                                                                                        var opresult5811 = callmethodChecked(var_interpdepth, "+", [1], new GraceNum(1));
                                                                                                                        var_interpdepth = opresult5811;
                                                                                                                        if5789 = GraceDone;
                                                                                                                      } else {
                                                                                                                        setLineNumber(1042);    // compilenode identifier
                                                                                                                        var opresult5814 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                                                                        var_accum = opresult5814;
                                                                                                                        if5789 = GraceDone;
                                                                                                                      }
                                                                                                                      if5767 = if5789;
                                                                                                                    }
                                                                                                                    if5762 = if5767;
                                                                                                                  }
                                                                                                                  if5676 = if5762;
                                                                                                                }
                                                                                                                if5459 = if5676;
                                                                                                              } else {
                                                                                                                var if5815 = GraceDone;
                                                                                                                setLineNumber(1044);    // compilenode string
                                                                                                                var string5816 = new GraceString("\n");
                                                                                                                var opresult5819 = callmethodChecked(var_c, "==", [1], string5816);
                                                                                                                if (Grace_isTrue(opresult5819)) {
                                                                                                                  setLineNumber(1045);    // compilenode identifier
                                                                                                                  var_newlineFound = GraceTrue;
                                                                                                                  var if5820 = GraceDone;
                                                                                                                  setLineNumber(1046);    // compilenode string
                                                                                                                  var string5821 = new GraceString("q");
                                                                                                                  var opresult5824 = callmethodChecked(var_mode, "==", [1], string5821);
                                                                                                                  if (Grace_isTrue(opresult5824)) {
                                                                                                                    setLineNumber(1047);    // compilenode identifier
                                                                                                                    var opresult5827 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                                                                    var_accum = opresult5827;
                                                                                                                    if5820 = GraceDone;
                                                                                                                  } else {
                                                                                                                    setLineNumber(1050);    // compilenode identifier
                                                                                                                    onSelf = true;
                                                                                                                    var call5828 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                                                                    setLineNumber(1051);    // compilenode string
                                                                                                                    var string5829 = new GraceString("d");
                                                                                                                    var_mode = string5829;
                                                                                                                    setLineNumber(1052);    // compilenode string
                                                                                                                    var string5830 = new GraceString("d");
                                                                                                                    var_newmode = string5830;
                                                                                                                    setLineNumber(1053);    // compilenode string
                                                                                                                    var string5831 = new GraceString("");
                                                                                                                    var_accum = string5831;
                                                                                                                    if5820 = GraceDone;
                                                                                                                  }
                                                                                                                  if5815 = if5820;
                                                                                                                } else {
                                                                                                                  setLineNumber(1056);    // compilenode identifier
                                                                                                                  var opresult5834 = callmethodChecked(var_accum, "++", [1], var_c);
                                                                                                                  var_accum = opresult5834;
                                                                                                                  if5815 = GraceDone;
                                                                                                                }
                                                                                                                if5459 = if5815;
                                                                                                              }
                                                                                                              if5406 = if5459;
                                                                                                            }
                                                                                                            var if5835 = GraceDone;
                                                                                                            setLineNumber(1058);    // compilenode string
                                                                                                            var string5836 = new GraceString("...");
                                                                                                            var opresult5839 = callmethodChecked(var_accum, "==", [1], string5836);
                                                                                                            if (Grace_isTrue(opresult5839)) {
                                                                                                              var if5840 = GraceDone;
                                                                                                              setLineNumber(1059);    // compilenode string
                                                                                                              var string5841 = new GraceString("o");
                                                                                                              var opresult5844 = callmethodChecked(var_mode, "==", [1], string5841);
                                                                                                              if (Grace_isTrue(opresult5844)) {
                                                                                                                setLineNumber(1060);    // compilenode string
                                                                                                                var string5845 = new GraceString("i");
                                                                                                                var string5846 = new GraceString("...");
                                                                                                                onSelf = true;
                                                                                                                var call5847 = callmethodChecked(this, "modechange", [3], var_tokens, string5845, string5846);
                                                                                                                setLineNumber(1061);    // compilenode string
                                                                                                                var string5848 = new GraceString("n");
                                                                                                                var_newmode = string5848;
                                                                                                                setLineNumber(1062);    // compilenode identifier
                                                                                                                var_mode = var_newmode;
                                                                                                                setLineNumber(1063);    // compilenode string
                                                                                                                var string5849 = new GraceString("");
                                                                                                                var_accum = string5849;
                                                                                                                if5840 = GraceDone;
                                                                                                              }
                                                                                                              if5835 = if5840;
                                                                                                            }
                                                                                                            var if5850 = GraceDone;
                                                                                                            setLineNumber(1066);    // compilenode identifier
                                                                                                            if (Grace_isTrue(var_newlineFound)) {
                                                                                                              setLineNumber(1068);    // compilenode identifier
                                                                                                              var_newlineFound = GraceFalse;
                                                                                                              setLineNumber(1069);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call5852 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var opresult5854 = callmethodChecked(call5852, "+", [1], new GraceNum(1));
                                                                                                              onSelf = true;
                                                                                                              var call5855 = callmethodChecked(this, "lineNumber:=", [1], opresult5854);
                                                                                                              setLineNumber(1070);    // compilenode num
                                                                                                              onSelf = true;
                                                                                                              var call5856 = callmethodChecked(this, "linePosition:=", [1], new GraceNum(0));
                                                                                                              setLineNumber(1071);    // compilenode num
                                                                                                              onSelf = true;
                                                                                                              var call5857 = callmethodChecked(this, "startPosition:=", [1], new GraceNum(1));
                                                                                                              if5850 = call5857;
                                                                                                            }
                                                                                                            return if5850;
                                                                                                          };
                                                                                                          var var_mainBlock = block4835;
                                                                                                          setLineNumber(1074);    // compilenode block
                                                                                                          var block5858 = new GraceBlock(this, 1074, 1);
                                                                                                          setLineNumber(1);    // compilenode identifier
                                                                                                          block5858.real = function(var_eachLine) {
                                                                                                            setLineNumber(1075);    // compilenode identifier
                                                                                                            var call5859 = callmethodChecked(var_eachLine, "iterator", [0]);
                                                                                                            var var_charS = call5859;
                                                                                                            setLineNumber(1076);    // compilenode block
                                                                                                            var block5860 = new GraceBlock(this, 1076, 0);
                                                                                                            block5860.real = function() {
                                                                                                              var call5861 = callmethodChecked(var_charS, "hasNext", [0]);
                                                                                                              return call5861;
                                                                                                            };
                                                                                                            var block5862 = new GraceBlock(this, 1076, 0);
                                                                                                            block5862.real = function() {
                                                                                                              setLineNumber(1077);    // compilenode identifier
                                                                                                              var call5863 = callmethodChecked(var_charS, "next", [0]);
                                                                                                              var var_ch = call5863;
                                                                                                              setLineNumber(1078);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call5865 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              var opresult5867 = callmethodChecked(call5865, "+", [1], new GraceNum(1));
                                                                                                              onSelf = true;
                                                                                                              var call5868 = callmethodChecked(this, "linePosition:=", [1], opresult5867);
                                                                                                              var if5869 = GraceDone;
                                                                                                              setLineNumber(1079);    // compilenode identifier
                                                                                                              var call5870 = callmethodChecked(var_charS, "hasNext", [0]);
                                                                                                              var block5872 = new GraceBlock(this, 1079, 0);
                                                                                                              block5872.real = function() {
                                                                                                                var string5873 = new GraceString("><![]-");
                                                                                                                var call5874 = callmethodChecked(string5873, "contains", [1], var_ch);
                                                                                                                return call5874;
                                                                                                              };
                                                                                                              var call5876 = callmethodChecked(var_inStr, "not", [0]);
                                                                                                              var opresult5878 = callmethodChecked(call5876, "&&", [1], block5872);
                                                                                                              var opresult5880 = callmethodChecked(opresult5878, "&&", [1], call5870);
                                                                                                              if (Grace_isTrue(opresult5880)) {
                                                                                                                setLineNumber(1081);    // compilenode identifier
                                                                                                                var call5881 = callmethodChecked(var_charS, "next", [0]);
                                                                                                                var var_nextCh = call5881;
                                                                                                                setLineNumber(1082);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call5883 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                var opresult5885 = callmethodChecked(call5883, "+", [1], new GraceNum(1));
                                                                                                                onSelf = true;
                                                                                                                var call5886 = callmethodChecked(this, "linePosition:=", [1], opresult5885);
                                                                                                                setLineNumber(1083);    // compilenode identifier
                                                                                                                var opresult5889 = callmethodChecked(var_ch, "++", [1], var_nextCh);
                                                                                                                var var_bigraph = opresult5889;
                                                                                                                var if5890 = GraceDone;
                                                                                                                setLineNumber(1084);    // compilenode string
                                                                                                                var string5891 = new GraceString(">=");
                                                                                                                var opresult5894 = callmethodChecked(var_bigraph, "==", [1], string5891);
                                                                                                                if (Grace_isTrue(opresult5894)) {
                                                                                                                  var string5895 = new GraceString("\u2265");
                                                                                                                  var call5896 = callmethodChecked(var_mainBlock, "apply", [1], string5895);
                                                                                                                  if5890 = call5896;
                                                                                                                } else {
                                                                                                                  var if5897 = GraceDone;
                                                                                                                  setLineNumber(1085);    // compilenode string
                                                                                                                  var string5898 = new GraceString("<=");
                                                                                                                  var opresult5901 = callmethodChecked(var_bigraph, "==", [1], string5898);
                                                                                                                  if (Grace_isTrue(opresult5901)) {
                                                                                                                    var string5902 = new GraceString("\u2264");
                                                                                                                    var call5903 = callmethodChecked(var_mainBlock, "apply", [1], string5902);
                                                                                                                    if5897 = call5903;
                                                                                                                  } else {
                                                                                                                    var if5904 = GraceDone;
                                                                                                                    setLineNumber(1086);    // compilenode string
                                                                                                                    var string5905 = new GraceString("!=");
                                                                                                                    var opresult5908 = callmethodChecked(var_bigraph, "==", [1], string5905);
                                                                                                                    if (Grace_isTrue(opresult5908)) {
                                                                                                                      var string5909 = new GraceString("\u2260");
                                                                                                                      var call5910 = callmethodChecked(var_mainBlock, "apply", [1], string5909);
                                                                                                                      if5904 = call5910;
                                                                                                                    } else {
                                                                                                                      var if5911 = GraceDone;
                                                                                                                      setLineNumber(1087);    // compilenode string
                                                                                                                      var string5912 = new GraceString("[[");
                                                                                                                      var opresult5915 = callmethodChecked(var_bigraph, "==", [1], string5912);
                                                                                                                      if (Grace_isTrue(opresult5915)) {
                                                                                                                        var string5916 = new GraceString("\u27e6");
                                                                                                                        var call5917 = callmethodChecked(var_mainBlock, "apply", [1], string5916);
                                                                                                                        if5911 = call5917;
                                                                                                                      } else {
                                                                                                                        var if5918 = GraceDone;
                                                                                                                        setLineNumber(1088);    // compilenode string
                                                                                                                        var string5919 = new GraceString("]]");
                                                                                                                        var opresult5922 = callmethodChecked(var_bigraph, "==", [1], string5919);
                                                                                                                        if (Grace_isTrue(opresult5922)) {
                                                                                                                          var string5923 = new GraceString("\u27e7");
                                                                                                                          var call5924 = callmethodChecked(var_mainBlock, "apply", [1], string5923);
                                                                                                                          if5918 = call5924;
                                                                                                                        } else {
                                                                                                                          var if5925 = GraceDone;
                                                                                                                          setLineNumber(1089);    // compilenode string
                                                                                                                          var string5926 = new GraceString("->");
                                                                                                                          var opresult5929 = callmethodChecked(var_bigraph, "==", [1], string5926);
                                                                                                                          if (Grace_isTrue(opresult5929)) {
                                                                                                                            var string5930 = new GraceString("\u2192");
                                                                                                                            var call5931 = callmethodChecked(var_mainBlock, "apply", [1], string5930);
                                                                                                                            if5925 = call5931;
                                                                                                                          } else {
                                                                                                                            setLineNumber(1091);    // compilenode call
                                                                                                                            onSelf = true;
                                                                                                                            var call5933 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                            var diff5935 = callmethodChecked(call5933, "-", [1], new GraceNum(1));
                                                                                                                            onSelf = true;
                                                                                                                            var call5936 = callmethodChecked(this, "linePosition:=", [1], diff5935);
                                                                                                                            setLineNumber(1092);    // compilenode identifier
                                                                                                                            var call5937 = callmethodChecked(var_mainBlock, "apply", [1], var_ch);
                                                                                                                            setLineNumber(1093);    // compilenode call
                                                                                                                            onSelf = true;
                                                                                                                            var call5939 = callmethodChecked(this, "linePosition", [0]);
                                                                                                                            var opresult5941 = callmethodChecked(call5939, "+", [1], new GraceNum(1));
                                                                                                                            onSelf = true;
                                                                                                                            var call5942 = callmethodChecked(this, "linePosition:=", [1], opresult5941);
                                                                                                                            setLineNumber(1094);    // compilenode identifier
                                                                                                                            var call5943 = callmethodChecked(var_mainBlock, "apply", [1], var_nextCh);
                                                                                                                            if5925 = call5943;
                                                                                                                          }
                                                                                                                          if5918 = if5925;
                                                                                                                        }
                                                                                                                        if5911 = if5918;
                                                                                                                      }
                                                                                                                      if5904 = if5911;
                                                                                                                    }
                                                                                                                    if5897 = if5904;
                                                                                                                  }
                                                                                                                  if5890 = if5897;
                                                                                                                }
                                                                                                                if5869 = if5890;
                                                                                                              } else {
                                                                                                                var if5944 = GraceDone;
                                                                                                                setLineNumber(1096);    // compilenode block
                                                                                                                var block5945 = new GraceBlock(this, 1096, 0);
                                                                                                                block5945.real = function() {
                                                                                                                  var string5946 = new GraceString("dn");
                                                                                                                  var call5947 = callmethodChecked(string5946, "contains", [1], var_mode);
                                                                                                                  return call5947;
                                                                                                                };
                                                                                                                var string5949 = new GraceString(" ");
                                                                                                                var opresult5952 = callmethodChecked(var_ch, "==", [1], string5949);
                                                                                                                var opresult5954 = callmethodChecked(opresult5952, "&&", [1], block5945);
                                                                                                                var call5955 = callmethodChecked(opresult5954, "not", [0]);
                                                                                                                if (Grace_isTrue(call5955)) {
                                                                                                                  setLineNumber(1097);    // compilenode identifier
                                                                                                                  var call5956 = callmethodChecked(var_mainBlock, "apply", [1], var_ch);
                                                                                                                  if5944 = call5956;
                                                                                                                }
                                                                                                                if5869 = if5944;
                                                                                                              }
                                                                                                              return if5869;
                                                                                                            };
                                                                                                            var call5957 = callmethodChecked(var_prelude, "while()do", [1, 1], block5860, block5862);
                                                                                                            setLineNumber(1100);    // compilenode string
                                                                                                            var string5958 = new GraceString("\n");
                                                                                                            var call5959 = callmethodChecked(var_mainBlock, "apply", [1], string5958);
                                                                                                            return call5959;
                                                                                                          };
                                                                                                          var call5960 = callmethodChecked(var_prelude, "for()do", [1, 1], var_inputLines, block5858);
                                                                                                          setLineNumber(1102);    // compilenode call
                                                                                                          onSelf = true;
                                                                                                          var call5962 = callmethodChecked(this, "linePosition", [0]);
                                                                                                          var opresult5964 = callmethodChecked(call5962, "+", [1], new GraceNum(1));
                                                                                                          onSelf = true;
                                                                                                          var call5965 = callmethodChecked(this, "linePosition:=", [1], opresult5964);
                                                                                                          var if5966 = GraceDone;
                                                                                                          setLineNumber(1103);    // compilenode identifier
                                                                                                          if (Grace_isTrue(var_inStr)) {
                                                                                                            var if5967 = GraceDone;
                                                                                                            setLineNumber(1104);    // compilenode string
                                                                                                            var string5968 = new GraceString("\"");
                                                                                                            var opresult5971 = callmethodChecked(var_mode, "==", [1], string5968);
                                                                                                            if (Grace_isTrue(opresult5971)) {
                                                                                                              setLineNumber(1105);    // compilenode identifier
                                                                                                              var call5972 = callmethodChecked(var_errormessages, "suggestion", [0]);
                                                                                                              var call5973 = callmethodChecked(call5972, "new", [0]);
                                                                                                              var var_suggestion = call5973;
                                                                                                              setLineNumber(1106);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call5974 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var string5975 = new GraceString("\"");
                                                                                                              onSelf = true;
                                                                                                              var call5977 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              var call5978 = callmethodChecked(var_util, "lines", [0]);
                                                                                                              var call5979 = callmethodChecked(call5978, "at", [1], call5977);
                                                                                                              var opresult5981 = callmethodChecked(call5979, "++", [1], string5975);
                                                                                                              var call5982 = callmethodChecked(var_suggestion, "addLine", [2], call5974, opresult5981);
                                                                                                              setLineNumber(1107);    // compilenode string
                                                                                                              var string5983 = new GraceString("a string must be terminated with a \" before the end of the line.");
                                                                                                              setLineNumber(1108);    // compilenode call
                                                                                                              onSelf = true;
                                                                                                              var call5984 = callmethodChecked(this, "lineNumber", [0]);
                                                                                                              onSelf = true;
                                                                                                              var call5985 = callmethodChecked(this, "linePosition", [0]);
                                                                                                              setLineNumber(1107);    // compilenode identifier
                                                                                                              var call5986 = callmethodChecked(var_errormessages, "syntaxError()atPosition()withSuggestion", [1, 2, 1], string5983, call5984, call5985, var_suggestion);
                                                                                                              if5967 = call5986;
                                                                                                            } else {
                                                                                                              var if5987 = GraceDone;
                                                                                                              setLineNumber(1109);    // compilenode string
                                                                                                              var string5988 = new GraceString("q");
                                                                                                              var opresult5991 = callmethodChecked(var_mode, "==", [1], string5988);
                                                                                                              if (Grace_isTrue(opresult5991)) {
                                                                                                                setLineNumber(1111);    // compilenode string
                                                                                                                var string5992 = new GraceString(" and unclosed at end of input.");
                                                                                                                onSelf = true;
                                                                                                                var call5994 = callmethodChecked(this, "startLine", [0]);
                                                                                                                var string5996 = new GraceString("String opened on line ");
                                                                                                                var opresult5998 = callmethodChecked(string5996, "++", [1], call5994);
                                                                                                                var opresult6000 = callmethodChecked(opresult5998, "++", [1], string5992);
                                                                                                                setLineNumber(1110);    // compilenode string
                                                                                                                var string6002 = new GraceString("a multi-line string must end with a '\u203a'.\n");
                                                                                                                var opresult6004 = callmethodChecked(string6002, "++", [1], opresult6000);
                                                                                                                setLineNumber(1112);    // compilenode call
                                                                                                                onSelf = true;
                                                                                                                var call6005 = callmethodChecked(this, "startLine", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call6006 = callmethodChecked(this, "stringStart", [0]);
                                                                                                                onSelf = true;
                                                                                                                var call6007 = callmethodChecked(this, "startLine", [0]);
                                                                                                                var call6008 = callmethodChecked(var_util, "lines", [0]);
                                                                                                                var call6009 = callmethodChecked(call6008, "at", [1], call6007);
                                                                                                                var call6010 = callmethodChecked(call6009, "size", [0]);
                                                                                                                setLineNumber(1110);    // compilenode identifier
                                                                                                                var call6011 = callmethodChecked(var_errormessages, "syntaxError()atRange", [1, 3], opresult6004, call6005, call6006, call6010);
                                                                                                                if5987 = call6011;
                                                                                                              }
                                                                                                              if5967 = if5987;
                                                                                                            }
                                                                                                            if5966 = if5967;
                                                                                                          }
                                                                                                          setLineNumber(1115);    // compilenode identifier
                                                                                                          onSelf = true;
                                                                                                          var call6012 = callmethodChecked(this, "modechange", [3], var_tokens, var_mode, var_accum);
                                                                                                          setLineNumber(1116);    // compilenode call
                                                                                                          onSelf = true;
                                                                                                          var call6013 = callmethodChecked(this, "eofToken", [0]);
                                                                                                          var call6014 = callmethodChecked(var_tokens, "push", [1], call6013);
                                                                                                          setLineNumber(1117);    // compilenode identifier
                                                                                                          return var_tokens;
                                                                                                        };
                                                                                                        func4639.paramCounts = [1];
                                                                                                        obj3022.methods["lexinput"] = func4639;
                                                                                                        func4639.definitionLine = 561;
                                                                                                        func4639.definitionModule = "lexer";
                                                                                                        setLineNumber(40);    // compilenode num
                                                                                                        obj3022.data["lineNumber"] = new GraceNum(1);
                                                                                                        var reader_lexer_lineNumber6015 = function() {
                                                                                                          return this.data["lineNumber"];
                                                                                                        };
                                                                                                        obj3022.methods["lineNumber"] = reader_lexer_lineNumber6015;
                                                                                                        obj3022.data["lineNumber"] = new GraceNum(1);
                                                                                                        var writer_lexer_lineNumber6015 = function(argcv, o) {
                                                                                                          this.data["lineNumber"] = o;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        obj3022.methods["lineNumber:="] = writer_lexer_lineNumber6015;
                                                                                                        reader_lexer_lineNumber6015.confidential = true;
                                                                                                        writer_lexer_lineNumber6015.confidential = true;
                                                                                                        obj3022.mutable = true;
                                                                                                        setLineNumber(41);    // compilenode num
                                                                                                        obj3022.data["linePosition"] = new GraceNum(0);
                                                                                                        var reader_lexer_linePosition6016 = function() {
                                                                                                          return this.data["linePosition"];
                                                                                                        };
                                                                                                        obj3022.methods["linePosition"] = reader_lexer_linePosition6016;
                                                                                                        obj3022.data["linePosition"] = new GraceNum(0);
                                                                                                        var writer_lexer_linePosition6016 = function(argcv, o) {
                                                                                                          this.data["linePosition"] = o;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        obj3022.methods["linePosition:="] = writer_lexer_linePosition6016;
                                                                                                        reader_lexer_linePosition6016.confidential = true;
                                                                                                        writer_lexer_linePosition6016.confidential = true;
                                                                                                        obj3022.mutable = true;
                                                                                                        setLineNumber(42);    // compilenode num
                                                                                                        obj3022.data["startPosition"] = new GraceNum(1);
                                                                                                        var reader_lexer_startPosition6017 = function() {
                                                                                                          return this.data["startPosition"];
                                                                                                        };
                                                                                                        obj3022.methods["startPosition"] = reader_lexer_startPosition6017;
                                                                                                        obj3022.data["startPosition"] = new GraceNum(1);
                                                                                                        var writer_lexer_startPosition6017 = function(argcv, o) {
                                                                                                          this.data["startPosition"] = o;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        obj3022.methods["startPosition:="] = writer_lexer_startPosition6017;
                                                                                                        reader_lexer_startPosition6017.confidential = true;
                                                                                                        writer_lexer_startPosition6017.confidential = true;
                                                                                                        obj3022.mutable = true;
                                                                                                        setLineNumber(43);    // compilenode num
                                                                                                        obj3022.data["indentLevel"] = new GraceNum(0);
                                                                                                        var reader_lexer_indentLevel6018 = function() {
                                                                                                          return this.data["indentLevel"];
                                                                                                        };
                                                                                                        obj3022.methods["indentLevel"] = reader_lexer_indentLevel6018;
                                                                                                        obj3022.data["indentLevel"] = new GraceNum(0);
                                                                                                        var writer_lexer_indentLevel6018 = function(argcv, o) {
                                                                                                          this.data["indentLevel"] = o;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        obj3022.methods["indentLevel:="] = writer_lexer_indentLevel6018;
                                                                                                        reader_lexer_indentLevel6018.confidential = true;
                                                                                                        writer_lexer_indentLevel6018.confidential = true;
                                                                                                        obj3022.mutable = true;
                                                                                                        setLineNumber(44);    // compilenode num
                                                                                                        obj3022.data["startLine"] = new GraceNum(1);
                                                                                                        var reader_lexer_startLine6019 = function() {
                                                                                                          return this.data["startLine"];
                                                                                                        };
                                                                                                        obj3022.methods["startLine"] = reader_lexer_startLine6019;
                                                                                                        obj3022.data["startLine"] = new GraceNum(1);
                                                                                                        var writer_lexer_startLine6019 = function(argcv, o) {
                                                                                                          this.data["startLine"] = o;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        obj3022.methods["startLine:="] = writer_lexer_startLine6019;
                                                                                                        reader_lexer_startLine6019.confidential = true;
                                                                                                        writer_lexer_startLine6019.confidential = true;
                                                                                                        obj3022.mutable = true;
                                                                                                        obj3022.data["stringStart"] = undefined;
                                                                                                        var reader_lexer_stringStart6020 = function() {
                                                                                                          return this.data["stringStart"];
                                                                                                        };
                                                                                                        obj3022.methods["stringStart"] = reader_lexer_stringStart6020;
                                                                                                        obj3022.data["stringStart"] = undefined;
                                                                                                        var writer_lexer_stringStart6020 = function(argcv, o) {
                                                                                                          this.data["stringStart"] = o;
                                                                                                          return GraceDone;
                                                                                                        };
                                                                                                        obj3022.methods["stringStart:="] = writer_lexer_stringStart6020;
                                                                                                        reader_lexer_stringStart6020.confidential = true;
                                                                                                        writer_lexer_stringStart6020.confidential = true;
                                                                                                        obj3022.mutable = true;
                                                                                                        superDepth = origSuperDepth;
                                                                                                      };
                                                                                                      obj_init_3022.apply(inheritingObject, []);
                                                                                                      return obj3022;
                                                                                                      };
                                                                                                      this.methods["new()object"] = func3021;
                                                                                                    setLineNumber(7);    // compilenode identifier
                                                                                                    var call6021 = callmethodChecked(var_map, "new", [0]);
                                                                                                    var var_keywords = call6021;
                                                                                                    var func6022 = function(argcv) {    // method keywords
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var curarg = 1;
                                                                                                      if (argcv[0] !== 0)
                                                                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for keywords"));
                                                                                                      setModuleName("lexer");
                                                                                                      // keywords is a simple accessor - elide try ... catch
                                                                                                      return var_keywords;
                                                                                                    };
                                                                                                    func6022.paramCounts = [0];
                                                                                                    this.methods["keywords"] = func6022;
                                                                                                    func6022.definitionLine = 7;
                                                                                                    func6022.definitionModule = "lexer";
                                                                                                    this.methods["keywords"].debug = "def";
                                                                                                    setLineNumber(8);    // compilenode string
                                                                                                    var string6023 = new GraceString("alias");
                                                                                                    var call6024 = callmethodChecked(var_keywords, "put", [2], string6023, GraceTrue);
                                                                                                    setLineNumber(9);    // compilenode string
                                                                                                    var string6025 = new GraceString("class");
                                                                                                    var call6026 = callmethodChecked(var_keywords, "put", [2], string6025, GraceTrue);
                                                                                                    setLineNumber(10);    // compilenode string
                                                                                                    var string6027 = new GraceString("def");
                                                                                                    var call6028 = callmethodChecked(var_keywords, "put", [2], string6027, GraceTrue);
                                                                                                    setLineNumber(11);    // compilenode string
                                                                                                    var string6029 = new GraceString("dialect");
                                                                                                    var call6030 = callmethodChecked(var_keywords, "put", [2], string6029, GraceTrue);
                                                                                                    setLineNumber(12);    // compilenode string
                                                                                                    var string6031 = new GraceString("exclude");
                                                                                                    var call6032 = callmethodChecked(var_keywords, "put", [2], string6031, GraceTrue);
                                                                                                    setLineNumber(13);    // compilenode string
                                                                                                    var string6033 = new GraceString("factory");
                                                                                                    var call6034 = callmethodChecked(var_keywords, "put", [2], string6033, GraceTrue);
                                                                                                    setLineNumber(14);    // compilenode string
                                                                                                    var string6035 = new GraceString("import");
                                                                                                    var call6036 = callmethodChecked(var_keywords, "put", [2], string6035, GraceTrue);
                                                                                                    setLineNumber(15);    // compilenode string
                                                                                                    var string6037 = new GraceString("inherits");
                                                                                                    var call6038 = callmethodChecked(var_keywords, "put", [2], string6037, GraceTrue);
                                                                                                    setLineNumber(16);    // compilenode string
                                                                                                    var string6039 = new GraceString("inherit");
                                                                                                    var call6040 = callmethodChecked(var_keywords, "put", [2], string6039, GraceTrue);
                                                                                                    setLineNumber(17);    // compilenode string
                                                                                                    var string6041 = new GraceString("is");
                                                                                                    var call6042 = callmethodChecked(var_keywords, "put", [2], string6041, GraceTrue);
                                                                                                    setLineNumber(18);    // compilenode string
                                                                                                    var string6043 = new GraceString("method");
                                                                                                    var call6044 = callmethodChecked(var_keywords, "put", [2], string6043, GraceTrue);
                                                                                                    setLineNumber(19);    // compilenode string
                                                                                                    var string6045 = new GraceString("object");
                                                                                                    var call6046 = callmethodChecked(var_keywords, "put", [2], string6045, GraceTrue);
                                                                                                    setLineNumber(20);    // compilenode string
                                                                                                    var string6047 = new GraceString("return");
                                                                                                    var call6048 = callmethodChecked(var_keywords, "put", [2], string6047, GraceTrue);
                                                                                                    setLineNumber(21);    // compilenode string
                                                                                                    var string6049 = new GraceString("trait");
                                                                                                    var call6050 = callmethodChecked(var_keywords, "put", [2], string6049, GraceTrue);
                                                                                                    setLineNumber(22);    // compilenode string
                                                                                                    var string6051 = new GraceString("type");
                                                                                                    var call6052 = callmethodChecked(var_keywords, "put", [2], string6051, GraceTrue);
                                                                                                    setLineNumber(23);    // compilenode string
                                                                                                    var string6053 = new GraceString("use");
                                                                                                    var call6054 = callmethodChecked(var_keywords, "put", [2], string6053, GraceTrue);
                                                                                                    setLineNumber(24);    // compilenode string
                                                                                                    var string6055 = new GraceString("var");
                                                                                                    var call6056 = callmethodChecked(var_keywords, "put", [2], string6055, GraceTrue);
                                                                                                    setLineNumber(26);    // compilenode string
                                                                                                    var string6057 = new GraceString("-&|:$#\\%^@?*/+!~");
                                                                                                    var var_operatorChars = string6057;
                                                                                                    setLineNumber(7);    // compilenode method
                                                                                                    var func6058 = function(argcv) {    // method operatorChars
                                                                                                      var returnTarget = invocationCount;
                                                                                                      invocationCount++;
                                                                                                      var curarg = 1;
                                                                                                      if (argcv[0] !== 0)
                                                                                                        throw new GraceExceptionPacket(ProgrammingErrorObject, new GraceString("wrong number of arguments for operatorChars"));
                                                                                                      setModuleName("lexer");
                                                                                                      // operatorChars is a simple accessor - elide try ... catch
                                                                                                      setLineNumber(26);    // compilenode identifier
                                                                                                      return var_operatorChars;
                                                                                                    };
                                                                                                    func6058.paramCounts = [0];
                                                                                                    this.methods["operatorChars"] = func6058;
                                                                                                    func6058.definitionLine = 7;
                                                                                                    func6058.definitionModule = "lexer";
                                                                                                    this.methods["operatorChars"].debug = "def";
                                                                                                    return this;
                                                                                                  }
                                                                                                  gracecode_lexer.imports = ['errormessages', 'stringMap', 'unicode', 'util'];
                                                                                                  if (typeof gctCache !== "undefined")
                                                                                                    gctCache['lexer'] = "classes:\nconfidential:\nfresh-methods:\n new\nfresh:new:\n arrowToken\n bindToken\n colonToken\n commaToken\n commentToken\n dotToken\n eofToken\n fromBase\n hexdecchar\n identifierToken\n indentLevel\n isidentifierchar\n isoperatorchar\n keywordToken\n lBraceToken\n lGenericToken\n lParenToken\n lSquareToken\n lexfile\n lexinput\n lineNumber\n linePosition\n makeNumToken\n modechange\n multiLineStringToken\n numToken\n opToken\n rBraceToken\n rGenericToken\n rParenToken\n rSquareToken\n semicolonToken\n startLine\n startPosition\n stringStart\n stringToken\n token\nmodules:\n errormessages\n io\n stringMap\n sys\n unicode\n unixFilePath\n util\npath:\n lexer\npublic:\n new\n padl\ntypes:\n";
                                                                                                  if (typeof originalSourceLines !== "undefined") {
                                                                                                    originalSourceLines["lexer"] = [
                                                                                                      "#pragma ExtendedLineups",
                                                                                                      "import \"util\" as util",
                                                                                                      "import \"unicode\" as unicode",
                                                                                                      "import \"errormessages\" as errormessages",
                                                                                                      "import \"stringMap\" as map",
                                                                                                      "",
                                                                                                      "def keywords = map.new",
                                                                                                      "keywords.put(\"alias\", true)",
                                                                                                      "keywords.put(\"class\", true)",
                                                                                                      "keywords.put(\"def\", true)",
                                                                                                      "keywords.put(\"dialect\", true)",
                                                                                                      "keywords.put(\"exclude\", true)",
                                                                                                      "keywords.put(\"factory\", true)",
                                                                                                      "keywords.put(\"import\", true)",
                                                                                                      "keywords.put(\"inherits\", true)",
                                                                                                      "keywords.put(\"inherit\", true)",
                                                                                                      "keywords.put(\"is\", true)",
                                                                                                      "keywords.put(\"method\", true)",
                                                                                                      "keywords.put(\"object\", true)",
                                                                                                      "keywords.put(\"return\", true)",
                                                                                                      "keywords.put(\"trait\", true)",
                                                                                                      "keywords.put(\"type\", true)",
                                                                                                      "keywords.put(\"use\", true)",
                                                                                                      "keywords.put(\"var\", true)",
                                                                                                      "",
                                                                                                      "def operatorChars = \"-&|:$#\\\\%^@?*/+!~\"",
                                                                                                      "",
                                                                                                      "method padl(s, l, w) {",
                                                                                                      "    if (s.size >= l) then {",
                                                                                                      "        return s",
                                                                                                      "    }",
                                                                                                      "    var s' := s",
                                                                                                      "    while {s'.size < l} do {",
                                                                                                      "        s' := w ++ s'",
                                                                                                      "    }",
                                                                                                      "    return s'",
                                                                                                      "}",
                                                                                                      "",
                                                                                                      "class new {",
                                                                                                      "    var lineNumber := 1",
                                                                                                      "    var linePosition := 0",
                                                                                                      "    var startPosition := 1",
                                                                                                      "    var indentLevel := 0",
                                                                                                      "    var startLine := 1",
                                                                                                      "    var stringStart",
                                                                                                      "    ",
                                                                                                      "    class token {",
                                                                                                      "        def line is public = lineNumber",
                                                                                                      "        def indent is public = indentLevel",
                                                                                                      "        def linePos is public = startPosition",
                                                                                                      "",
                                                                                                      "        var next is public := false",
                                                                                                      "        var prev is public := false",
                                                                                                      "",
                                                                                                      "        method ==(other) {",
                                                                                                      "            if (other == false) then {",
                                                                                                      "                false",
                                                                                                      "            } else {",
                                                                                                      "                (other.line == line) && (other.linePos == linePos)",
                                                                                                      "            }",
                                                                                                      "        }",
                                                                                                      "        method asString { \"({line}:{linePos}){self.kind} {self.value}\" }",
                                                                                                      "    }",
                                                                                                      "",
                                                                                                      "",
                                                                                                      "    class identifierToken(s) {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"identifier\"",
                                                                                                      "        def value is public = s",
                                                                                                      "        def size is public = s.size",
                                                                                                      "    }",
                                                                                                      "    class stringToken(s) {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"string\"",
                                                                                                      "        def value is public = s",
                                                                                                      "        def size is public = linePosition - stringStart + 1",
                                                                                                      "    }",
                                                                                                      "    class multiLineStringToken(s) {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"string\"",
                                                                                                      "        def value is public = s",
                                                                                                      "        def size is public = s.size + 2",
                                                                                                      "        def line' = startLine",
                                                                                                      "        def linePos' = stringStart",
                                                                                                      "        method line is override { line' }",
                                                                                                      "        method linePos is override { linePos' }",
                                                                                                      "    }",
                                                                                                      "    class commentToken(s) {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"comment\"",
                                                                                                      "        def value is public = s",
                                                                                                      "        def size is public = s.size + 2",
                                                                                                      "    }",
                                                                                                      "    class lBraceToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"lbrace\"",
                                                                                                      "        def value is public = \"\\{\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class rBraceToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"rbrace\"",
                                                                                                      "        def value is public = \"}\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class lParenToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"lparen\"",
                                                                                                      "        def value is public = \"(\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class rParenToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"rparen\"",
                                                                                                      "        def value is public = \")\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class lSquareToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"lsquare\"",
                                                                                                      "        def value is public = \"[\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class rSquareToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"rsquare\"",
                                                                                                      "        def value is public = \"]\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class commaToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"comma\"",
                                                                                                      "        def value is public = \",\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class colonToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"colon\"",
                                                                                                      "        def value is public = \":\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class dotToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"dot\"",
                                                                                                      "        def value is public = \".\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class numToken(v, b) {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"num\"",
                                                                                                      "        def value is public = v",
                                                                                                      "        def base is public = b",
                                                                                                      "        def size is public = linePosition - startPosition",
                                                                                                      "    }",
                                                                                                      "    class keywordToken(v) {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"keyword\"",
                                                                                                      "        def value is public = v",
                                                                                                      "        def size is public = v.size",
                                                                                                      "    }",
                                                                                                      "    class opToken(v) {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"op\"",
                                                                                                      "        def value is public = v",
                                                                                                      "        def size is public = v.size",
                                                                                                      "    }",
                                                                                                      "    class arrowToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"arrow\"",
                                                                                                      "        def value is public = \"→\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class bindToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"bind\"",
                                                                                                      "        def value is public = \":=\"",
                                                                                                      "        def size is public = 2",
                                                                                                      "    }",
                                                                                                      "    class semicolonToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"semicolon\"",
                                                                                                      "        def value is public = \";\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class lGenericToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"lgeneric\"",
                                                                                                      "        def value is public = \"⟦\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class rGenericToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"rgeneric\"",
                                                                                                      "        def value is public = \"⟧\"",
                                                                                                      "        def size is public = 1",
                                                                                                      "    }",
                                                                                                      "    class eofToken {",
                                                                                                      "        inherits token",
                                                                                                      "        def kind is public = \"eof\"",
                                                                                                      "        def value is public = \"\"",
                                                                                                      "        def size is public = 0",
                                                                                                      "    }",
                                                                                                      "",
                                                                                                      "",
                                                                                                      "    method modechange(tokens, mode, accum) {",
                                                                                                      "        // When a new lexical class has begun, add to the token list",
                                                                                                      "        // the token corresponding to the previous accumulated data.",
                                                                                                      "        // mode is the previous lexical mode (a string), and accum the",
                                                                                                      "        // accumulated characters since that mode began. Modes are:",
                                                                                                      "        //   n           Whitespace       i   Identifier",
                                                                                                      "        //   \"           Quoted string    q   extended string",
                                                                                                      "        //   m           Number           o   Any operator",
                                                                                                      "        //   p           Pragma           d   Indentation",
                                                                                                      "        //   c           Comment          e   empty",
                                                                                                      "        //   ,.{}()[]⟦⟧; The corresponding literal character",
                                                                                                      "        //",
                                                                                                      "        // There are three special cases for mode o. If accum is \"→\",",
                                                                                                      "        // \":=\", or \"=\", the corresponding special token is created.",
                                                                                                      "        // For mode i, a keyword token is created when the identifier",
                                                                                                      "        // is a reserved keyword.",
                                                                                                      "",
                                                                                                      "        var tok := 0",
                                                                                                      "        if ((mode != \"n\") || (accum.size > 0)) then {",
                                                                                                      "            if (mode == \"i\") then {",
                                                                                                      "                tok := if (keywords.contains(accum)) then {",
                                                                                                      "                    keywordToken(accum)",
                                                                                                      "                } else {",
                                                                                                      "                    identifierToken(accum)",
                                                                                                      "                }",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"\\\"\" } then {",
                                                                                                      "                tok := stringToken(accum)",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"q\" } then {",
                                                                                                      "                tok := multiLineStringToken(accum)",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \",\" } then {",
                                                                                                      "                tok := commaToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \".\" } then {",
                                                                                                      "                tok := dotToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"\\{\" } then {",
                                                                                                      "                tok := lBraceToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"}\" } then {",
                                                                                                      "                tok := rBraceToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"(\" } then {",
                                                                                                      "                tok := lParenToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \")\" } then {",
                                                                                                      "                tok := rParenToken",
                                                                                                      "                if (tokens.last.kind == \"lparen\") then {",
                                                                                                      "                    errormessages.syntaxError(\"empty parenthesis are not allowed. \" ++",
                                                                                                      "                        \"Remove them, or put something between them.\")",
                                                                                                      "                        atRange(tok.line, tokens.last.linePos, tok.linePos)",
                                                                                                      "                }",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"[\" } then {",
                                                                                                      "                tok := lSquareToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"]\" } then {",
                                                                                                      "                tok := rSquareToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"⟦\" } then {",
                                                                                                      "                tok := lGenericToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"⟧\" } then {",
                                                                                                      "                tok := rGenericToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \";\" } then {",
                                                                                                      "                tok := semicolonToken",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"m\" } then {",
                                                                                                      "                if ((tokens.size > 1) && {tokens.last.kind == \"dot\"}) then {",
                                                                                                      "                    def dot = tokens.pop",
                                                                                                      "                    if (tokens.last.kind == \"num\") then {",
                                                                                                      "                        if (tokens.last.base == 10) then {",
                                                                                                      "                            tok := tokens.pop",
                                                                                                      "                            var decimal := makeNumToken(accum)",
                                                                                                      "                            if(decimal.base == 10) then {",
                                                                                                      "                                tok := numToken(tok.value ++ \".\" ++ accum, 10)",
                                                                                                      "                            } else {",
                                                                                                      "                                def suggestions = []",
                                                                                                      "                                var suggestion := errormessages.suggestion.new",
                                                                                                      "                                suggestion.replaceRange(dot.linePos + 1, linePosition - 1)with(decimal.value)onLine(lineNumber)",
                                                                                                      "                                suggestions.push(suggestion)",
                                                                                                      "                                suggestion := errormessages.suggestion.new",
                                                                                                      "                                suggestion.deleteRange(dot.linePos, linePosition - 1)onLine(lineNumber)",
                                                                                                      "                                suggestions.push(suggestion)",
                                                                                                      "                                errormessages.syntaxError(\"the fractional part of a number must be in base 10.\")atRange(",
                                                                                                      "                                    lineNumber, dot.linePos + 1, linePosition - 1)withSuggestions(suggestions)",
                                                                                                      "                            }",
                                                                                                      "                        } else {",
                                                                                                      "                            def suggestions = []",
                                                                                                      "                            var suggestion := errormessages.suggestion.new",
                                                                                                      "                            suggestion.replaceRange(tokens.last.linePos, dot.linePos - 1)with(tokens.last.value)onLine(lineNumber)",
                                                                                                      "                            suggestions.push(suggestion)",
                                                                                                      "                            suggestion := errormessages.suggestion.new",
                                                                                                      "                            suggestion.deleteChar(dot.linePos)onLine(lineNumber)",
                                                                                                      "                            suggestions.push(suggestion)",
                                                                                                      "                            errormessages.syntaxError(\"a number in base {tokens.last.base} cannot have a fractional part.\")atRange(",
                                                                                                      "                                lineNumber, dot.linePos, linePosition - 1)withSuggestions(suggestions)",
                                                                                                      "                        }",
                                                                                                      "                    } else {",
                                                                                                      "                        if(tokens.last.kind == \"string\") then {",
                                                                                                      "                            def suggestion = errormessages.suggestion.new",
                                                                                                      "                            suggestion.replaceChar(dot.linePos)with(\"++\")onLine(dot.line)",
                                                                                                      "                            errormessages.syntaxError(\"a number may follow a '.' only if there is a number before the '.'. \"",
                                                                                                      "                                ++ \"To join a number to a string, use '++'.\")atRange(",
                                                                                                      "                                dot.line, dot.linePos, dot.linePos)withSuggestion(suggestion)",
                                                                                                      "                        } elseif { (tokens.last.kind == \"op\" ) || (tokens.last.kind == \"bind\") } then {",
                                                                                                      "                            def suggestion = errormessages.suggestion.new",
                                                                                                      "                            suggestion.insert(\"0\")atPosition(dot.linePos)onLine(dot.line)",
                                                                                                      "                            errormessages.syntaxError(\"a number must have a digit before the decimal point.\")atPosition(",
                                                                                                      "                                dot.line, dot.linePos)withSuggestion(suggestion)",
                                                                                                      "                        } elseif { tokens.last.kind == \"identifier\" } then {",
                                                                                                      "                            def suggestions = []",
                                                                                                      "                            if(tokens.last.value == \"o\") then {",
                                                                                                      "                                def suggestion = errormessages.suggestion.new",
                                                                                                      "                                suggestion.replaceChar(tokens.last.linePos)with(\"0\")onLine(tokens.last.line)",
                                                                                                      "                                suggestions.push(suggestion)",
                                                                                                      "                            }",
                                                                                                      "                            def suggestion = errormessages.suggestion.new",
                                                                                                      "                            suggestion.replaceRange(dot.linePos, linePosition - 1)with(\"({accum})\")onLine(tokens.last.line)",
                                                                                                      "                            suggestions.push(suggestion)",
                                                                                                      "                            errormessages.syntaxError(\"a number may follow a '.' only if there is a number before the '.'.\")atRange(",
                                                                                                      "                                dot.line, dot.linePos, dot.linePos)withSuggestions(suggestions)",
                                                                                                      "                        } else {",
                                                                                                      "                            errormessages.syntaxError(\"a number may follow a '.' only if there is a number before the '.'.\")atRange(",
                                                                                                      "                                dot.line, dot.linePos, dot.linePos)",
                                                                                                      "                        }",
                                                                                                      "                    }",
                                                                                                      "                } else {",
                                                                                                      "                    tok := makeNumToken(accum)",
                                                                                                      "                }",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"o\" } then {",
                                                                                                      "                tok := opToken(accum)",
                                                                                                      "                if (accum == \"→\") then {",
                                                                                                      "                    tok := arrowToken",
                                                                                                      "                } elseif { accum == \":=\" } then {",
                                                                                                      "                    tok := bindToken",
                                                                                                      "                } elseif { accum == \":\" } then {",
                                                                                                      "                    tok := colonToken",
                                                                                                      "                }",
                                                                                                      "                tokens.push(tok)",
                                                                                                      "            } elseif { mode == \"d\" } then {",
                                                                                                      "                indentLevel := linePosition - 1",
                                                                                                      "            } elseif { mode == \"n\" } then {",
                                                                                                      "            } elseif { mode == \"e\" } then {",
                                                                                                      "            } elseif { mode == \"c\" } then {",
                                                                                                      "                var firstNonSpace := 3      // skip the leading \"//\"",
                                                                                                      "                def accumSize = accum.size",
                                                                                                      "                while { (firstNonSpace <= accum.size) && {",
                                                                                                      "                        accum.at(firstNonSpace) == \" \" } } do {",
                                                                                                      "                    firstNonSpace := firstNonSpace + 1 ",
                                                                                                      "                }",
                                                                                                      "                def cmt = accum.substringFrom(firstNonSpace)to(accum.size)",
                                                                                                      "                tokens.push(commentToken(cmt))",
                                                                                                      "            } elseif { mode == \"p\" } then {",
                                                                                                      "                if (accum.substringFrom(1)to(8) == \"#pragma \") then {",
                                                                                                      "                    util.processExtension(",
                                                                                                      "                        accum.substringFrom(9)to(accum.size))",
                                                                                                      "                }",
                                                                                                      "            } else {",
                                                                                                      "                ProgrammingError.raise(\"Internal error in lexer: \" ++",
                                                                                                      "                    \"no handler for mode {mode} with accum ‹{accum}› \" ++",
                                                                                                      "                    \"at position {lineNumber}:{linePosition}\")",
                                                                                                      "            }",
                                                                                                      "        }",
                                                                                                      "        startPosition := linePosition",
                                                                                                      "    }",
                                                                                                      "",
                                                                                                      "    method fromBase(str, base) {",
                                                                                                      "        var val := 0",
                                                                                                      "        var i := 0",
                                                                                                      "        for (str) do {c->",
                                                                                                      "            def n = c.ord",
                                                                                                      "            val := val * base",
                                                                                                      "            var inc := 0",
                                                                                                      "            if ((n >= 48) && (n <= 57)) then {",
                                                                                                      "                inc := n - 48 // 0",
                                                                                                      "            } elseif {(n >= 65) && (n <= 90)} then {",
                                                                                                      "                inc := n - 55 // 'A' - 10",
                                                                                                      "            } else {",
                                                                                                      "                inc := n - 87 // 'a' - 10",
                                                                                                      "            }",
                                                                                                      "            if (inc >= base) then {",
                                                                                                      "                if((str.first == \"0\") && (inc < 16)) then {",
                                                                                                      "                    def suggestion = errormessages.suggestion.new",
                                                                                                      "                    suggestion.insert(\"x\")atPosition(linePosition - str.size + 1)onLine(lineNumber)",
                                                                                                      "                    errormessages.syntaxError(\"a number in base 16 must start with '0x'.\")atPosition(",
                                                                                                      "                        lineNumber, linePosition - str.size + 1)withSuggestion(suggestion)",
                                                                                                      "                } else {",
                                                                                                      "                    def suggestion = errormessages.suggestion.new",
                                                                                                      "                    if(str.size == 1) then {",
                                                                                                      "                        suggestion.deleteRange(linePosition - str.size - 1, linePosition - 1)onLine(lineNumber)",
                                                                                                      "                    } else {",
                                                                                                      "                        suggestion.deleteChar(linePosition - str.size + i)onLine(lineNumber)",
                                                                                                      "                    }",
                                                                                                      "                    def validDigits = if(base <= 10) then {",
                                                                                                      "                        \"'0' to '{base - 1}'\"",
                                                                                                      "                    } else {",
                                                                                                      "                        \"'0' to '9', 'a' to '{unicode.create(87 + base)}'\"",
                                                                                                      "                    }",
                                                                                                      "                    errormessages.syntaxError(\"'{c}' is not a valid digit in base {base}. Valid digits are {validDigits}.\")atRange(",
                                                                                                      "                        lineNumber, linePosition - str.size + i, linePosition - str.size + i)withSuggestion(suggestion)",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "            val := val + inc",
                                                                                                      "            i := i + 1",
                                                                                                      "        }",
                                                                                                      "        val",
                                                                                                      "    }",
                                                                                                      "            ",
                                                                                                      "    method hexdecchar(c) {",
                                                                                                      "    // Return the numeric value of the single hexadecimal digit c.",
                                                                                                      "        def AOrd = \"A\".ord",
                                                                                                      "        def aOrd = \"a\".ord",
                                                                                                      "        def zeroOrd = \"0\".ord",
                                                                                                      "        def cOrd = c.ord",
                                                                                                      "        if ( (cOrd >= AOrd) && (cOrd <= \"F\".ord) ) then {",
                                                                                                      "            cOrd - AOrd + 10",
                                                                                                      "        } elseif { (cOrd >= aOrd) && (cOrd <= \"f\".ord) } then {",
                                                                                                      "            cOrd - aOrd + 10",
                                                                                                      "        } elseif { (cOrd >= zeroOrd) && (cOrd <= \"9\".ord) } then {",
                                                                                                      "            cOrd - zeroOrd",
                                                                                                      "        } else {",
                                                                                                      "            errormessages.syntaxError(\"the character '{c}' must be a hexadecimal digit\")",
                                                                                                      "                atRange(lineNumber, linePosition, linePosition)",
                                                                                                      "        }",
                                                                                                      "    }",
                                                                                                      "",
                                                                                                      "    method makeNumToken(accum) {",
                                                                                                      "        var base := 10",
                                                                                                      "        var baseSet := false",
                                                                                                      "        var sofar := \"\"",
                                                                                                      "        var i := 0",
                                                                                                      "        for (accum) do {c->",
                                                                                                      "            if ((c == \"x\") && (!baseSet)) then {",
                                                                                                      "                base := sofar.asNumber",
                                                                                                      "                baseSet := true",
                                                                                                      "                if (base == 0) then {",
                                                                                                      "                    base := 16",
                                                                                                      "                }",
                                                                                                      "                if((base < 2) || (base > 36)) then {",
                                                                                                      "                    def suggestions = []",
                                                                                                      "                    var suggestion := errormessages.suggestion.new",
                                                                                                      "                    suggestion.replaceChar(linePosition - accum.size + i)with(\"*\")onLine(lineNumber)",
                                                                                                      "                    suggestions.push(suggestion)",
                                                                                                      "                    suggestion := errormessages.suggestion.new",
                                                                                                      "                    suggestion.deleteRange(linePosition - accum.size, linePosition - accum.size + i)onLine(lineNumber)",
                                                                                                      "                    suggestions.push(suggestion)",
                                                                                                      "                    errormessages.syntaxError(\"base {base} is not a valid numerical base.\")atRange(",
                                                                                                      "                        lineNumber, linePosition - accum.size, linePosition - accum.size + i - 1)withSuggestions(suggestions)",
                                                                                                      "                }",
                                                                                                      "                sofar := \"\"",
                                                                                                      "            } else {",
                                                                                                      "                sofar := sofar ++ c",
                                                                                                      "            }",
                                                                                                      "            i := i + 1",
                                                                                                      "        }",
                                                                                                      "        if(sofar == \"\") then {",
                                                                                                      "            def suggestions = []",
                                                                                                      "            var suggestion := errormessages.suggestion.new",
                                                                                                      "            suggestion.deleteRange(linePosition - accum.size + i - 1, linePosition - 1)onLine(lineNumber)",
                                                                                                      "            suggestions.push(suggestion)",
                                                                                                      "            suggestion := errormessages.suggestion.new",
                                                                                                      "            suggestion.insert(\"0\")atPosition(linePosition)onLine(lineNumber)",
                                                                                                      "            suggestions.push(suggestion)",
                                                                                                      "            errormessages.syntaxError(\"at least one digit must follow the 'x' in a number.\")atPosition(",
                                                                                                      "                lineNumber, linePosition - accum.size + i)withSuggestions(suggestions)",
                                                                                                      "        }",
                                                                                                      "        numToken(fromBase(sofar, base).asString, base)",
                                                                                                      "    }",
                                                                                                      "    // True if ov is a valid identifier character. Identifier",
                                                                                                      "    // characters are Unicode letters, Unicode numbers, apostrophe,",
                                                                                                      "    // and (currently) underscore.",
                                                                                                      "    method isidentifierchar(ov) {",
                                                                                                      "        if (unicode.isLetter(ov)) then {",
                                                                                                      "            return true",
                                                                                                      "        }",
                                                                                                      "        if (unicode.isNumber(ov)) then {",
                                                                                                      "            return true",
                                                                                                      "        }",
                                                                                                      "        if ((ov == 95) || (ov == 39)) then {",
                                                                                                      "            // 95 is _, 39 is '",
                                                                                                      "            true",
                                                                                                      "        } else {",
                                                                                                      "            false",
                                                                                                      "        }",
                                                                                                      "    }",
                                                                                                      "",
                                                                                                      "    // True if c (with codepoint ordval) is a valid operator character.",
                                                                                                      "    method isoperatorchar(c, ordval) {",
                                                                                                      "        if (operatorChars.contains(c)) then { return true }",
                                                                                                      "        if (unicode.isSymbolMathematical(ordval)) then { return true }",
                                                                                                      "        if (unicode.iscategory(c, \"So\")) then { return true }",
                                                                                                      "        return false",
                                                                                                      "    }",
                                                                                                      "",
                                                                                                      "    // Read the program text from util.infile and return a list of",
                                                                                                      "    // tokens.",
                                                                                                      "    method lexfile(file) {",
                                                                                                      "        def lines = util.lines.makeEmpty",
                                                                                                      "        def cLines = util.cLines.makeEmpty",
                                                                                                      "            // making them empty is necessary for the browser,",
                                                                                                      "            // where these variables persist from one compilation",
                                                                                                      "            // to the next",
                                                                                                      "        var line := \"\"",
                                                                                                      "        var cLine := \"\"",
                                                                                                      "        var wasCR := false",
                                                                                                      "        for(file.read) do { c ->",
                                                                                                      "            if (c == \"\\r\") then {",
                                                                                                      "                lines.push(line)",
                                                                                                      "                cLines.push(cLine)",
                                                                                                      "                line := \"\"",
                                                                                                      "                cLine := \"\"",
                                                                                                      "                wasCR := true",
                                                                                                      "            } elseif {c  == \"\\n\"} then {",
                                                                                                      "                if (wasCR) then {",
                                                                                                      "                    // the spec says \"LINE FEED that immediately",
                                                                                                      "                    // follows a CARRIAGE RETURN is ignored\"",
                                                                                                      "                } else {",
                                                                                                      "                    lines.push(line)",
                                                                                                      "                    cLines.push(cLine)",
                                                                                                      "                    line := \"\"",
                                                                                                      "                    cLine := \"\"",
                                                                                                      "                }",
                                                                                                      "                wasCR := false",
                                                                                                      "            } elseif {c == \"\\l\"} then {",
                                                                                                      "                lines.push(line)",
                                                                                                      "                cLines.push(cLine)",
                                                                                                      "                line := \"\"",
                                                                                                      "                cLine := \"\"",
                                                                                                      "                wasCR := false",
                                                                                                      "            } elseif {c == \"\\\\\"} then {",
                                                                                                      "                line := line ++ c",
                                                                                                      "                cLine := cLine ++ \"\\\\\\\\\"",
                                                                                                      "                wasCR := false",
                                                                                                      "            } elseif {c == \"\\\"\"} then {",
                                                                                                      "                line := line ++ c",
                                                                                                      "                cLine := cLine ++ \"\\\\\\\"\"",
                                                                                                      "                wasCR := false",
                                                                                                      "            } else {",
                                                                                                      "                line := line ++ c",
                                                                                                      "                cLine := cLine ++ c",
                                                                                                      "                wasCR := false",
                                                                                                      "            }",
                                                                                                      "        }",
                                                                                                      "        if (line != \"\") then {",
                                                                                                      "            // this deals with an un-terminated final line",
                                                                                                      "            lines.push(line)",
                                                                                                      "            cLines.push(cLine)",
                                                                                                      "        }",
                                                                                                      "        lexinput(lines)",
                                                                                                      "    }",
                                                                                                      "",
                                                                                                      "    method lexinput(inputLines) {",
                                                                                                      "        // tokens is a doubly-linked list of tokens.",
                                                                                                      "        var tokens := object {",
                                                                                                      "            var first is readable := false",
                                                                                                      "            var last is readable := false",
                                                                                                      "            var size' := 0",
                                                                                                      "",
                                                                                                      "            method push(t) {",
                                                                                                      "                if(first == false) then {",
                                                                                                      "                    first := t",
                                                                                                      "                    last := t",
                                                                                                      "                } else {",
                                                                                                      "                    last.next := t",
                                                                                                      "                    t.prev := last",
                                                                                                      "                    last := t",
                                                                                                      "                }",
                                                                                                      "                size' := size' + 1",
                                                                                                      "            }",
                                                                                                      "",
                                                                                                      "            method pop {",
                                                                                                      "                if(last != false) then {",
                                                                                                      "                    def popped = last",
                                                                                                      "                    last := last.prev",
                                                                                                      "                    if(last == false) then {",
                                                                                                      "                        first := false",
                                                                                                      "                    }",
                                                                                                      "                    size' := size' - 1",
                                                                                                      "                    popped",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "",
                                                                                                      "            method poll {",
                                                                                                      "                if(first != false) then {",
                                                                                                      "                    def polled = first",
                                                                                                      "                    first := first.next",
                                                                                                      "                    if(first == false) then {",
                                                                                                      "                        last := false",
                                                                                                      "                    }",
                                                                                                      "                    size' := size' - 1",
                                                                                                      "                    polled",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "",
                                                                                                      "            method size {",
                                                                                                      "                size' + 0",
                                                                                                      "            }",
                                                                                                      "",
                                                                                                      "            method iter {",
                                                                                                      "                object {",
                                                                                                      "                    var n := first",
                                                                                                      "                    method havemore {",
                                                                                                      "                        n != false",
                                                                                                      "                    }",
                                                                                                      "                    method hasNext {",
                                                                                                      "                        n != false",
                                                                                                      "                    }",
                                                                                                      "                    method next {",
                                                                                                      "                        def ret = n",
                                                                                                      "                        n := n.next",
                                                                                                      "                        ret",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "",
                                                                                                      "            method iterator {",
                                                                                                      "                iter",
                                                                                                      "            }",
                                                                                                      "            ",
                                                                                                      "            method do(action) {",
                                                                                                      "                var n := first",
                                                                                                      "                while { n != false } do {",
                                                                                                      "                    action.apply(n)",
                                                                                                      "                    n := n.next",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "        }",
                                                                                                      "",
                                                                                                      "        var mode := \"d\"",
                                                                                                      "        var newmode := mode",
                                                                                                      "        var inStr := false",
                                                                                                      "        var inBackticks := false",
                                                                                                      "        var backtickIdent := false",
                                                                                                      "        var accum := \"\"",
                                                                                                      "        var escaped := false",
                                                                                                      "        var unichars := 0",
                                                                                                      "        var codepoint := 0",
                                                                                                      "        var interpdepth := 0",
                                                                                                      "        var interpString := false",
                                                                                                      "        var atStart := true",
                                                                                                      "        var newlineFound := false",
                                                                                                      "        linePosition := 0",
                                                                                                      "        util.log_verbose \"lexing.\"",
                                                                                                      "        def badSeparator = unicode.pattern(\"Z\", 9)not(32, 160)",
                                                                                                      "            // 32 is SPACE, and 160 NO-BREAK SPACE",
                                                                                                      "        def badControl =  unicode.pattern(\"C\")not(10, 13)",
                                                                                                      "        def selfModes = unicode.pattern(\"(\".ord, \")\".ord, \",\".ord,",
                                                                                                      "            \"\\{\".ord, \"}\".ord, \"[\".ord, \"]\".ord, \";\".ord, \"⟦\".ord, \"⟧\".ord)",
                                                                                                      "        def brackets = unicode.pattern(\"(\".ord, \")\".ord,",
                                                                                                      "            \"\\{\".ord, \"}\".ord, \"[\".ord, \"]\".ord, \"⟦\".ord, \"⟧\".ord)",
                                                                                                      "        def identifierChar = unicode.pattern(\"L\", \"N\", 95, 39) // 95 = _, 39 = '",
                                                                                                      "        def digit = unicode.pattern(\"0\".ord, \"1\".ord, \"2\".ord, \"3\".ord,",
                                                                                                      "            \"4\".ord, \"5\".ord, \"6\".ord, \"7\".ord, \"8\".ord, \"9\".ord)",
                                                                                                      "        def mainBlock = { c ->",
                                                                                                      "            var ct := \"\"",
                                                                                                      "            var ordval := c.ord // String.ord gives the codepoint",
                                                                                                      "            if (badSeparator.match(ordval) && { mode != \"q\" }) then {",
                                                                                                      "                // Character is whitespace, but not an ASCII space or",
                                                                                                      "                // Unicode NO-BREAK SPACE.  For example, a tab",
                                                                                                      "                def suggestion = errormessages.suggestion.new",
                                                                                                      "                suggestion.replaceChar(linePosition)with(\" \")onLine(lineNumber)",
                                                                                                      "                if (ordval == 9) then {",
                                                                                                      "                    if (inStr) then {",
                                                                                                      "                        suggestion.replaceRange(linePosition, linePosition)",
                                                                                                      "                            with(\"\\\\u{padl(ordval.inBase 16, 4, \"0\")}\")",
                                                                                                      "                            onLine(lineNumber)",
                                                                                                      "                        errormessages.syntaxError(\"tabs cannot be \"",
                                                                                                      "                            ++ \"written in the source code; \"",
                                                                                                      "                            ++ \"use the Unicode escape \\\\u\"",
                                                                                                      "                            ++ padl(ordval.inBase 16, 4, \"0\")",
                                                                                                      "                            ++ \" instead\")",
                                                                                                      "                            atRange(lineNumber, linePosition, linePosition)",
                                                                                                      "                            withSuggestion(suggestion)",
                                                                                                      "                    }",
                                                                                                      "                    errormessages.syntaxError(\"tabs are not allowed; use spaces instead.\")atRange(lineNumber,",
                                                                                                      "                        linePosition, linePosition)withSuggestion(suggestion)",
                                                                                                      "                } else {",
                                                                                                      "                    if (mode == \"\\\"\") then {",
                                                                                                      "                        suggestion.replaceRange(linePosition, linePosition)",
                                                                                                      "                            with(\"\\\\u{padl(ordval.inBase 16, 4, \"0\")}\")",
                                                                                                      "                            onLine(lineNumber)",
                                                                                                      "                        errormessages.syntaxError(\"{unicode.name(c)} (U+{padl(ordval.inBase 16, 4, \"0\")}) \"",
                                                                                                      "                            ++ \"is not a valid whitespace character\"",
                                                                                                      "                            ++ \" and cannot be \"",
                                                                                                      "                            ++ \"written in the source code; \"",
                                                                                                      "                            ++ \"use the Unicode escape \\\\u\"",
                                                                                                      "                            ++ padl(ordval.inBase 16, 4, \"0\")",
                                                                                                      "                            ++ \" instead\")",
                                                                                                      "                            atRange(lineNumber, linePosition, linePosition)",
                                                                                                      "                            withSuggestion(suggestion)",
                                                                                                      "                    }",
                                                                                                      "                    errormessages.syntaxError(\"{unicode.name(c)} (U+{padl(ordval.inBase 16, 4, \"0\")}) \"",
                                                                                                      "                        ++ \"is not a valid whitespace character; use spaces instead.\")atRange(lineNumber,",
                                                                                                      "                        linePosition, linePosition)withSuggestion(suggestion)",
                                                                                                      "                }",
                                                                                                      "            } elseif {badControl.match(ordval) && { mode != \"q\" }} then {",
                                                                                                      "                // Character is a control character other than",
                                                                                                      "                // carriage return or line feed.",
                                                                                                      "                def suggestion = errormessages.suggestion.new",
                                                                                                      "                if (inStr) then {",
                                                                                                      "                    suggestion.replaceRange(linePosition, linePosition)",
                                                                                                      "                        with(\"\\\\u{padl(ordval.inBase 16, 4, \"0\")}\")",
                                                                                                      "                        onLine(lineNumber)",
                                                                                                      "                    errormessages.syntaxError(\"{unicode.name(c)} (U+{padl(ordval.inBase 16, 4, \"0\")}) \"",
                                                                                                      "                        ++ \"is a control character and cannot be \"",
                                                                                                      "                        ++ \"written in the source code; \"",
                                                                                                      "                        ++ \"use the Unicode escape \\\\u\"",
                                                                                                      "                        ++ padl(ordval.inBase 16, 4, \"0\")",
                                                                                                      "                        ++ \" instead\")",
                                                                                                      "                        atRange(lineNumber, linePosition, linePosition)",
                                                                                                      "                        withSuggestion(suggestion)",
                                                                                                      "                }",
                                                                                                      "                suggestion.deleteChar(linePosition)onLine(lineNumber)",
                                                                                                      "                errormessages.syntaxError(\"{unicode.name(c)} (U+{padl(ordval.inBase 16, 4, \"0\")}) \"",
                                                                                                      "                    ++ \"is a control character and cannot be written in the source code; consider using spaces instead.\")atRange(lineNumber,",
                                                                                                      "                    linePosition, linePosition)withSuggestion(suggestion)",
                                                                                                      "            }",
                                                                                                      "            if (atStart) then {",
                                                                                                      "                if (linePosition == 1) then {",
                                                                                                      "                    if (c == \"#\") then {",
                                                                                                      "                        mode := \"p\"",
                                                                                                      "                        newmode := mode",
                                                                                                      "                    } else {",
                                                                                                      "                        atStart := false",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "            if (inStr) then {",
                                                                                                      "",
                                                                                                      "            } elseif { (mode != \"c\") && (mode != \"p\") } then {",
                                                                                                      "                // Not in a comment or pragma, so look for a mode.",
                                                                                                      "                if ((c == \" \") && (mode != \"d\")) then {",
                                                                                                      "                    newmode := \"n\"",
                                                                                                      "                }",
                                                                                                      "                if (c == \"\\\"\") then {",
                                                                                                      "                    // Beginning of a string",
                                                                                                      "                    newmode := \"\\\"\"",
                                                                                                      "                    inStr := true",
                                                                                                      "                    stringStart := linePosition",
                                                                                                      "                } elseif { c == \"‹\" } then {",
                                                                                                      "                    // Beginning of a multi-line string",
                                                                                                      "                    newmode := \"q\"",
                                                                                                      "                    inStr := true",
                                                                                                      "                    startLine := lineNumber",
                                                                                                      "                    stringStart := linePosition",
                                                                                                      "                } elseif { identifierChar.match(ordval) } then {",
                                                                                                      "                    newmode := \"i\"",
                                                                                                      "                }",
                                                                                                      "                if (digit.match(ordval)) then {",
                                                                                                      "                    // This may overwrite newmode := \"i\"",
                                                                                                      "                    // established 5 lines up",
                                                                                                      "                    if (mode != \"i\") then {",
                                                                                                      "                        newmode := \"m\"",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "                if (mode == \"m\") then {",
                                                                                                      "                    if ((ordval >= 97) && (ordval <=122)) then {",
                                                                                                      "                        newmode := \"m\"",
                                                                                                      "                    } else {",
                                                                                                      "                        if ((ordval >= 65) && (ordval <= 90)) then {",
                                                                                                      "                            newmode := \"m\"",
                                                                                                      "                        }",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "                if (c == \"<\") then {",
                                                                                                      "                    if (mode == \"i\") then {",
                                                                                                      "                        newmode := \"⟦\"",
                                                                                                      "                    } elseif {(mode == \"n\") && (tokens.last.kind == \"op\")} then {",
                                                                                                      "                        newmode := \"⟧\"",
                                                                                                      "                    } else {",
                                                                                                      "                        newmode := \"o\"",
                                                                                                      "                    }",
                                                                                                      "                } elseif { (c == \">\") && {(mode == \"i\") || (mode == \"e\")} } then {",
                                                                                                      "                    if (mode == \"⟧\") then {",
                                                                                                      "                        modechange(tokens, mode, accum)",
                                                                                                      "                    }",
                                                                                                      "                    newmode := \"⟧\"",
                                                                                                      "                } elseif { isoperatorchar(c, ordval) } then {",
                                                                                                      "                    newmode := \"o\"",
                                                                                                      "                } elseif { selfModes.match(ordval) } then {",
                                                                                                      "                    newmode := c",
                                                                                                      "                }",
                                                                                                      "                if (c == \"#\") then {",
                                                                                                      "                    if(util.lines.at(lineNumber).substringFrom(1)to(7) == \"#pragma\") then {",
                                                                                                      "                        if (atStart) then {",
                                                                                                      "                            mode := \"p\"",
                                                                                                      "                            newmode := \"p\"",
                                                                                                      "                        } else {",
                                                                                                      "                            errormessages.syntaxError \"pragmas must be at the start of the file.\"",
                                                                                                      "                                atLine(lineNumber)",
                                                                                                      "                        }",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "                if (c == \".\") then {",
                                                                                                      "                    if (accum == \".\") then {",
                                                                                                      "                        // Special handler for .. operator",
                                                                                                      "                        mode := \"o\"",
                                                                                                      "                        newmode := mode",
                                                                                                      "                    } elseif { accum == \"..\" } then {",
                                                                                                      "                        // Special handler for ... identifier",
                                                                                                      "                        mode := \"n\"",
                                                                                                      "                        newmode := mode",
                                                                                                      "                        modechange(tokens, \"i\", \"...\")",
                                                                                                      "                        accum := \"\"",
                                                                                                      "                    } else {",
                                                                                                      "                        newmode := \".\"",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "                if (c == \"/\") then {",
                                                                                                      "                    if (accum == \"/\") then {",
                                                                                                      "                        // Start of comment",
                                                                                                      "                        mode := \"c\"",
                                                                                                      "                        newmode := mode",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "                if (mode == \"n\") then {",
                                                                                                      "                    if (mode == newmode) then {",
                                                                                                      "                        if (unicode.isSeparator(ordval).not) then {",
                                                                                                      "                            if (unicode.isControl(ordval).not) then {",
                                                                                                      "                                if (ordval != 10) then {",
                                                                                                      "                                    if (ordval != 13) then {",
                                                                                                      "                                        if (ordval != 32) then {",
                                                                                                      "                                            if (c != \".\") then{",
                                                                                                      "                                                errormessages.syntaxError(\"{unicode.name(c)} (U+{padl(ordval.inBase 16, 4, \"0\")}) \"",
                                                                                                      "                                                    ++ \"is not a valid character; use spaces instead.\")atRange(",
                                                                                                      "                                                    lineNumber, linePosition, linePosition)",
                                                                                                      "                                            }",
                                                                                                      "                                        }",
                                                                                                      "                                    }",
                                                                                                      "                                }",
                                                                                                      "                            }",
                                                                                                      "                        }",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "            if (mode == \"\\\"\") then {",
                                                                                                      "                if (c == \"\\\"\") then {",
                                                                                                      "                    if (escaped.not) then {",
                                                                                                      "                        // End of string literal",
                                                                                                      "                        newmode := \"n\"",
                                                                                                      "                        inStr := false",
                                                                                                      "                        if (interpString) then {",
                                                                                                      "                            modechange(tokens, mode, accum)",
                                                                                                      "                            modechange(tokens, \")\", \")\")",
                                                                                                      "                            mode := newmode",
                                                                                                      "                            interpString := false",
                                                                                                      "                        }",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "            } elseif {mode == \"q\"} then {",
                                                                                                      "                if (c == \"›\") then {",
                                                                                                      "                    //end of literal",
                                                                                                      "                    newmode := \"n\"",
                                                                                                      "                    inStr := false",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "            if (newmode != mode) then {",
                                                                                                      "                // This character is the beginning of a different",
                                                                                                      "                // lexical mode - process the old one now.",
                                                                                                      "                modechange(tokens, mode, accum)",
                                                                                                      "                if (interpdepth > 0) then {",
                                                                                                      "                    if (newmode == \"}\") then {",
                                                                                                      "                        // Find the position of the opening brace to ",
                                                                                                      "                        // check if the interpolation is empty.",
                                                                                                      "                        if (tokens.last.kind == \"lbrace\") then {",
                                                                                                      "                            def suggestion = errormessages.suggestion.new",
                                                                                                      "                            suggestion.deleteRange(linePosition - 1, linePosition)onLine(lineNumber)",
                                                                                                      "                            errormessages.syntaxError(\"a string interpolation cannot be empty.\")atRange(",
                                                                                                      "                                lineNumber, tokens.last.linePos, linePosition)withSuggestion(suggestion)",
                                                                                                      "                        }",
                                                                                                      "                        modechange(tokens, \")\", \")\")",
                                                                                                      "                        modechange(tokens, \"o\", \"++\")",
                                                                                                      "                        newmode := \"\\\"\"",
                                                                                                      "                        inStr := true",
                                                                                                      "                        interpdepth := interpdepth - 1",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "                mode := newmode",
                                                                                                      "                if (inStr) then {",
                                                                                                      "                    // String accum should skip the opening quote, but",
                                                                                                      "                    // other modes' should include their first",
                                                                                                      "                    // character.",
                                                                                                      "                    accum := \"\"",
                                                                                                      "                } else {",
                                                                                                      "                    accum := c",
                                                                                                      "                }",
                                                                                                      "                if (brackets.match(mode)) then {",
                                                                                                      "                    modechange(tokens, mode, accum)",
                                                                                                      "                    mode := \"e\"",
                                                                                                      "                    newmode := mode",
                                                                                                      "                    accum := \"\"",
                                                                                                      "                }",
                                                                                                      "            } elseif { mode == \"\\\"\" } then {",
                                                                                                      "                if (c == \"\\n\") then {",
                                                                                                      "                    if (interpdepth > 0) then {",
                                                                                                      "                        // Find closest {.",
                                                                                                      "                        var line := lineNumber",
                                                                                                      "                        var i := util.lines.at(line).size",
                                                                                                      "                        while { util.lines.at(line).at(i) != \"\\{\" } do {",
                                                                                                      "                            i := i - 1",
                                                                                                      "                            if(i == 0) then {",
                                                                                                      "                                lineNumber := line - 1",
                                                                                                      "                                i := util.lines.at(line).size",
                                                                                                      "                            }",
                                                                                                      "                        }",
                                                                                                      "                        def suggestions = []",
                                                                                                      "                        var suggestion := errormessages.suggestion.new",
                                                                                                      "                        suggestion.insert(\"\\\\\")atPosition(i)onLine(line)",
                                                                                                      "                        suggestions.push(suggestion)",
                                                                                                      "                        if((line == lineNumber) && (i == (linePosition - 2))) then {",
                                                                                                      "                            errormessages.syntaxError(\"for a '\\{' character in a string use '\\\\\\{'.\")atPosition(",
                                                                                                      "                                line, i)withSuggestions(suggestions)",
                                                                                                      "                        } else {",
                                                                                                      "                            suggestion := errormessages.suggestion.new",
                                                                                                      "                            suggestion.insert(\"}\")atPosition(linePosition - accum.size - 1)onLine(lineNumber)",
                                                                                                      "                            suggestions.push(suggestion)",
                                                                                                      "                            errormessages.syntaxError(\"a string interpolation must end with a '}'. For a '\\{' character in a string use '\\\\\\{'.\")atPosition(",
                                                                                                      "                                lineNumber, linePosition - accum.size - 1)withSuggestions(suggestions)",
                                                                                                      "                        }",
                                                                                                      "                    } else {",
                                                                                                      "                        def errorLine = util.lines.at(lineNumber)",
                                                                                                      "                        def nextLine = if(util.lines.size >= (lineNumber + 1)) then {",
                                                                                                      "                            util.lines.at(lineNumber + 1)",
                                                                                                      "                        } else {",
                                                                                                      "                            \"\"",
                                                                                                      "                        }",
                                                                                                      "                        // Count the number of literal quotes in the next line.",
                                                                                                      "                        var i := 1",
                                                                                                      "                        var count := 0",
                                                                                                      "                        while { i <= nextLine.size } do {",
                                                                                                      "                            if(nextLine.at(i) == \"\\\"\") then { count := count + 1 }",
                                                                                                      "                            elseif { nextLine.at(i) == \"\\\\\" } then { i := i + 1 }",
                                                                                                      "                            i := i + 1",
                                                                                                      "                        }",
                                                                                                      "                        if ((count % 2) == 1) then {",
                                                                                                      "                            def suggestions = []",
                                                                                                      "                            var suggestion := errormessages.suggestion.new",
                                                                                                      "                            suggestion.addLine(lineNumber, errorLine ++ nextLine)",
                                                                                                      "                            suggestion.addLine(lineNumber + 1, \"\")",
                                                                                                      "                            suggestions.push(suggestion)",
                                                                                                      "                            suggestion := errormessages.suggestion.new",
                                                                                                      "                            suggestion.addLine(lineNumber, errorLine ++ \"\\\"\")",
                                                                                                      "                            suggestion.addLine(lineNumber + 1, \"    ++ \\\"\" ++ nextLine)",
                                                                                                      "                            suggestions.push(suggestion)",
                                                                                                      "                            suggestion := errormessages.suggestion.new",
                                                                                                      "                            suggestion.addLine(lineNumber, errorLine ++ \"\\\\n\" ++ nextLine)",
                                                                                                      "                            suggestion.addLine(lineNumber + 1, \"\")",
                                                                                                      "                            suggestions.push(suggestion)",
                                                                                                      "                            errormessages.syntaxError(\"a string must be terminated by a \\\" before the end of the line. To insert a newline in a string, use '\\\\n'. To split a string over multiple lines, use '++' to join strings together.\")",
                                                                                                      "                                atRange(lineNumber, linePosition, linePosition)",
                                                                                                      "                                withSuggestions(suggestions)",
                                                                                                      "                        } else {",
                                                                                                      "                            def suggestion = errormessages.suggestion.new",
                                                                                                      "                            suggestion.addLine(lineNumber, errorLine ++ \"\\\"\")",
                                                                                                      "                            errormessages.syntaxError(\"a string must be terminated \" ++",
                                                                                                      "                                \"by a \\\" before the end of the line.\")",
                                                                                                      "                                atPosition(lineNumber, linePosition)",
                                                                                                      "                                withSuggestion(suggestion)",
                                                                                                      "                        }",
                                                                                                      "                    }",
                                                                                                      "                }",
                                                                                                      "                if (escaped) then {",
                                                                                                      "                    if (c == \"n\") then {",
                                                                                                      "                        // Newline escape",
                                                                                                      "                        accum := accum ++ \"\\u000a\"",
                                                                                                      "                    } elseif { c == \"u\" } then {",
                                                                                                      "                        // Beginning of a four-digit Unicode escape",
                                                                                                      "                        // (for a BMP codepoint).",
                                                                                                      "                        unichars := 4",
                                                                                                      "                        codepoint := 0",
                                                                                                      "                    } elseif { c == \"U\" } then {",
                                                                                                      "                        // Beginning of a six-digit Unicode escape",
                                                                                                      "                        // (for a general codepoint).",
                                                                                                      "                        unichars := 6",
                                                                                                      "                        codepoint := 0",
                                                                                                      "                    } elseif { c == \"t\" } then {",
                                                                                                      "                        // Tab escape",
                                                                                                      "                        accum := accum ++ \"\\u0009\"",
                                                                                                      "                    } elseif { c == \"r\" } then {",
                                                                                                      "                        // Carriage return escape",
                                                                                                      "                        accum := accum ++ \"\\u000d\"",
                                                                                                      "                    } elseif { c == \"b\" } then {",
                                                                                                      "                        // Backspace escape",
                                                                                                      "                        accum := accum ++ \"\\u0008\"",
                                                                                                      "                    } elseif { c == \"l\" } then {",
                                                                                                      "                        // LINE SEPARATOR escape",
                                                                                                      "                        accum := accum ++ \"\\u2028\"",
                                                                                                      "                    } elseif { c == \"f\" } then {",
                                                                                                      "                        // Form feed/page down escape",
                                                                                                      "                        accum := accum ++ \"\\u000c\"",
                                                                                                      "                    } elseif { c == \"e\" } then {",
                                                                                                      "                        // Escape escape",
                                                                                                      "                        accum := accum ++ \"\\u001b\"",
                                                                                                      "                    } elseif { c == \"_\" } then {",
                                                                                                      "                        // non-breaking space",
                                                                                                      "                        accum := accum ++ \"\\u00a0\"",
                                                                                                      "                    } else {",
                                                                                                      "                        // For any other character preceded by \\,",
                                                                                                      "                        // insert it literally.",
                                                                                                      "                        accum := accum ++ c",
                                                                                                      "                    }",
                                                                                                      "                    escaped := false",
                                                                                                      "                } elseif { c == \"\\\\\" } then {",
                                                                                                      "                    // Begin an escape sequence",
                                                                                                      "                    escaped := true",
                                                                                                      "                } elseif { unichars > 0 } then {",
                                                                                                      "                    // There are still hex digits to read for a",
                                                                                                      "                    // Unicode escape. Use the current character",
                                                                                                      "                    // as a hex digit and update the codepoint",
                                                                                                      "                    // being calculated with its value.",
                                                                                                      "                    unichars := unichars - 1",
                                                                                                      "                    codepoint := codepoint * 16",
                                                                                                      "                    codepoint := codepoint + hexdecchar(c)",
                                                                                                      "                    if (unichars == 0) then {",
                                                                                                      "                        // At the end of the sequence construct",
                                                                                                      "                        // the character in the unicode library.",
                                                                                                      "                        accum := accum ++ unicode.create(codepoint)",
                                                                                                      "                    }",
                                                                                                      "                } elseif { c == \"\\{\" } then {",
                                                                                                      "                    if (interpString.not) then {",
                                                                                                      "                        modechange(tokens, \"(\", \"(\")",
                                                                                                      "                        interpString := true",
                                                                                                      "                    }",
                                                                                                      "                    modechange(tokens, mode, accum)",
                                                                                                      "                    modechange(tokens, \"o\", \"++\")",
                                                                                                      "                    modechange(tokens, \"(\", \"(\")",
                                                                                                      "                    mode := \"n\"",
                                                                                                      "                    newmode := \"n\"",
                                                                                                      "                    accum := \"\"",
                                                                                                      "                    inStr:= false",
                                                                                                      "                    interpdepth := interpdepth + 1",
                                                                                                      "                } else {",
                                                                                                      "                    accum := accum ++ c",
                                                                                                      "                }",
                                                                                                      "            } elseif { c == \"\\n\" } then {",
                                                                                                      "                newlineFound := true",
                                                                                                      "                if (mode == \"q\") then {",
                                                                                                      "                    accum := accum ++ c",
                                                                                                      "                } else {",
                                                                                                      "                    // Linebreaks terminate any open tokens",
                                                                                                      "                    modechange(tokens, mode, accum)",
                                                                                                      "                    mode := \"d\"",
                                                                                                      "                    newmode := \"d\"",
                                                                                                      "                    accum := \"\"",
                                                                                                      "                }",
                                                                                                      "            } else {",
                                                                                                      "                accum := accum ++ c",
                                                                                                      "            }",
                                                                                                      "            if (accum == \"...\") then {",
                                                                                                      "                if (mode == \"o\") then {",
                                                                                                      "                    modechange(tokens, \"i\", \"...\")",
                                                                                                      "                    newmode := \"n\"",
                                                                                                      "                    mode := newmode",
                                                                                                      "                    accum := \"\"",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "            if (newlineFound) then {",
                                                                                                      "                // Linebreaks increment the line counter.",
                                                                                                      "                newlineFound := false",
                                                                                                      "                lineNumber := lineNumber + 1",
                                                                                                      "                linePosition := 0",
                                                                                                      "                startPosition := 1",
                                                                                                      "            }",
                                                                                                      "        }",
                                                                                                      "        for (inputLines) do { eachLine ->",
                                                                                                      "            def charS = eachLine.iterator",
                                                                                                      "            while {charS.hasNext} do {",
                                                                                                      "                def ch = charS.next",
                                                                                                      "                linePosition := linePosition + 1",
                                                                                                      "                if (inStr.not && { \"><![]-\".contains(ch) } && charS.hasNext) then {",
                                                                                                      "                    // map to unicode equavalents",
                                                                                                      "                    def nextCh = charS.next",
                                                                                                      "                    linePosition := linePosition + 1",
                                                                                                      "                    def bigraph = ch ++ nextCh",
                                                                                                      "                    if (bigraph == \">=\") then { mainBlock.apply \"≥\"",
                                                                                                      "                    } elseif { bigraph == \"<=\" } then { mainBlock.apply \"≤\"",
                                                                                                      "                    } elseif { bigraph == \"!=\" } then { mainBlock.apply \"≠\"",
                                                                                                      "                    } elseif { bigraph == \"[[\" } then { mainBlock.apply \"⟦\"",
                                                                                                      "                    } elseif { bigraph == \"]]\" } then { mainBlock.apply \"⟧\"",
                                                                                                      "                    } elseif { bigraph == \"->\" } then { mainBlock.apply \"→\"",
                                                                                                      "                    } else {",
                                                                                                      "                        linePosition := linePosition - 1",
                                                                                                      "                        mainBlock.apply(ch)",
                                                                                                      "                        linePosition := linePosition + 1",
                                                                                                      "                        mainBlock.apply(nextCh)",
                                                                                                      "                    }",
                                                                                                      "                } elseif { ((ch == \" \") && {\"dn\".contains(mode)}).not } then {",
                                                                                                      "                    mainBlock.apply(ch)",
                                                                                                      "                }",
                                                                                                      "            }",
                                                                                                      "            mainBlock.apply \"\\n\"",
                                                                                                      "        }",
                                                                                                      "        linePosition := linePosition + 1",
                                                                                                      "        if (inStr) then {",
                                                                                                      "            if (mode == \"\\\"\") then {",
                                                                                                      "                def suggestion = errormessages.suggestion.new",
                                                                                                      "                suggestion.addLine(lineNumber, util.lines.at(lineNumber) ++ \"\\\"\")",
                                                                                                      "                errormessages.syntaxError(\"a string must be terminated with a \\\" before the end of the line.\")atPosition(",
                                                                                                      "                    lineNumber, linePosition)withSuggestion(suggestion)",
                                                                                                      "            } elseif {mode == \"q\"} then {",
                                                                                                      "                errormessages.syntaxError(\"a multi-line string must end with a '›'.\\n\" ++",
                                                                                                      "                    \"String opened on line {startLine} and unclosed at end of input.\")",
                                                                                                      "                    atRange(startLine, stringStart, util.lines.at(startLine).size)",
                                                                                                      "            }",
                                                                                                      "        }",
                                                                                                      "        modechange(tokens, mode, accum)",
                                                                                                      "        tokens.push(eofToken)",
                                                                                                      "        tokens",
                                                                                                      "    }",
                                                                                                      "}",
                                                                                                      "",
                                                                                                      "" ];
                                                                                                  }
                                                                                                  if (typeof global !== "undefined")
                                                                                                    global.gracecode_lexer = gracecode_lexer;
                                                                                                  if (typeof window !== "undefined")
                                                                                                    window.gracecode_lexer = gracecode_lexer;
