#!/bin/bash

set -e
COMMIT=$1
ARCH=$2
FORM=$3

if [ "$COMMIT" = 33ff5ca19bfc5542fed0f22072676862660bf315 ]
then
    echo -n "Checking for default -Wl,--as-needed... "
    cat <<EOT >configure-$$.c
#include <dlfcn.h>

int main() {
dlopen(0, 0);
return 0;
}
EOT
    if ! gcc -o configure-$$.x -ldl configure-$$.c >/dev/null 2>&1
    then
        echo "yes."
        echo "Your system defaults to using -Wl,--as-needed. These systems"
        echo "must bootstrap from a tarball."
        echo "Use the tools/tarball-bootstrap script to do this."
        rm -f configure-$$.*
        exit 1
    else
        echo "no."
    fi
    echo -n "Checking for Cygwin..."
    if uname | grep -qi CYGWIN
    then
        echo "yes."
        echo "Cygwin systems must bootstrap from a tarball."
        echo "Use the tools/tarball-bootstrap script to do this."
        exit 1
    else
        echo "no."
    fi
fi

if which gmake >/dev/null 2>&1
then
    MAKE=gmake
else
    MAKE=make
fi

cat >EXCLUDE <<EOT
pax_global_header
known-good
tests
EOT

STATIC_BUILD=$(grep UNICODE_MODULE "$(git rev-parse --show-toplevel)/Makefile.conf" | grep gcn ; true)
( cd $(git rev-parse --show-toplevel) && git archive --prefix=tmp-$$/ $COMMIT ) | tar xf - -X EXCLUDE
cd tmp-$$
ln -s .. known-good
GEN=$( ( cd $(git rev-parse --show-toplevel) && tools/git-calculate-generation "$COMMIT" ) )
echo "#pragma DefaultVisibility=public" > buildinfo.gc
echo "method gitrevision() { \"$COMMIT\" }" >> buildinfo.gc
echo "method gitgeneration() { \"$GEN\" }" >> buildinfo.gc
echo "method prefix { \"/usr\" }" >> buildinfo.gc
echo "method includepath { \"/usr/include\" }" >> buildinfo.gc
echo "method modulepath { \"/usr/lib/grace/modules\" }" >> buildinfo.gc
echo "method objectpath { \"/usr/lib/grace\" }" >> buildinfo.gc
cp buildinfo.gc buildinfo.grace
./configure ${STATIC_BUILD:+--static}
$MAKE l2/minigrace
cd ..

if [ "$FORM" = "hyphenated" ]
then
    mkdir -p "$ARCH"
    mv tmp-$$/l2/minigrace $ARCH/minigrace-$COMMIT
    cp tmp-$$/l2/gracelib.o $ARCH/gracelib-$COMMIT.o
    cp tmp-$$/l2/gracelib.h $ARCH/gracelib-$COMMIT.h
else
    mkdir -p "$ARCH/$COMMIT"
    mv tmp-$$/l2/minigrace $ARCH/$COMMIT
    cp tmp-$$/l2/gracelib.o $ARCH/$COMMIT/gracelib.o
    cp tmp-$$/l2/gracelib.h $ARCH/$COMMIT/gracelib.h
    for x in gracelib.a unicode.gso unicode.gcn mirrors.{gso,gct}
    do
        [ -e tmp-$$/l2/$x ] && cp tmp-$$/l2/$x $ARCH/$COMMIT/$x
    done
fi
for x in tmp-$$/l2/*.c
do
   nm=$(basename "$x")
   nm=$(cut -d. -f1 <<<"$nm")
   mv $x independent/$nm-$COMMIT.c
done

rm -rf tmp-$$ EXCLUDE
