#!/bin/bash
# Use a tarball to provide known-good for bootstrapping

die() {
    echo "$@" >&2
    if [ "${TARBALL#http}" != "$TARBALL" ]
    then
        echo "Download $TARBALL and then pass the path to $(basename $TARBALL) to this script."
    fi
    exit 1
}

TARBALL=$1

if [ "$TARBALL" = "-a" ]
then
    pushd "$(git rev-parse --show-toplevel)" >/dev/null
    ver=$(tools/calculate-version STABLE)
    url=http://web.cecs.pdx.edu/~grace/minigrace/dist/minigrace-$ver.tar.bz2
    echo Will fetch tarball from $url...
    if wget --version >/dev/null 2>&1
    then
        wget "$url" || die "Error fetching file. Download tarball manually and re-run this script with the tarball as argument."
    elif curl --version >/dev/null 2>&1
    then
        curl -L -O "$url" || die "Error fetching file. Download tarball manually and re-run this script with the tarball as argument."
    else
        die "Neither wget nor curl were found. Unable to retrieve file automatically. Download tarball manually and re-run this script with the tarball as argument."
    fi
    echo "Download complete. Will compile now..."
    "$0" "minigrace-$ver.tar.bz2" || die "Failed to build. See above for details."
    rm -f minigrace-$ver.tar.bz2
    popd >/dev/null
    echo Done
    exit 0
elif ! [ "$TARBALL" ]
then
    echo "Usage: '$0 TARBALL\'  or '$0 -a'"
    echo "Compiles TARBALL and installs it as known-good bootstrap version."
    echo
    echo "You should download the tarball of a past bootstrap version. Then pass"
    echo "it to this script as TARBALL to install it for bootstrapping. Afterwards,"
    echo "\`make\` will build the latest version from the source repository."
    echo
    echo "'$0 -a' will download tarball and install it automatically."
    echo
    cd "$(git rev-parse --show-toplevel)"
    rev=$(awk -F= '/STABLE=/ { print $2 }' Makefile)
    tools/set-up-generations
    gen=$(tools/git-calculate-generation "$rev")
    echo "The tarball for the newest bootstrapping version should be called:"
    echo "   minigrace-$gen.tar.bz2"
    echo "and should be available from:"
    echo "   http://www.cs.pdx.edu/~grace/minigrace/dist/minigrace-$gen.tar.bz2"
    exit 0
fi

tar xf "$TARBALL" || die "Failed to extract tarball"
dir=$(sed 's/.tar.bz2//' < <(basename "$TARBALL"))
pushd "$dir"
./configure || die "Failed to configure tarball"
make || die "Failed to build"
hash=$(./minigrace --version | awk '/git revision/ { print $3 }')
kgdir=../known-good/$(uname -s)-$(uname -m)/$hash
if [ -e "$kgdir" ]
then
    echo
    echo "Known-good version $hash is already installed"
    echo "If you want to re-build it, delete the directory:"
    echo $kgdir | sed -e "s|../||"
    popd >/dev/null
    rm -rf "$dir"
    exit 0
fi
mkdir -p "$kgdir"
for f in gracelib.h gracelib.o minigrace unicode.{gso,gcn,gct} mirrors.{gso,gcn,gct} repl.{gso,gcn,gct}
do
    [ -e "$f" ] && cp $f "$kgdir/$f"
done
popd
rm -rf "$dir"
#ls -l "$dir"

echo Installed tarball $TARBALL into $kgdir. You can now run make.
